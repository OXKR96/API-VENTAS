{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api';\n\n// Configurar interceptor para el token\naxios.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Interceptor para manejar errores de autenticación\naxios.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport const api = {\n  // Auth\n  login: async credentials => {\n    try {\n      const {\n        data\n      } = await axios.post(`${API_URL}/users/login`, credentials);\n      if (data.token) {\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('user', JSON.stringify(data));\n      }\n      return data;\n    } catch (error) {\n      var _error$response2;\n      throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error;\n    }\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  },\n  // Products\n  createProduct: async product => {\n    const defaultProduct = {\n      costPrice: 0,\n      category: 'Otros',\n      minimumStock: 5,\n      taxes: 0,\n      isActive: true,\n      ...product\n    };\n    const {\n      data\n    } = await axios.post(`${API_URL}/products`, defaultProduct);\n    return data;\n  },\n  getProducts: async () => {\n    const {\n      data\n    } = await axios.get(`${API_URL}/products`);\n    return data;\n  },\n  updateProduct: async (id, product) => {\n    const {\n      data\n    } = await axios.put(`${API_URL}/products/${id}`, product);\n    return data;\n  },\n  deleteProduct: async id => {\n    const {\n      data\n    } = await axios.delete(`${API_URL}/products/${id}`);\n    return data;\n  },\n  getLowStockProducts: async () => {\n    const {\n      data\n    } = await axios.get(`${API_URL}/products/stock/low`);\n    return data;\n  },\n  getProductStats: async () => {\n    const {\n      data\n    } = await axios.get(`${API_URL}/products/stats`);\n    return data;\n  },\n  updateStock: async (id, quantity) => {\n    const {\n      data\n    } = await axios.put(`${API_URL}/products/${id}/stock`, {\n      quantity\n    });\n    return data;\n  },\n  // Sales\n  createSale: async sale => {\n    try {\n      // Aseguramos que la estructura de la venta sea correcta\n      const saleData = {\n        ...sale,\n        status: 'Completada',\n        items: sale.items.map(item => ({\n          product: item.product,\n          quantity: item.quantity,\n          price: item.price,\n          name: item.name,\n          subtotal: item.subtotal\n        })),\n        totalAmount: sale.totalAmount,\n        paymentMethod: sale.paymentMethod,\n        customerId: sale.customerId,\n        date: sale.date\n      };\n      console.log('Datos de venta a enviar:', saleData);\n      const {\n        data\n      } = await axios.post(`${API_URL}/sales`, saleData);\n      return data;\n    } catch (error) {\n      var _error$response3;\n      console.error('Error en createSale:', ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error);\n      throw error;\n    }\n  },\n  updateSale: async (id, sale) => {\n    try {\n      const saleData = {\n        ...sale,\n        status: 'Completada'\n      };\n      const {\n        data\n      } = await axios.put(`${API_URL}/sales/${id}`, saleData);\n      return data;\n    } catch (error) {\n      var _error$response4;\n      console.error('Error en updateSale:', ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error);\n      throw error;\n    }\n  },\n  getSales: async (filters = {}) => {\n    try {\n      var _filters$dateRange, _filters$dateRange2;\n      // Construir los parámetros de consulta\n      const params = new URLSearchParams();\n      if (filters.search) {\n        params.append('search', filters.search);\n      }\n      if ((_filters$dateRange = filters.dateRange) !== null && _filters$dateRange !== void 0 && _filters$dateRange.start) {\n        params.append('startDate', filters.dateRange.start);\n      }\n      if ((_filters$dateRange2 = filters.dateRange) !== null && _filters$dateRange2 !== void 0 && _filters$dateRange2.end) {\n        params.append('endDate', filters.dateRange.end);\n      }\n      if (filters.saleType) {\n        params.append('saleType', filters.saleType);\n      }\n      if (filters.status) {\n        params.append('status', filters.status);\n      }\n\n      // Agregar ordenamiento por fecha de creación descendente\n      params.append('sort', '-createdAt');\n      const {\n        data\n      } = await axios.get(`${API_URL}/sales?${params.toString()}`);\n      console.log('Datos brutos de la API:', data);\n\n      // Asegurarnos de que data sea un array\n      const sales = Array.isArray(data) ? data : Array.isArray(data.data) ? data.data : [];\n      console.log('Ventas procesadas:', sales);\n      return {\n        success: true,\n        data: sales\n      };\n    } catch (error) {\n      console.error('Error getting sales:', error);\n      throw error;\n    }\n  },\n  getSaleById: async id => {\n    const {\n      data\n    } = await axios.get(`${API_URL}/sales/${id}`);\n    return data;\n  },\n  getSalesByDateRange: async (startDate, endDate) => {\n    const {\n      data\n    } = await axios.get(`${API_URL}/sales/date-range?startDate=${startDate}&endDate=${endDate}`);\n    return data;\n  },\n  cancelSale: async id => {\n    try {\n      const {\n        data\n      } = await axios.delete(`${API_URL}/sales/${id}`);\n      return {\n        success: true,\n        message: 'Venta cancelada exitosamente',\n        data\n      };\n    } catch (error) {\n      console.error('Error al cancelar la venta:', error);\n      throw error;\n    }\n  },\n  getSalesStats: async () => {\n    const {\n      data\n    } = await axios.get(`${API_URL}/stats/sales`);\n    return data;\n  },\n  // Suppliers\n  getSuppliers: async () => {\n    const {\n      data\n    } = await axios.get(`${API_URL}/suppliers`);\n    return data;\n  },\n  createSupplier: async supplier => {\n    const {\n      data\n    } = await axios.post(`${API_URL}/suppliers`, supplier);\n    return data;\n  },\n  updateSupplier: async (id, supplier) => {\n    const {\n      data\n    } = await axios.put(`${API_URL}/suppliers/${id}`, supplier);\n    return data;\n  },\n  deleteSupplier: async id => {\n    const {\n      data\n    } = await axios.delete(`${API_URL}/suppliers/${id}`);\n    return data;\n  },\n  getSupplierById: async id => {\n    const {\n      data\n    } = await axios.get(`${API_URL}/suppliers/${id}`);\n    return data;\n  },\n  // Purchases\n  getPurchases: async () => {\n    const {\n      data\n    } = await axios.get(`${API_URL}/purchases`);\n    return data;\n  },\n  createPurchase: async purchase => {\n    const {\n      data\n    } = await axios.post(`${API_URL}/purchases`, purchase);\n    return data;\n  },\n  getPurchaseById: async id => {\n    const {\n      data\n    } = await axios.get(`${API_URL}/purchases/${id}`);\n    return data;\n  },\n  cancelPurchase: async id => {\n    const {\n      data\n    } = await axios.delete(`${API_URL}/purchases/${id}`);\n    return data;\n  },\n  getPurchaseReport: async (startDate, endDate) => {\n    const {\n      data\n    } = await axios.get(`${API_URL}/purchases/reports?startDate=${startDate}&endDate=${endDate}`);\n    return data;\n  },\n  // Dashboard\n  getStats: async () => {\n    try {\n      const [salesStats, debtStats, inventoryStats] = await Promise.all([axios.get(`${API_URL}/stats/sales`), axios.get(`${API_URL}/stats/debt`), axios.get(`${API_URL}/stats/inventory`)]);\n      return {\n        salesStats: salesStats.data,\n        debtStats: debtStats.data,\n        inventoryStats: inventoryStats.data\n      };\n    } catch (error) {\n      console.error('Error getting stats:', error);\n      throw error;\n    }\n  },\n  // Customers\n  getCustomers: async (filters = {}) => {\n    try {\n      const queryParams = new URLSearchParams(filters).toString();\n      const {\n        data\n      } = await axios.get(`${API_URL}/customers${queryParams ? `?${queryParams}` : ''}`);\n      return data;\n    } catch (error) {\n      console.error('Error getting customers:', error);\n      throw error;\n    }\n  },\n  createCustomer: async customerData => {\n    try {\n      console.log('API - Datos enviados:', customerData);\n      const {\n        data\n      } = await axios.post(`${API_URL}/customers`, customerData);\n      return data;\n    } catch (error) {\n      var _error$response5;\n      console.error('API - Error:', (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data);\n      throw error;\n    }\n  },\n  updateCustomer: async (id, customer) => {\n    try {\n      const {\n        data\n      } = await axios.put(`${API_URL}/customers/${id}`, customer);\n      return data;\n    } catch (error) {\n      console.error('API - Error updating customer:', error);\n      throw error;\n    }\n  },\n  deleteCustomer: async id => {\n    const {\n      data\n    } = await axios.delete(`${API_URL}/customers/${id}`);\n    return data;\n  },\n  getCustomerById: async id => {\n    const {\n      data\n    } = await axios.get(`${API_URL}/customers/${id}`);\n    return data;\n  },\n  getCustomerPendingSales: async customerId => {\n    const {\n      data\n    } = await axios.get(`${API_URL}/customers/${customerId}/pending-sales`);\n    return data;\n  },\n  registerCustomerPayment: async (customerId, paymentData) => {\n    try {\n      const {\n        data\n      } = await axios.post(`${API_URL}/customers/${customerId}/payments`, paymentData);\n      return data;\n    } catch (error) {\n      console.error('API - Error registering payment:', error);\n      throw error;\n    }\n  },\n  getCustomerPaymentHistory: async customerId => {\n    const {\n      data\n    } = await axios.get(`${API_URL}/customers/${customerId}/payments`);\n    return data;\n  },\n  getDebtStats: async () => {\n    const {\n      data\n    } = await axios.get(`${API_URL}/stats/debt`);\n    return data;\n  },\n  // Estadísticas\n  getInventoryStats: async () => {\n    const {\n      data\n    } = await axios.get(`${API_URL}/stats/inventory`);\n    return data;\n  }\n};","map":{"version":3,"names":["axios","API_URL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","response","error","_error$response","status","removeItem","window","location","href","Promise","reject","api","login","credentials","data","post","setItem","JSON","stringify","_error$response2","logout","createProduct","product","defaultProduct","costPrice","category","minimumStock","taxes","isActive","getProducts","get","updateProduct","id","put","deleteProduct","delete","getLowStockProducts","getProductStats","updateStock","quantity","createSale","sale","saleData","items","map","item","price","name","subtotal","totalAmount","paymentMethod","customerId","date","console","log","_error$response3","updateSale","_error$response4","getSales","filters","_filters$dateRange","_filters$dateRange2","params","URLSearchParams","search","append","dateRange","start","end","saleType","toString","sales","Array","isArray","success","getSaleById","getSalesByDateRange","startDate","endDate","cancelSale","message","getSalesStats","getSuppliers","createSupplier","supplier","updateSupplier","deleteSupplier","getSupplierById","getPurchases","createPurchase","purchase","getPurchaseById","cancelPurchase","getPurchaseReport","getStats","salesStats","debtStats","inventoryStats","all","getCustomers","queryParams","createCustomer","customerData","_error$response5","updateCustomer","customer","deleteCustomer","getCustomerById","getCustomerPendingSales","registerCustomerPayment","paymentData","getCustomerPaymentHistory","getDebtStats","getInventoryStats"],"sources":["C:/Users/OXKR/Documents/2025/API-VENTAS/pos-frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\n// Configurar interceptor para el token\r\naxios.interceptors.request.use(\r\n  config => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  }\r\n);\r\n\r\n// Interceptor para manejar errores de autenticación\r\naxios.interceptors.response.use(\r\n  response => response,\r\n  error => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const api = {\r\n  // Auth\r\n  login: async (credentials) => {\r\n    try {\r\n      const { data } = await axios.post(`${API_URL}/users/login`, credentials);\r\n      if (data.token) {\r\n        localStorage.setItem('token', data.token);\r\n        localStorage.setItem('user', JSON.stringify(data));\r\n      }\r\n      return data;\r\n    } catch (error) {\r\n      throw error.response?.data || error;\r\n    }\r\n  },\r\n\r\n  logout: () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    window.location.href = '/login';\r\n  },\r\n\r\n  // Products\r\n  createProduct: async (product) => {\r\n    const defaultProduct = {\r\n      costPrice: 0,\r\n      category: 'Otros',\r\n      minimumStock: 5,\r\n      taxes: 0,\r\n      isActive: true,\r\n      ...product\r\n    };\r\n    const { data } = await axios.post(`${API_URL}/products`, defaultProduct);\r\n    return data;\r\n  },\r\n\r\n  getProducts: async () => {\r\n    const { data } = await axios.get(`${API_URL}/products`);\r\n    return data;\r\n  },\r\n\r\n  updateProduct: async (id, product) => {\r\n    const { data } = await axios.put(`${API_URL}/products/${id}`, product);\r\n    return data;\r\n  },\r\n\r\n  deleteProduct: async (id) => {\r\n    const { data } = await axios.delete(`${API_URL}/products/${id}`);\r\n    return data;\r\n  },\r\n\r\n  getLowStockProducts: async () => {\r\n    const { data } = await axios.get(`${API_URL}/products/stock/low`);\r\n    return data;\r\n  },\r\n\r\n  getProductStats: async () => {\r\n    const { data } = await axios.get(`${API_URL}/products/stats`);\r\n    return data;\r\n  },\r\n\r\n  updateStock: async (id, quantity) => {\r\n    const { data } = await axios.put(`${API_URL}/products/${id}/stock`, { quantity });\r\n    return data;\r\n  },\r\n\r\n  // Sales\r\n  createSale: async (sale) => {\r\n    try {\r\n      // Aseguramos que la estructura de la venta sea correcta\r\n      const saleData = {\r\n        ...sale,\r\n        status: 'Completada',\r\n        items: sale.items.map(item => ({\r\n          product: item.product,\r\n          quantity: item.quantity,\r\n          price: item.price,\r\n          name: item.name,\r\n          subtotal: item.subtotal\r\n        })),\r\n        totalAmount: sale.totalAmount,\r\n        paymentMethod: sale.paymentMethod,\r\n        customerId: sale.customerId,\r\n        date: sale.date\r\n      };\r\n\r\n      console.log('Datos de venta a enviar:', saleData);\r\n      const { data } = await axios.post(`${API_URL}/sales`, saleData);\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error en createSale:', error.response?.data || error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  updateSale: async (id, sale) => {\r\n    try {\r\n      const saleData = {\r\n        ...sale,\r\n        status: 'Completada'\r\n      };\r\n      const { data } = await axios.put(`${API_URL}/sales/${id}`, saleData);\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error en updateSale:', error.response?.data || error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getSales: async (filters = {}) => {\r\n    try {\r\n      // Construir los parámetros de consulta\r\n      const params = new URLSearchParams();\r\n      \r\n      if (filters.search) {\r\n        params.append('search', filters.search);\r\n      }\r\n      \r\n      if (filters.dateRange?.start) {\r\n        params.append('startDate', filters.dateRange.start);\r\n      }\r\n      \r\n      if (filters.dateRange?.end) {\r\n        params.append('endDate', filters.dateRange.end);\r\n      }\r\n      \r\n      if (filters.saleType) {\r\n        params.append('saleType', filters.saleType);\r\n      }\r\n      \r\n      if (filters.status) {\r\n        params.append('status', filters.status);\r\n      }\r\n\r\n      // Agregar ordenamiento por fecha de creación descendente\r\n      params.append('sort', '-createdAt');\r\n\r\n      const { data } = await axios.get(`${API_URL}/sales?${params.toString()}`);\r\n      console.log('Datos brutos de la API:', data);\r\n      \r\n      // Asegurarnos de que data sea un array\r\n      const sales = Array.isArray(data) ? data : Array.isArray(data.data) ? data.data : [];\r\n      console.log('Ventas procesadas:', sales);\r\n      \r\n      return {\r\n        success: true,\r\n        data: sales\r\n      };\r\n    } catch (error) {\r\n      console.error('Error getting sales:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getSaleById: async (id) => {\r\n    const { data } = await axios.get(`${API_URL}/sales/${id}`);\r\n    return data;\r\n  },\r\n\r\n  getSalesByDateRange: async (startDate, endDate) => {\r\n    const { data } = await axios.get(`${API_URL}/sales/date-range?startDate=${startDate}&endDate=${endDate}`);\r\n    return data;\r\n  },\r\n\r\n  cancelSale: async (id) => {\r\n    try {\r\n      const { data } = await axios.delete(`${API_URL}/sales/${id}`);\r\n      return {\r\n        success: true,\r\n        message: 'Venta cancelada exitosamente',\r\n        data\r\n      };\r\n    } catch (error) {\r\n      console.error('Error al cancelar la venta:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getSalesStats: async () => {\r\n    const { data } = await axios.get(`${API_URL}/stats/sales`);\r\n    return data;\r\n  },\r\n\r\n  // Suppliers\r\n  getSuppliers: async () => {\r\n    const { data } = await axios.get(`${API_URL}/suppliers`);\r\n    return data;\r\n  },\r\n\r\n  createSupplier: async (supplier) => {\r\n    const { data } = await axios.post(`${API_URL}/suppliers`, supplier);\r\n    return data;\r\n  },\r\n\r\n  updateSupplier: async (id, supplier) => {\r\n    const { data } = await axios.put(`${API_URL}/suppliers/${id}`, supplier);\r\n    return data;\r\n  },\r\n\r\n  deleteSupplier: async (id) => {\r\n    const { data } = await axios.delete(`${API_URL}/suppliers/${id}`);\r\n    return data;\r\n  },\r\n\r\n  getSupplierById: async (id) => {\r\n    const { data } = await axios.get(`${API_URL}/suppliers/${id}`);\r\n    return data;\r\n  },\r\n\r\n  // Purchases\r\n  getPurchases: async () => {\r\n    const { data } = await axios.get(`${API_URL}/purchases`);\r\n    return data;\r\n  },\r\n\r\n  createPurchase: async (purchase) => {\r\n    const { data } = await axios.post(`${API_URL}/purchases`, purchase);\r\n    return data;\r\n  },\r\n\r\n  getPurchaseById: async (id) => {\r\n    const { data } = await axios.get(`${API_URL}/purchases/${id}`);\r\n    return data;\r\n  },\r\n\r\n  cancelPurchase: async (id) => {\r\n    const { data } = await axios.delete(`${API_URL}/purchases/${id}`);\r\n    return data;\r\n  },\r\n\r\n  getPurchaseReport: async (startDate, endDate) => {\r\n    const { data } = await axios.get(`${API_URL}/purchases/reports?startDate=${startDate}&endDate=${endDate}`);\r\n    return data;\r\n  },\r\n\r\n  // Dashboard\r\n  getStats: async () => {\r\n    try {\r\n      const [salesStats, debtStats, inventoryStats] = await Promise.all([\r\n        axios.get(`${API_URL}/stats/sales`),\r\n        axios.get(`${API_URL}/stats/debt`),\r\n        axios.get(`${API_URL}/stats/inventory`)\r\n      ]);\r\n      return {\r\n        salesStats: salesStats.data,\r\n        debtStats: debtStats.data,\r\n        inventoryStats: inventoryStats.data\r\n      };\r\n    } catch (error) {\r\n      console.error('Error getting stats:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Customers\r\n  getCustomers: async (filters = {}) => {\r\n    try {\r\n      const queryParams = new URLSearchParams(filters).toString();\r\n      const { data } = await axios.get(`${API_URL}/customers${queryParams ? `?${queryParams}` : ''}`);\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error getting customers:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  createCustomer: async (customerData) => {\r\n    try {\r\n      console.log('API - Datos enviados:', customerData);\r\n      const { data } = await axios.post(`${API_URL}/customers`, customerData);\r\n      return data;\r\n    } catch (error) {\r\n      console.error('API - Error:', error.response?.data);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  updateCustomer: async (id, customer) => {\r\n    try {\r\n      const { data } = await axios.put(`${API_URL}/customers/${id}`, customer);\r\n      return data;\r\n    } catch (error) {\r\n      console.error('API - Error updating customer:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  deleteCustomer: async (id) => {\r\n    const { data } = await axios.delete(`${API_URL}/customers/${id}`);\r\n    return data;\r\n  },\r\n\r\n  getCustomerById: async (id) => {\r\n    const { data } = await axios.get(`${API_URL}/customers/${id}`);\r\n    return data;\r\n  },\r\n\r\n  getCustomerPendingSales: async (customerId) => {\r\n    const { data } = await axios.get(`${API_URL}/customers/${customerId}/pending-sales`);\r\n    return data;\r\n  },\r\n\r\n  registerCustomerPayment: async (customerId, paymentData) => {\r\n    try {\r\n      const { data } = await axios.post(`${API_URL}/customers/${customerId}/payments`, paymentData);\r\n      return data;\r\n    } catch (error) {\r\n      console.error('API - Error registering payment:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getCustomerPaymentHistory: async (customerId) => {\r\n    const { data } = await axios.get(`${API_URL}/customers/${customerId}/payments`);\r\n    return data;\r\n  },\r\n\r\n  getDebtStats: async () => {\r\n    const { data } = await axios.get(`${API_URL}/stats/debt`);\r\n    return data;\r\n  },\r\n\r\n  // Estadísticas\r\n  getInventoryStats: async () => {\r\n    const { data } = await axios.get(`${API_URL}/stats/inventory`);\r\n    return data;\r\n  },\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}