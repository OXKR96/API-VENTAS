{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OXKR\\\\Documents\\\\2025\\\\API-VENTAS\\\\pos-frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\n// src/context/AuthContext.js\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [userInfo, setUserInfo] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Verificar si hay un usuario en localStorage\n    const checkLoggedIn = async () => {\n      const storedUser = localStorage.getItem('userInfo');\n      if (storedUser) {\n        try {\n          const userData = JSON.parse(storedUser);\n          setUserInfo(userData);\n          setIsAuthenticated(true);\n\n          // Configurar axios con el token\n          axios.defaults.headers.common['Authorization'] = `Bearer ${userData.token}`;\n\n          // Opcional: Verificar validez del token con el backend\n        } catch (error) {\n          console.error('Error al recuperar sesión:', error);\n          logout();\n        }\n      }\n      setIsLoading(false);\n    };\n    checkLoggedIn();\n  }, []);\n\n  // Función para iniciar sesión\n  const login = async (email, password) => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      const response = await axios.post('/api/auth/login', {\n        email,\n        password\n      });\n      const userData = response.data;\n\n      // Guardar en localStorage\n      localStorage.setItem('userInfo', JSON.stringify(userData));\n\n      // Configurar axios con el token\n      axios.defaults.headers.common['Authorization'] = `Bearer ${userData.token}`;\n      setUserInfo(userData);\n      setIsAuthenticated(true);\n      setIsLoading(false);\n      return {\n        success: true\n      };\n    } catch (error) {\n      setIsLoading(false);\n      const message = error.response && error.response.data.message ? error.response.data.message : 'Error al iniciar sesión';\n      setError(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n\n  // Función para cerrar sesión\n  const logout = () => {\n    localStorage.removeItem('userInfo');\n    delete axios.defaults.headers.common['Authorization'];\n    setUserInfo(null);\n    setIsAuthenticated(false);\n  };\n\n  // Verificar si el usuario es administrador\n  const isAdmin = () => {\n    return userInfo && (userInfo.tipo === 'Administrativo' || userInfo.tipo === 'Super Usuario');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      userInfo,\n      isLoading,\n      isAuthenticated,\n      error,\n      login,\n      logout,\n      isAdmin\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"T2lcgHapgjw4P5Asnigx3yWBa5w=\");\n_c = AuthProvider;\nexport default AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","userInfo","setUserInfo","isLoading","setIsLoading","isAuthenticated","setIsAuthenticated","error","setError","checkLoggedIn","storedUser","localStorage","getItem","userData","JSON","parse","defaults","headers","common","token","console","logout","login","email","password","response","post","data","setItem","stringify","success","message","removeItem","isAdmin","tipo","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/OXKR/Documents/2025/API-VENTAS/pos-frontend/src/context/AuthContext.js"],"sourcesContent":["// src/context/AuthContext.js\r\nimport React, { createContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Verificar si hay un usuario en localStorage\r\n    const checkLoggedIn = async () => {\r\n      const storedUser = localStorage.getItem('userInfo');\r\n      \r\n      if (storedUser) {\r\n        try {\r\n          const userData = JSON.parse(storedUser);\r\n          setUserInfo(userData);\r\n          setIsAuthenticated(true);\r\n          \r\n          // Configurar axios con el token\r\n          axios.defaults.headers.common['Authorization'] = `Bearer ${userData.token}`;\r\n          \r\n          // Opcional: Verificar validez del token con el backend\r\n        } catch (error) {\r\n          console.error('Error al recuperar sesión:', error);\r\n          logout();\r\n        }\r\n      }\r\n      \r\n      setIsLoading(false);\r\n    };\r\n\r\n    checkLoggedIn();\r\n  }, []);\r\n\r\n  // Función para iniciar sesión\r\n  const login = async (email, password) => {\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await axios.post('/api/auth/login', { email, password });\r\n      const userData = response.data;\r\n      \r\n      // Guardar en localStorage\r\n      localStorage.setItem('userInfo', JSON.stringify(userData));\r\n      \r\n      // Configurar axios con el token\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${userData.token}`;\r\n      \r\n      setUserInfo(userData);\r\n      setIsAuthenticated(true);\r\n      setIsLoading(false);\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      \r\n      const message = \r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : 'Error al iniciar sesión';\r\n      \r\n      setError(message);\r\n      return { success: false, message };\r\n    }\r\n  };\r\n\r\n  // Función para cerrar sesión\r\n  const logout = () => {\r\n    localStorage.removeItem('userInfo');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n    setUserInfo(null);\r\n    setIsAuthenticated(false);\r\n  };\r\n\r\n  // Verificar si el usuario es administrador\r\n  const isAdmin = () => {\r\n    return userInfo && (userInfo.tipo === 'Administrativo' || userInfo.tipo === 'Super Usuario');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        userInfo,\r\n        isLoading,\r\n        isAuthenticated,\r\n        error,\r\n        login,\r\n        logout,\r\n        isAdmin\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthProvider;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}