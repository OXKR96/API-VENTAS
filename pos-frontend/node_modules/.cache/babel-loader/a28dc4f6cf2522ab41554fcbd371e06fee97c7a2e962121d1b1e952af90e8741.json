{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api';\n\n// Configurar interceptor para el token\naxios.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Interceptor para manejar errores de autenticación\naxios.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport const api = {\n  // Auth\n  login: async credentials => {\n    try {\n      const {\n        data\n      } = await axios.post(`${API_URL}/users/login`, credentials);\n      if (data.token) {\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('user', JSON.stringify(data));\n      }\n      return data;\n    } catch (error) {\n      var _error$response2;\n      throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error;\n    }\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  },\n  // Products\n  createProduct: async product => {\n    const defaultProduct = {\n      costPrice: 0,\n      category: 'Otros',\n      minimumStock: 5,\n      taxes: 0,\n      isActive: true,\n      ...product\n    };\n    const {\n      data\n    } = await axios.post(`${API_URL}/products`, defaultProduct);\n    return data;\n  },\n  getProducts: async () => {\n    const {\n      data\n    } = await axios.get(`${API_URL}/products`);\n    return data;\n  },\n  updateProduct: async (id, product) => {\n    const {\n      data\n    } = await axios.put(`${API_URL}/products/${id}`, product);\n    return data;\n  },\n  deleteProduct: async id => {\n    const {\n      data\n    } = await axios.delete(`${API_URL}/products/${id}`);\n    return data;\n  },\n  getLowStockProducts: async () => {\n    const {\n      data\n    } = await axios.get(`${API_URL}/products/stock/low`);\n    return data;\n  },\n  getProductStats: async () => {\n    const {\n      data\n    } = await axios.get(`${API_URL}/products/stats`);\n    return data;\n  },\n  updateStock: async (id, quantity) => {\n    const {\n      data\n    } = await axios.put(`${API_URL}/products/${id}/stock`, {\n      quantity\n    });\n    return data;\n  },\n  // Sales\n  createSale: async sale => {\n    try {\n      const saleData = {\n        ...sale,\n        status: 'Completada',\n        taxDetails: {\n          taxRate: 0.19,\n          subtotal: sale.totalAmount,\n          taxAmount: sale.totalAmount * 0.19,\n          total: sale.totalAmount * 1.19\n        }\n      };\n      console.log('Datos de venta a enviar:', saleData);\n      const {\n        data\n      } = await axios.post(`${API_URL}/sales`, saleData);\n      return data;\n    } catch (error) {\n      var _error$response3;\n      console.error('Error en createSale:', ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error);\n      throw error;\n    }\n  },\n  updateSale: async (id, sale) => {\n    try {\n      const saleData = {\n        ...sale,\n        status: 'Completada'\n      };\n      const {\n        data\n      } = await axios.put(`${API_URL}/sales/${id}`, saleData);\n      return data;\n    } catch (error) {\n      var _error$response4;\n      console.error('Error en updateSale:', ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error);\n      throw error;\n    }\n  },\n  getSales: async () => {\n    const {\n      data\n    } = await axios.get(`${API_URL}/sales`);\n    return data;\n  },\n  getSaleById: async id => {\n    const {\n      data\n    } = await axios.get(`${API_URL}/sales/${id}`);\n    return data;\n  },\n  getSalesByDateRange: async (startDate, endDate) => {\n    const {\n      data\n    } = await axios.get(`${API_URL}/sales/date-range?startDate=${startDate}&endDate=${endDate}`);\n    return data;\n  },\n  cancelSale: async id => {\n    try {\n      const {\n        data\n      } = await axios.delete(`${API_URL}/sales/${id}/cancel`);\n      return data;\n    } catch (error) {\n      var _error$response5;\n      console.error('Error en cancelSale:', ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error);\n      throw error;\n    }\n  },\n  getSalesStats: async () => {\n    try {\n      const {\n        data\n      } = await axios.get(`${API_URL}/sales/stats`);\n      return {\n        success: true,\n        ...data,\n        customerStats: {\n          totalCustomers: 0,\n          totalDebt: 0,\n          customersByStatus: {\n            AL_DIA: 0,\n            EN_MORA: 0,\n            BLOQUEADO: 0\n          },\n          ...data.customerStats\n        },\n        monthlySales: data.monthlySales || [],\n        topProducts: data.topProducts || [],\n        topDebtors: data.topDebtors || []\n      };\n    } catch (error) {\n      console.error('Error al obtener estadísticas:', error);\n      return {\n        success: false,\n        totalProducts: 0,\n        lowStockProducts: 0,\n        totalSales: 0,\n        totalRevenue: 0,\n        customerStats: {\n          totalCustomers: 0,\n          totalDebt: 0,\n          customersByStatus: {\n            AL_DIA: 0,\n            EN_MORA: 0,\n            BLOQUEADO: 0\n          }\n        },\n        monthlySales: [],\n        topProducts: [],\n        topDebtors: []\n      };\n    }\n  },\n  // Suppliers\n  getSuppliers: async () => {\n    const {\n      data\n    } = await axios.get(`${API_URL}/suppliers`);\n    return data;\n  },\n  createSupplier: async supplier => {\n    const {\n      data\n    } = await axios.post(`${API_URL}/suppliers`, supplier);\n    return data;\n  },\n  updateSupplier: async (id, supplier) => {\n    const {\n      data\n    } = await axios.put(`${API_URL}/suppliers/${id}`, supplier);\n    return data;\n  },\n  deleteSupplier: async id => {\n    const {\n      data\n    } = await axios.delete(`${API_URL}/suppliers/${id}`);\n    return data;\n  },\n  getSupplierById: async id => {\n    const {\n      data\n    } = await axios.get(`${API_URL}/suppliers/${id}`);\n    return data;\n  },\n  // Purchases\n  getPurchases: async () => {\n    const {\n      data\n    } = await axios.get(`${API_URL}/purchases`);\n    return data;\n  },\n  createPurchase: async purchase => {\n    const {\n      data\n    } = await axios.post(`${API_URL}/purchases`, purchase);\n    return data;\n  },\n  getPurchaseById: async id => {\n    const {\n      data\n    } = await axios.get(`${API_URL}/purchases/${id}`);\n    return data;\n  },\n  cancelPurchase: async id => {\n    const {\n      data\n    } = await axios.delete(`${API_URL}/purchases/${id}`);\n    return data;\n  },\n  getPurchaseReport: async (startDate, endDate) => {\n    const {\n      data\n    } = await axios.get(`${API_URL}/purchases/reports?startDate=${startDate}&endDate=${endDate}`);\n    return data;\n  },\n  // Dashboard\n  getStats: async () => {\n    try {\n      const [products, sales] = await Promise.all([axios.get(`${API_URL}/products/count`), axios.get(`${API_URL}/sales/stats`)]);\n      return {\n        totalProducts: products.data.count,\n        lowStockProducts: products.data.lowStockCount,\n        totalSales: sales.data.totalSales,\n        totalRevenue: sales.data.totalRevenue\n      };\n    } catch (error) {\n      console.error('Error getting stats:', error);\n      return {\n        totalProducts: 0,\n        lowStockProducts: 0,\n        totalSales: 0,\n        totalRevenue: 0\n      };\n    }\n  },\n  // Customers\n  getCustomers: async () => {\n    const {\n      data\n    } = await axios.get(`${API_URL}/customers`);\n    return data;\n  },\n  createCustomer: async customer => {\n    const {\n      data\n    } = await axios.post(`${API_URL}/customers`, customer);\n    return data;\n  },\n  updateCustomer: async (id, customer) => {\n    const {\n      data\n    } = await axios.put(`${API_URL}/customers/${id}`, customer);\n    return data;\n  },\n  deleteCustomer: async id => {\n    const {\n      data\n    } = await axios.delete(`${API_URL}/customers/${id}`);\n    return data;\n  },\n  getCustomerById: async id => {\n    const {\n      data\n    } = await axios.get(`${API_URL}/customers/${id}`);\n    return data;\n  },\n  registerCustomerPayment: async (customerId, payment) => {\n    const {\n      data\n    } = await axios.post(`${API_URL}/customers/${customerId}/payments`, payment);\n    return data;\n  },\n  getCustomerPaymentHistory: async customerId => {\n    const {\n      data\n    } = await axios.get(`${API_URL}/customers/${customerId}/payments`);\n    return data;\n  }\n};","map":{"version":3,"names":["axios","API_URL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","response","error","_error$response","status","removeItem","window","location","href","Promise","reject","api","login","credentials","data","post","setItem","JSON","stringify","_error$response2","logout","createProduct","product","defaultProduct","costPrice","category","minimumStock","taxes","isActive","getProducts","get","updateProduct","id","put","deleteProduct","delete","getLowStockProducts","getProductStats","updateStock","quantity","createSale","sale","saleData","taxDetails","taxRate","subtotal","totalAmount","taxAmount","total","console","log","_error$response3","updateSale","_error$response4","getSales","getSaleById","getSalesByDateRange","startDate","endDate","cancelSale","_error$response5","getSalesStats","success","customerStats","totalCustomers","totalDebt","customersByStatus","AL_DIA","EN_MORA","BLOQUEADO","monthlySales","topProducts","topDebtors","totalProducts","lowStockProducts","totalSales","totalRevenue","getSuppliers","createSupplier","supplier","updateSupplier","deleteSupplier","getSupplierById","getPurchases","createPurchase","purchase","getPurchaseById","cancelPurchase","getPurchaseReport","getStats","products","sales","all","count","lowStockCount","getCustomers","createCustomer","customer","updateCustomer","deleteCustomer","getCustomerById","registerCustomerPayment","customerId","payment","getCustomerPaymentHistory"],"sources":["C:/Users/OXKR/Documents/2025/API-VENTAS/pos-frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\n// Configurar interceptor para el token\r\naxios.interceptors.request.use(\r\n  config => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  }\r\n);\r\n\r\n// Interceptor para manejar errores de autenticación\r\naxios.interceptors.response.use(\r\n  response => response,\r\n  error => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const api = {\r\n  // Auth\r\n  login: async (credentials) => {\r\n    try {\r\n      const { data } = await axios.post(`${API_URL}/users/login`, credentials);\r\n      if (data.token) {\r\n        localStorage.setItem('token', data.token);\r\n        localStorage.setItem('user', JSON.stringify(data));\r\n      }\r\n      return data;\r\n    } catch (error) {\r\n      throw error.response?.data || error;\r\n    }\r\n  },\r\n\r\n  logout: () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    window.location.href = '/login';\r\n  },\r\n\r\n  // Products\r\n  createProduct: async (product) => {\r\n    const defaultProduct = {\r\n      costPrice: 0,\r\n      category: 'Otros',\r\n      minimumStock: 5,\r\n      taxes: 0,\r\n      isActive: true,\r\n      ...product\r\n    };\r\n    const { data } = await axios.post(`${API_URL}/products`, defaultProduct);\r\n    return data;\r\n  },\r\n\r\n  getProducts: async () => {\r\n    const { data } = await axios.get(`${API_URL}/products`);\r\n    return data;\r\n  },\r\n\r\n  updateProduct: async (id, product) => {\r\n    const { data } = await axios.put(`${API_URL}/products/${id}`, product);\r\n    return data;\r\n  },\r\n\r\n  deleteProduct: async (id) => {\r\n    const { data } = await axios.delete(`${API_URL}/products/${id}`);\r\n    return data;\r\n  },\r\n\r\n  getLowStockProducts: async () => {\r\n    const { data } = await axios.get(`${API_URL}/products/stock/low`);\r\n    return data;\r\n  },\r\n\r\n  getProductStats: async () => {\r\n    const { data } = await axios.get(`${API_URL}/products/stats`);\r\n    return data;\r\n  },\r\n\r\n  updateStock: async (id, quantity) => {\r\n    const { data } = await axios.put(`${API_URL}/products/${id}/stock`, { quantity });\r\n    return data;\r\n  },\r\n\r\n  // Sales\r\n  createSale: async (sale) => {\r\n    try {\r\n      const saleData = {\r\n        ...sale,\r\n        status: 'Completada',\r\n        taxDetails: {\r\n          taxRate: 0.19,\r\n          subtotal: sale.totalAmount,\r\n          taxAmount: sale.totalAmount * 0.19,\r\n          total: sale.totalAmount * 1.19\r\n        }\r\n      };\r\n      console.log('Datos de venta a enviar:', saleData);\r\n      const { data } = await axios.post(`${API_URL}/sales`, saleData);\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error en createSale:', error.response?.data || error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  updateSale: async (id, sale) => {\r\n    try {\r\n      const saleData = {\r\n        ...sale,\r\n        status: 'Completada'\r\n      };\r\n      const { data } = await axios.put(`${API_URL}/sales/${id}`, saleData);\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error en updateSale:', error.response?.data || error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getSales: async () => {\r\n    const { data } = await axios.get(`${API_URL}/sales`);\r\n    return data;\r\n  },\r\n\r\n  getSaleById: async (id) => {\r\n    const { data } = await axios.get(`${API_URL}/sales/${id}`);\r\n    return data;\r\n  },\r\n\r\n  getSalesByDateRange: async (startDate, endDate) => {\r\n    const { data } = await axios.get(`${API_URL}/sales/date-range?startDate=${startDate}&endDate=${endDate}`);\r\n    return data;\r\n  },\r\n\r\n  cancelSale: async (id) => {\r\n    try {\r\n      const { data } = await axios.delete(`${API_URL}/sales/${id}/cancel`);\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error en cancelSale:', error.response?.data || error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getSalesStats: async () => {\r\n    try {\r\n      const { data } = await axios.get(`${API_URL}/sales/stats`);\r\n      return {\r\n        success: true,\r\n        ...data,\r\n        customerStats: {\r\n          totalCustomers: 0,\r\n          totalDebt: 0,\r\n          customersByStatus: {\r\n            AL_DIA: 0,\r\n            EN_MORA: 0,\r\n            BLOQUEADO: 0\r\n          },\r\n          ...data.customerStats\r\n        },\r\n        monthlySales: data.monthlySales || [],\r\n        topProducts: data.topProducts || [],\r\n        topDebtors: data.topDebtors || []\r\n      };\r\n    } catch (error) {\r\n      console.error('Error al obtener estadísticas:', error);\r\n      return {\r\n        success: false,\r\n        totalProducts: 0,\r\n        lowStockProducts: 0,\r\n        totalSales: 0,\r\n        totalRevenue: 0,\r\n        customerStats: {\r\n          totalCustomers: 0,\r\n          totalDebt: 0,\r\n          customersByStatus: {\r\n            AL_DIA: 0,\r\n            EN_MORA: 0,\r\n            BLOQUEADO: 0\r\n          }\r\n        },\r\n        monthlySales: [],\r\n        topProducts: [],\r\n        topDebtors: []\r\n      };\r\n    }\r\n  },\r\n\r\n  // Suppliers\r\n  getSuppliers: async () => {\r\n    const { data } = await axios.get(`${API_URL}/suppliers`);\r\n    return data;\r\n  },\r\n\r\n  createSupplier: async (supplier) => {\r\n    const { data } = await axios.post(`${API_URL}/suppliers`, supplier);\r\n    return data;\r\n  },\r\n\r\n  updateSupplier: async (id, supplier) => {\r\n    const { data } = await axios.put(`${API_URL}/suppliers/${id}`, supplier);\r\n    return data;\r\n  },\r\n\r\n  deleteSupplier: async (id) => {\r\n    const { data } = await axios.delete(`${API_URL}/suppliers/${id}`);\r\n    return data;\r\n  },\r\n\r\n  getSupplierById: async (id) => {\r\n    const { data } = await axios.get(`${API_URL}/suppliers/${id}`);\r\n    return data;\r\n  },\r\n\r\n  // Purchases\r\n  getPurchases: async () => {\r\n    const { data } = await axios.get(`${API_URL}/purchases`);\r\n    return data;\r\n  },\r\n\r\n  createPurchase: async (purchase) => {\r\n    const { data } = await axios.post(`${API_URL}/purchases`, purchase);\r\n    return data;\r\n  },\r\n\r\n  getPurchaseById: async (id) => {\r\n    const { data } = await axios.get(`${API_URL}/purchases/${id}`);\r\n    return data;\r\n  },\r\n\r\n  cancelPurchase: async (id) => {\r\n    const { data } = await axios.delete(`${API_URL}/purchases/${id}`);\r\n    return data;\r\n  },\r\n\r\n  getPurchaseReport: async (startDate, endDate) => {\r\n    const { data } = await axios.get(`${API_URL}/purchases/reports?startDate=${startDate}&endDate=${endDate}`);\r\n    return data;\r\n  },\r\n\r\n  // Dashboard\r\n  getStats: async () => {\r\n    try {\r\n      const [products, sales] = await Promise.all([\r\n        axios.get(`${API_URL}/products/count`),\r\n        axios.get(`${API_URL}/sales/stats`)\r\n      ]);\r\n      return {\r\n        totalProducts: products.data.count,\r\n        lowStockProducts: products.data.lowStockCount,\r\n        totalSales: sales.data.totalSales,\r\n        totalRevenue: sales.data.totalRevenue\r\n      };\r\n    } catch (error) {\r\n      console.error('Error getting stats:', error);\r\n      return {\r\n        totalProducts: 0,\r\n        lowStockProducts: 0,\r\n        totalSales: 0,\r\n        totalRevenue: 0\r\n      };\r\n    }\r\n  },\r\n\r\n  // Customers\r\n  getCustomers: async () => {\r\n    const { data } = await axios.get(`${API_URL}/customers`);\r\n    return data;\r\n  },\r\n\r\n  createCustomer: async (customer) => {\r\n    const { data } = await axios.post(`${API_URL}/customers`, customer);\r\n    return data;\r\n  },\r\n\r\n  updateCustomer: async (id, customer) => {\r\n    const { data } = await axios.put(`${API_URL}/customers/${id}`, customer);\r\n    return data;\r\n  },\r\n\r\n  deleteCustomer: async (id) => {\r\n    const { data } = await axios.delete(`${API_URL}/customers/${id}`);\r\n    return data;\r\n  },\r\n\r\n  getCustomerById: async (id) => {\r\n    const { data } = await axios.get(`${API_URL}/customers/${id}`);\r\n    return data;\r\n  },\r\n\r\n  registerCustomerPayment: async (customerId, payment) => {\r\n    const { data } = await axios.post(`${API_URL}/customers/${customerId}/payments`, payment);\r\n    return data;\r\n  },\r\n\r\n  getCustomerPaymentHistory: async (customerId) => {\r\n    const { data } = await axios.get(`${API_URL}/customers/${customerId}/payments`);\r\n    return data;\r\n  },\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}