{"ast":null,"code":"// src/services/api.js\nimport axios from 'axios';\n\n// Configuración de Axios\nconst api = axios.create({\n  baseURL: '/api/v1'\n});\n\n// Interceptor para agregar el token a las solicitudes\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Interceptor para manejar errores de respuesta\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  // Redirigir al login si el token ha expirado o es inválido\n  if (error.response && error.response.status === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Servicios para Aliados\nconst aliadoService = {\n  getAll: async (filters = {}) => {\n    try {\n      const response = await api.get('/aliados', {\n        params: filters\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error al obtener aliados:', error);\n      throw error;\n    }\n  },\n  getById: async id => {\n    try {\n      const response = await api.get(`/aliados/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error al obtener aliado ${id}:`, error);\n      throw error;\n    }\n  },\n  create: async data => {\n    try {\n      const response = await api.post('/aliados', data);\n      return response.data;\n    } catch (error) {\n      console.error('Error al crear aliado:', error);\n      throw error;\n    }\n  },\n  update: async (id, data) => {\n    try {\n      const response = await api.put(`/aliados/${id}`, data);\n      return response.data;\n    } catch (error) {\n      console.error(`Error al actualizar aliado ${id}:`, error);\n      throw error;\n    }\n  },\n  delete: async id => {\n    try {\n      const response = await api.delete(`/aliados/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error al eliminar aliado ${id}:`, error);\n      throw error;\n    }\n  },\n  updateEstado: async (id, estado) => {\n    try {\n      const response = await api.patch(`/aliados/${id}/estado`, {\n        estado\n      });\n      return response.data;\n    } catch (error) {\n      console.error(`Error al actualizar estado de aliado ${id}:`, error);\n      throw error;\n    }\n  }\n};\n\n// Servicios para Sucursales\nconst sucursalService = {\n  getAll: async (filters = {}) => {\n    try {\n      const response = await api.get('/sucursales', {\n        params: filters\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error al obtener sucursales:', error);\n      throw error;\n    }\n  },\n  getById: async id => {\n    try {\n      const response = await api.get(`/sucursales/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error al obtener sucursal ${id}:`, error);\n      throw error;\n    }\n  },\n  create: async data => {\n    try {\n      const response = await api.post('/sucursales', data);\n      return response.data;\n    } catch (error) {\n      console.error('Error al crear sucursal:', error);\n      throw error;\n    }\n  },\n  update: async (id, data) => {\n    try {\n      const response = await api.put(`/sucursales/${id}`, data);\n      return response.data;\n    } catch (error) {\n      console.error(`Error al actualizar sucursal ${id}:`, error);\n      throw error;\n    }\n  },\n  delete: async id => {\n    try {\n      const response = await api.delete(`/sucursales/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error al eliminar sucursal ${id}:`, error);\n      throw error;\n    }\n  },\n  updateEstado: async (id, estado) => {\n    try {\n      const response = await api.patch(`/sucursales/${id}/estado`, {\n        estado\n      });\n      return response.data;\n    } catch (error) {\n      console.error(`Error al actualizar estado de sucursal ${id}:`, error);\n      throw error;\n    }\n  },\n  getByAliado: async aliadoId => {\n    try {\n      const response = await api.get(`/aliados/${aliadoId}/sucursales`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error al obtener sucursales del aliado ${aliadoId}:`, error);\n      throw error;\n    }\n  }\n};\n\n// Servicios para Liquidaciones\nconst liquidacionService = {\n  getAll: async (filters = {}) => {\n    try {\n      const response = await api.get('/liquidaciones', {\n        params: filters\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error al obtener liquidaciones:', error);\n      throw error;\n    }\n  },\n  getById: async id => {\n    try {\n      const response = await api.get(`/liquidaciones/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error al obtener liquidación ${id}:`, error);\n      throw error;\n    }\n  },\n  create: async data => {\n    try {\n      const response = await api.post('/liquidaciones', data);\n      return response.data;\n    } catch (error) {\n      console.error('Error al crear liquidación:', error);\n      throw error;\n    }\n  },\n  updateEstado: async (id, estado, numeroReferencia = null) => {\n    try {\n      const data = {\n        estado\n      };\n      if (numeroReferencia) {\n        data.numeroReferencia = numeroReferencia;\n      }\n      const response = await api.patch(`/liquidaciones/${id}/estado`, data);\n      return response.data;\n    } catch (error) {\n      console.error(`Error al actualizar estado de liquidación ${id}:`, error);\n      throw error;\n    }\n  },\n  getOperacionesParaLiquidar: async aliadoId => {\n    try {\n      const response = await api.get(`/aliados/${aliadoId}/operaciones-para-liquidar`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error al obtener operaciones para liquidar del aliado ${aliadoId}:`, error);\n      throw error;\n    }\n  }\n};\n\n// Servicios para Usuarios (Empleados)\nconst userService = {\n  getAll: async () => {\n    try {\n      const response = await axios.get('/api/users');\n      return response.data;\n    } catch (error) {\n      console.error('Error al obtener usuarios:', error);\n      throw error;\n    }\n  },\n  getById: async id => {\n    try {\n      const response = await axios.get(`/api/users/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error al obtener usuario ${id}:`, error);\n      throw error;\n    }\n  },\n  create: async data => {\n    try {\n      const response = await axios.post('/api/users', data);\n      return response.data;\n    } catch (error) {\n      console.error('Error al crear usuario:', error);\n      throw error;\n    }\n  },\n  update: async (id, data) => {\n    try {\n      const response = await axios.put(`/api/users/${id}`, data);\n      return response.data;\n    } catch (error) {\n      console.error(`Error al actualizar usuario ${id}:`, error);\n      throw error;\n    }\n  },\n  delete: async id => {\n    try {\n      const response = await axios.delete(`/api/users/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error al eliminar usuario ${id}:`, error);\n      throw error;\n    }\n  },\n  updateStatus: async (id, status) => {\n    try {\n      const response = await axios.patch(`/api/users/${id}/status`, {\n        status\n      });\n      return response.data;\n    } catch (error) {\n      console.error(`Error al actualizar estado de usuario ${id}:`, error);\n      throw error;\n    }\n  }\n};\n\n// Exportar todos los servicios\nexport { aliadoService, sucursalService, liquidacionService, userService };","map":{"version":3,"names":["axios","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","response","status","removeItem","window","location","href","aliadoService","getAll","filters","get","params","data","console","getById","id","post","update","put","delete","updateEstado","estado","patch","sucursalService","getByAliado","aliadoId","liquidacionService","numeroReferencia","getOperacionesParaLiquidar","userService","updateStatus"],"sources":["C:/Users/OXKR/Documents/2025/API-VENTAS/pos-frontend/src/services/api.js"],"sourcesContent":["// src/services/api.js\r\nimport axios from 'axios';\r\n\r\n// Configuración de Axios\r\nconst api = axios.create({\r\n  baseURL: '/api/v1'\r\n});\r\n\r\n// Interceptor para agregar el token a las solicitudes\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Interceptor para manejar errores de respuesta\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    // Redirigir al login si el token ha expirado o es inválido\r\n    if (error.response && error.response.status === 401) {\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Servicios para Aliados\r\nconst aliadoService = {\r\n  getAll: async (filters = {}) => {\r\n    try {\r\n      const response = await api.get('/aliados', { params: filters });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al obtener aliados:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getById: async (id) => {\r\n    try {\r\n      const response = await api.get(`/aliados/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error al obtener aliado ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  create: async (data) => {\r\n    try {\r\n      const response = await api.post('/aliados', data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al crear aliado:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  update: async (id, data) => {\r\n    try {\r\n      const response = await api.put(`/aliados/${id}`, data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error al actualizar aliado ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  delete: async (id) => {\r\n    try {\r\n      const response = await api.delete(`/aliados/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error al eliminar aliado ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  updateEstado: async (id, estado) => {\r\n    try {\r\n      const response = await api.patch(`/aliados/${id}/estado`, { estado });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error al actualizar estado de aliado ${id}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\n// Servicios para Sucursales\r\nconst sucursalService = {\r\n  getAll: async (filters = {}) => {\r\n    try {\r\n      const response = await api.get('/sucursales', { params: filters });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al obtener sucursales:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getById: async (id) => {\r\n    try {\r\n      const response = await api.get(`/sucursales/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error al obtener sucursal ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  create: async (data) => {\r\n    try {\r\n      const response = await api.post('/sucursales', data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al crear sucursal:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  update: async (id, data) => {\r\n    try {\r\n      const response = await api.put(`/sucursales/${id}`, data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error al actualizar sucursal ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  delete: async (id) => {\r\n    try {\r\n      const response = await api.delete(`/sucursales/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error al eliminar sucursal ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  updateEstado: async (id, estado) => {\r\n    try {\r\n      const response = await api.patch(`/sucursales/${id}/estado`, { estado });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error al actualizar estado de sucursal ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getByAliado: async (aliadoId) => {\r\n    try {\r\n      const response = await api.get(`/aliados/${aliadoId}/sucursales`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error al obtener sucursales del aliado ${aliadoId}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\n// Servicios para Liquidaciones\r\nconst liquidacionService = {\r\n  getAll: async (filters = {}) => {\r\n    try {\r\n      const response = await api.get('/liquidaciones', { params: filters });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al obtener liquidaciones:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getById: async (id) => {\r\n    try {\r\n      const response = await api.get(`/liquidaciones/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error al obtener liquidación ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  create: async (data) => {\r\n    try {\r\n      const response = await api.post('/liquidaciones', data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al crear liquidación:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  updateEstado: async (id, estado, numeroReferencia = null) => {\r\n    try {\r\n      const data = { estado };\r\n      if (numeroReferencia) {\r\n        data.numeroReferencia = numeroReferencia;\r\n      }\r\n      const response = await api.patch(`/liquidaciones/${id}/estado`, data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error al actualizar estado de liquidación ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getOperacionesParaLiquidar: async (aliadoId) => {\r\n    try {\r\n      const response = await api.get(`/aliados/${aliadoId}/operaciones-para-liquidar`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error al obtener operaciones para liquidar del aliado ${aliadoId}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\n// Servicios para Usuarios (Empleados)\r\nconst userService = {\r\n  getAll: async () => {\r\n    try {\r\n      const response = await axios.get('/api/users');\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al obtener usuarios:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getById: async (id) => {\r\n    try {\r\n      const response = await axios.get(`/api/users/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error al obtener usuario ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  create: async (data) => {\r\n    try {\r\n      const response = await axios.post('/api/users', data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al crear usuario:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  update: async (id, data) => {\r\n    try {\r\n      const response = await axios.put(`/api/users/${id}`, data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error al actualizar usuario ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  delete: async (id) => {\r\n    try {\r\n      const response = await axios.delete(`/api/users/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error al eliminar usuario ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  updateStatus: async (id, status) => {\r\n    try {\r\n      const response = await axios.patch(`/api/users/${id}/status`, { status });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error al actualizar estado de usuario ${id}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\n// Exportar todos los servicios\r\nexport { aliadoService, sucursalService, liquidacionService, userService };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}