{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OXKR\\\\Documents\\\\2025\\\\API-VENTAS\\\\API-VENTAS\\\\pos-frontend\\\\src\\\\pages\\\\SimuladorPage.js\",\n  _s = $RefreshSig$();\n// src/pages/SimuladorPage.js\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport { Row, Col, Card, Form, Button, Table, Alert, InputGroup, Modal } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCalculator, faDollarSign, faCalendarAlt, faCheck, faCircleCheck } from '@fortawesome/free-solid-svg-icons';\nimport Layout from '../components/layout/Layout';\nimport { simularCredito, crearCredito } from '../services/apiService';\nimport { OfflineContext } from '../context/OfflineContext';\nimport { AuthContext } from '../context/AuthContext';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SimuladorPage = () => {\n  _s();\n  // Estado para simulación\n  const [monto, setMonto] = useState('');\n  const [plazo, setPlazo] = useState(3);\n  const [simulacion, setSimulacion] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // Estado para validación de cliente\n  const [showValidacion, setShowValidacion] = useState(false);\n  const [cedula, setCedula] = useState('');\n  const [telefono, setTelefono] = useState('');\n  const [validacionLoading, setValidacionLoading] = useState(false);\n  const [resultadoValidacion, setResultadoValidacion] = useState(null);\n\n  // Estado para formulario de crédito\n  const [showFormulario, setShowFormulario] = useState(false);\n  const [clienteData, setClienteData] = useState({\n    cedula: '',\n    nombre: '',\n    apellido: '',\n    telefono: '',\n    email: '',\n    direccion: ''\n  });\n  const [createLoading, setCreateLoading] = useState(false);\n  const [creditoCreado, setCreditoCreado] = useState(null);\n  const {\n    isOnline\n  } = useContext(OfflineContext);\n  const {\n    userInfo\n  } = useContext(AuthContext);\n\n  // Ref para el botón de Metamap\n  const metamapButtonRef = useRef(null);\n\n  // Configuración de Metamap\n  const METAMAP_CLIENT_ID = '67e844f12f057303ed9e7b54';\n  const METAMAP_FLOW_ID = '67e844f155e2997603974699';\n\n  // Agregar script de Metamap\n  useEffect(() => {\n    const script = document.createElement('script');\n    script.src = 'https://web-button.metamap.com/button.js';\n    script.async = true;\n    document.body.appendChild(script);\n    return () => {\n      document.body.removeChild(script);\n    };\n  }, []);\n\n  // Configurar eventos de Metamap\n  useEffect(() => {\n    const metamapButton = document.querySelector('metamap-button');\n    const handleUserFinished = event => {\n      const {\n        detail\n      } = event;\n      console.log('Verificación completada:', detail);\n\n      // Establecer resultado de validación\n      setResultadoValidacion({\n        aprobado: true,\n        codigoVerificacion: detail.verificationId\n      });\n\n      // Preparar datos del cliente\n      setClienteData(prev => ({\n        ...prev,\n        cedula,\n        telefono\n      }));\n\n      // Cerrar modal de validación y abrir formulario\n      setShowValidacion(false);\n      setShowFormulario(true);\n    };\n    const handleExitedSdk = event => {\n      console.log('Usuario salió de la verificación');\n      setValidacionLoading(false);\n    };\n    if (metamapButton) {\n      metamapButton.addEventListener('metamap:userFinishedSdk', handleUserFinished);\n      metamapButton.addEventListener('metamap:exitedSdk', handleExitedSdk);\n    }\n    return () => {\n      if (metamapButton) {\n        metamapButton.removeEventListener('metamap:userFinishedSdk', handleUserFinished);\n        metamapButton.removeEventListener('metamap:exitedSdk', handleExitedSdk);\n      }\n    };\n  }, [cedula, telefono]);\n\n  // Limpiar simulación cuando cambia el monto o plazo\n  useEffect(() => {\n    setSimulacion(null);\n  }, [monto, plazo]);\n\n  // Función para simular crédito\n  const handleSimular = async e => {\n    e.preventDefault();\n    if (!monto) {\n      toast.error('Ingrese un monto válido');\n      return;\n    }\n    try {\n      setLoading(true);\n      const resultado = await simularCredito({\n        monto,\n        plazo\n      }, isOnline);\n      setSimulacion(resultado);\n    } catch (error) {\n      toast.error('Error al simular crédito: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Función para abrir modal de validación\n  const handleSolicitar = () => {\n    if (!simulacion) {\n      toast.error('Primero debe realizar una simulación');\n      return;\n    }\n    setShowValidacion(true);\n  };\n\n  // Función para iniciar validación de cliente con Metamap\n  const handleValidarCliente = e => {\n    e.preventDefault();\n    if (!cedula || !telefono) {\n      toast.error('Ingrese cédula y teléfono');\n      return;\n    }\n\n    // Disparar validación de Metamap\n    const metamapButton = document.querySelector('metamap-button');\n    if (metamapButton) {\n      setValidacionLoading(true);\n      metamapButton.click();\n    } else {\n      toast.error('Error al cargar la validación. Intente nuevamente.');\n    }\n  };\n\n  // Función para manejar cambios en formulario\n  const handleClienteChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setClienteData({\n      ...clienteData,\n      [name]: value\n    });\n  };\n\n  // Función para crear crédito\n  const handleCrearCredito = async e => {\n    e.preventDefault();\n\n    // Validar campos requeridos\n    if (!clienteData.nombre || !clienteData.apellido || !clienteData.email) {\n      toast.error('Todos los campos son requeridos');\n      return;\n    }\n    try {\n      setCreateLoading(true);\n      const creditoData = {\n        clienteData,\n        monto,\n        plazo,\n        valorCuota: simulacion.valorCuota,\n        codigoVerificacion: resultadoValidacion.codigoVerificacion\n      };\n      const resultado = await crearCredito(creditoData, isOnline);\n      setCreditoCreado(resultado);\n      toast.success('Crédito creado exitosamente');\n\n      // Limpiar formulario y simulación\n      setMonto('');\n      setPlazo(3);\n      setSimulacion(null);\n      setCedula('');\n      setTelefono('');\n      setResultadoValidacion(null);\n      setClienteData({\n        cedula: '',\n        nombre: '',\n        apellido: '',\n        telefono: '',\n        email: '',\n        direccion: ''\n      });\n    } catch (error) {\n      toast.error('Error al crear crédito: ' + error.message);\n    } finally {\n      setCreateLoading(false);\n    }\n  };\n\n  // Formatear valor monetario\n  const formatMoney = amount => {\n    return new Intl.NumberFormat('es-CO', {\n      style: 'currency',\n      currency: 'COP',\n      minimumFractionDigits: 0\n    }).format(amount);\n  };\n\n  // Cerrar modal de crédito creado\n  const handleCerrarCreditoCreado = () => {\n    setCreditoCreado(null);\n    setShowFormulario(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-4\",\n      children: \"Simulador\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showValidacion,\n      onHide: () => setShowValidacion(false),\n      backdrop: \"static\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Validaci\\xF3n de Cliente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: resultadoValidacion ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center py-3\",\n          children: resultadoValidacion.aprobado ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-success mb-3\",\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCircleCheck,\n                className: \"fa-5x\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"mb-3\",\n              children: \"Cliente validado correctamente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mb-4\",\n              children: \"El cliente ha pasado la validaci\\xF3n de identidad.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"success\",\n              onClick: () => {\n                setShowValidacion(false);\n                setShowFormulario(true);\n              },\n              children: \"Continuar con solicitud\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-danger mb-3\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-times-circle fa-5x\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"mb-3\",\n              children: \"No aprobado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mb-4\",\n              children: resultadoValidacion.mensaje\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              onClick: () => setShowValidacion(false),\n              children: \"Cerrar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleValidarCliente,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-3\",\n            children: \"Ingrese los datos del cliente para validar su identidad antes de proceder con la solicitud.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"N\\xFAmero de C\\xE9dula\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Ingrese n\\xFAmero de c\\xE9dula\",\n              value: cedula,\n              onChange: e => setCedula(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Tel\\xE9fono\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Ingrese n\\xFAmero de tel\\xE9fono\",\n              value: telefono,\n              onChange: e => setTelefono(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4 text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"metamap-button\", {\n              clientid: METAMAP_CLIENT_ID,\n              flowid: METAMAP_FLOW_ID,\n              language: \"es\",\n              metadata: \"{\\\"key\\\": \\\"value\\\"}\",\n              ref: metamapButtonRef,\n              style: {\n                display: 'none'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              onClick: () => setShowValidacion(false),\n              children: \"Cancelar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"submit\",\n              disabled: validacionLoading,\n              children: validacionLoading ? 'Validando...' : 'Validar Cliente'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 5\n  }, this);\n};\n_s(SimuladorPage, \"u8pVHO8HeCoSyl9+oUoGlAYc1Zs=\");\n_c = SimuladorPage;\nexport default SimuladorPage;\nvar _c;\n$RefreshReg$(_c, \"SimuladorPage\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useRef","Row","Col","Card","Form","Button","Table","Alert","InputGroup","Modal","FontAwesomeIcon","faCalculator","faDollarSign","faCalendarAlt","faCheck","faCircleCheck","Layout","simularCredito","crearCredito","OfflineContext","AuthContext","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","SimuladorPage","_s","monto","setMonto","plazo","setPlazo","simulacion","setSimulacion","loading","setLoading","showValidacion","setShowValidacion","cedula","setCedula","telefono","setTelefono","validacionLoading","setValidacionLoading","resultadoValidacion","setResultadoValidacion","showFormulario","setShowFormulario","clienteData","setClienteData","nombre","apellido","email","direccion","createLoading","setCreateLoading","creditoCreado","setCreditoCreado","isOnline","userInfo","metamapButtonRef","METAMAP_CLIENT_ID","METAMAP_FLOW_ID","script","document","createElement","src","async","body","appendChild","removeChild","metamapButton","querySelector","handleUserFinished","event","detail","console","log","aprobado","codigoVerificacion","verificationId","prev","handleExitedSdk","addEventListener","removeEventListener","handleSimular","e","preventDefault","error","resultado","message","handleSolicitar","handleValidarCliente","click","handleClienteChange","name","value","target","handleCrearCredito","creditoData","valorCuota","success","formatMoney","amount","Intl","NumberFormat","style","currency","minimumFractionDigits","format","handleCerrarCreditoCreado","children","className","fileName","_jsxFileName","lineNumber","columnNumber","show","onHide","backdrop","Header","closeButton","Title","Body","icon","variant","onClick","mensaje","onSubmit","Group","Label","Control","type","placeholder","onChange","required","clientid","flowid","language","metadata","ref","display","disabled","_c","$RefreshReg$"],"sources":["C:/Users/OXKR/Documents/2025/API-VENTAS/API-VENTAS/pos-frontend/src/pages/SimuladorPage.js"],"sourcesContent":["// src/pages/SimuladorPage.js\r\nimport React, { useState, useEffect, useContext, useRef } from 'react';\r\nimport { Row, Col, Card, Form, Button, Table, Alert, InputGroup, Modal } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { \r\n  faCalculator, \r\n  faDollarSign, \r\n  faCalendarAlt,\r\n  faCheck,\r\n  faCircleCheck\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport Layout from '../components/layout/Layout';\r\nimport { simularCredito, crearCredito } from '../services/apiService';\r\nimport { OfflineContext } from '../context/OfflineContext';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst SimuladorPage = () => {\r\n  // Estado para simulación\r\n  const [monto, setMonto] = useState('');\r\n  const [plazo, setPlazo] = useState(3);\r\n  const [simulacion, setSimulacion] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  \r\n  // Estado para validación de cliente\r\n  const [showValidacion, setShowValidacion] = useState(false);\r\n  const [cedula, setCedula] = useState('');\r\n  const [telefono, setTelefono] = useState('');\r\n  const [validacionLoading, setValidacionLoading] = useState(false);\r\n  const [resultadoValidacion, setResultadoValidacion] = useState(null);\r\n  \r\n  // Estado para formulario de crédito\r\n  const [showFormulario, setShowFormulario] = useState(false);\r\n  const [clienteData, setClienteData] = useState({\r\n    cedula: '',\r\n    nombre: '',\r\n    apellido: '',\r\n    telefono: '',\r\n    email: '',\r\n    direccion: ''\r\n  });\r\n  const [createLoading, setCreateLoading] = useState(false);\r\n  const [creditoCreado, setCreditoCreado] = useState(null);\r\n  \r\n  const { isOnline } = useContext(OfflineContext);\r\n  const { userInfo } = useContext(AuthContext);\r\n  \r\n  // Ref para el botón de Metamap\r\n  const metamapButtonRef = useRef(null);\r\n\r\n  // Configuración de Metamap\r\n  const METAMAP_CLIENT_ID = '67e844f12f057303ed9e7b54';\r\n  const METAMAP_FLOW_ID = '67e844f155e2997603974699';\r\n\r\n  // Agregar script de Metamap\r\n  useEffect(() => {\r\n    const script = document.createElement('script');\r\n    script.src = 'https://web-button.metamap.com/button.js';\r\n    script.async = true;\r\n    document.body.appendChild(script);\r\n\r\n    return () => {\r\n      document.body.removeChild(script);\r\n    };\r\n  }, []);\r\n\r\n  // Configurar eventos de Metamap\r\n  useEffect(() => {\r\n    const metamapButton = document.querySelector('metamap-button');\r\n    \r\n    const handleUserFinished = (event) => {\r\n      const { detail } = event;\r\n      console.log('Verificación completada:', detail);\r\n      \r\n      // Establecer resultado de validación\r\n      setResultadoValidacion({\r\n        aprobado: true,\r\n        codigoVerificacion: detail.verificationId\r\n      });\r\n      \r\n      // Preparar datos del cliente\r\n      setClienteData(prev => ({\r\n        ...prev,\r\n        cedula,\r\n        telefono\r\n      }));\r\n      \r\n      // Cerrar modal de validación y abrir formulario\r\n      setShowValidacion(false);\r\n      setShowFormulario(true);\r\n    };\r\n\r\n    const handleExitedSdk = (event) => {\r\n      console.log('Usuario salió de la verificación');\r\n      setValidacionLoading(false);\r\n    };\r\n\r\n    if (metamapButton) {\r\n      metamapButton.addEventListener('metamap:userFinishedSdk', handleUserFinished);\r\n      metamapButton.addEventListener('metamap:exitedSdk', handleExitedSdk);\r\n    }\r\n\r\n    return () => {\r\n      if (metamapButton) {\r\n        metamapButton.removeEventListener('metamap:userFinishedSdk', handleUserFinished);\r\n        metamapButton.removeEventListener('metamap:exitedSdk', handleExitedSdk);\r\n      }\r\n    };\r\n  }, [cedula, telefono]);\r\n  \r\n  // Limpiar simulación cuando cambia el monto o plazo\r\n  useEffect(() => {\r\n    setSimulacion(null);\r\n  }, [monto, plazo]);\r\n  \r\n  // Función para simular crédito\r\n  const handleSimular = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!monto) {\r\n      toast.error('Ingrese un monto válido');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setLoading(true);\r\n      const resultado = await simularCredito({ monto, plazo }, isOnline);\r\n      setSimulacion(resultado);\r\n    } catch (error) {\r\n      toast.error('Error al simular crédito: ' + error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Función para abrir modal de validación\r\n  const handleSolicitar = () => {\r\n    if (!simulacion) {\r\n      toast.error('Primero debe realizar una simulación');\r\n      return;\r\n    }\r\n    \r\n    setShowValidacion(true);\r\n  };\r\n  \r\n  // Función para iniciar validación de cliente con Metamap\r\n  const handleValidarCliente = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!cedula || !telefono) {\r\n      toast.error('Ingrese cédula y teléfono');\r\n      return;\r\n    }\r\n    \r\n    // Disparar validación de Metamap\r\n    const metamapButton = document.querySelector('metamap-button');\r\n    if (metamapButton) {\r\n      setValidacionLoading(true);\r\n      metamapButton.click();\r\n    } else {\r\n      toast.error('Error al cargar la validación. Intente nuevamente.');\r\n    }\r\n  };\r\n  \r\n  // Función para manejar cambios en formulario\r\n  const handleClienteChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setClienteData({\r\n      ...clienteData,\r\n      [name]: value\r\n    });\r\n  };\r\n  \r\n  // Función para crear crédito\r\n  const handleCrearCredito = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Validar campos requeridos\r\n    if (!clienteData.nombre || !clienteData.apellido || !clienteData.email) {\r\n      toast.error('Todos los campos son requeridos');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setCreateLoading(true);\r\n      \r\n      const creditoData = {\r\n        clienteData,\r\n        monto,\r\n        plazo,\r\n        valorCuota: simulacion.valorCuota,\r\n        codigoVerificacion: resultadoValidacion.codigoVerificacion\r\n      };\r\n      \r\n      const resultado = await crearCredito(creditoData, isOnline);\r\n      setCreditoCreado(resultado);\r\n      toast.success('Crédito creado exitosamente');\r\n      \r\n      // Limpiar formulario y simulación\r\n      setMonto('');\r\n      setPlazo(3);\r\n      setSimulacion(null);\r\n      setCedula('');\r\n      setTelefono('');\r\n      setResultadoValidacion(null);\r\n      setClienteData({\r\n        cedula: '',\r\n        nombre: '',\r\n        apellido: '',\r\n        telefono: '',\r\n        email: '',\r\n        direccion: ''\r\n      });\r\n    } catch (error) {\r\n      toast.error('Error al crear crédito: ' + error.message);\r\n    } finally {\r\n      setCreateLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Formatear valor monetario\r\n  const formatMoney = (amount) => {\r\n    return new Intl.NumberFormat('es-CO', {\r\n      style: 'currency',\r\n      currency: 'COP',\r\n      minimumFractionDigits: 0\r\n    }).format(amount);\r\n  };\r\n  \r\n  // Cerrar modal de crédito creado\r\n  const handleCerrarCreditoCreado = () => {\r\n    setCreditoCreado(null);\r\n    setShowFormulario(false);\r\n  };\r\n  \r\n  return (\r\n    <Layout>\r\n      <h2 className=\"mb-4\">Simulador</h2>\r\n      \r\n      {/* Resto del código original se mantiene igual */}\r\n      \r\n      {/* Modal de Validación */}\r\n      <Modal show={showValidacion} onHide={() => setShowValidacion(false)} backdrop=\"static\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Validación de Cliente</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {resultadoValidacion ? (\r\n            <div className=\"text-center py-3\">\r\n              {resultadoValidacion.aprobado ? (\r\n                <>\r\n                  <div className=\"text-success mb-3\">\r\n                    <FontAwesomeIcon icon={faCircleCheck} className=\"fa-5x\" />\r\n                  </div>\r\n                  <h4 className=\"mb-3\">Cliente validado correctamente</h4>\r\n                  <p className=\"mb-4\">El cliente ha pasado la validación de identidad.</p>\r\n                  <Button variant=\"success\" onClick={() => {\r\n                    setShowValidacion(false);\r\n                    setShowFormulario(true);\r\n                  }}>\r\n                    Continuar con solicitud\r\n                  </Button>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <div className=\"text-danger mb-3\">\r\n                    <i className=\"fa fa-times-circle fa-5x\"></i>\r\n                  </div>\r\n                  <h4 className=\"mb-3\">No aprobado</h4>\r\n                  <p className=\"mb-4\">{resultadoValidacion.mensaje}</p>\r\n                  <Button variant=\"secondary\" onClick={() => setShowValidacion(false)}>\r\n                    Cerrar\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <Form onSubmit={handleValidarCliente}>\r\n              <p className=\"mb-3\">\r\n                Ingrese los datos del cliente para validar su identidad antes de proceder con la solicitud.\r\n              </p>\r\n              \r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Número de Cédula</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Ingrese número de cédula\"\r\n                  value={cedula}\r\n                  onChange={(e) => setCedula(e.target.value)}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n              \r\n              <Form.Group className=\"mb-4\">\r\n                <Form.Label>Teléfono</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Ingrese número de teléfono\"\r\n                  value={telefono}\r\n                  onChange={(e) => setTelefono(e.target.value)}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n              \r\n              <div className=\"mb-4 text-center\">\r\n                <metamap-button \r\n                  clientid={METAMAP_CLIENT_ID}\r\n                  flowid={METAMAP_FLOW_ID}\r\n                  language=\"es\"\r\n                  metadata='{\"key\": \"value\"}'\r\n                  ref={metamapButtonRef}\r\n                  style={{ display: 'none' }}\r\n                ></metamap-button>\r\n              </div>\r\n              \r\n              <div className=\"d-flex justify-content-between\">\r\n                <Button variant=\"secondary\" onClick={() => setShowValidacion(false)}>\r\n                  Cancelar\r\n                </Button>\r\n                <Button \r\n                  variant=\"primary\" \r\n                  type=\"submit\"\r\n                  disabled={validacionLoading}\r\n                >\r\n                  {validacionLoading ? 'Validando...' : 'Validar Cliente'}\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          )}\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n      {/* Resto del código original se mantiene igual */}\r\n      {/* (Modal de Formulario de Crédito, etc.) */}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default SimuladorPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}