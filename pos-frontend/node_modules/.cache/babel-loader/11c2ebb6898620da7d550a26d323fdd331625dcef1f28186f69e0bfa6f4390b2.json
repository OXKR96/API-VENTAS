{"ast":null,"code":"// src/services/apiService.js\nimport axios from'axios';import*as localStorageService from'./localStorageService';// API base URL\nconst API_URL='http://localhost:5000/api';// Axios instance\nconst api=axios.create({baseURL:API_URL,headers:{'Content-Type':'application/json'}});// Interceptor para agregar token de autenticación\napi.interceptors.request.use(config=>{const userInfo=localStorageService.getItemFromStorage(localStorageService.STORAGE_KEYS.USER_INFO);if(userInfo&&userInfo.token){config.headers.Authorization=`Bearer ${userInfo.token}`;}return config;},error=>Promise.reject(error));// Dashboard\nexport const getDashboardData=async function(){let isOnline=arguments.length>0&&arguments[0]!==undefined?arguments[0]:navigator.onLine;if(isOnline){try{const response=await api.get('/dashboard');return response.data;}catch(error){console.error('Error obteniendo datos del dashboard:',error);// Si falla, intentar datos locales\nreturn getDashboardDataOffline();}}else{return getDashboardDataOffline();}};// Función para obtener datos del dashboard offline\nconst getDashboardDataOffline=()=>{const creditos=localStorageService.getCreditosFromStorage();const today=new Date();today.setHours(0,0,0,0);// Créditos de hoy\nconst creditosHoy=creditos.filter(c=>{if(!c.fechaAprobacion)return false;const fechaCredito=new Date(c.fechaAprobacion);return fechaCredito>=today&&c.estado==='Aprobado';});// Calcular montos\nconst dineroDisponible=creditos.reduce((total,c)=>{if(c.estado==='Aprobado'){return total+parseFloat(c.monto||0);}return total;},0);const montoHoy=creditosHoy.reduce((total,c)=>total+parseFloat(c.monto||0),0);return{dineroDisponible,clientesHoy:creditosHoy.length,montoHoy};};// Actividad\nexport const getActividad=async function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let isOnline=arguments.length>1&&arguments[1]!==undefined?arguments[1]:navigator.onLine;if(isOnline){try{const response=await api.get('/dashboard/actividad',{params});return response.data;}catch(error){console.error('Error obteniendo actividad:',error);return getActividadOffline(params);}}else{return getActividadOffline(params);}};// Función para obtener actividad offline\nconst getActividadOffline=function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let creditos=localStorageService.getCreditosFromStorage();// Filtrar por fecha si se proporciona\nif(params.fechaInicio&&params.fechaFin){const inicio=new Date(params.fechaInicio);const fin=new Date(params.fechaFin);creditos=creditos.filter(c=>{if(!c.fechaAprobacion)return false;const fecha=new Date(c.fechaAprobacion);return fecha>=inicio&&fecha<=fin;});}// Filtrar por estado\ncreditos=creditos.filter(c=>c.estado==='Aprobado');// Ordenar por fecha descendente\ncreditos.sort((a,b)=>new Date(b.fechaAprobacion)-new Date(a.fechaAprobacion));// Limitar cantidad\nconst limit=parseInt(params.limit)||10;return creditos.slice(0,limit);};// Simulación de crédito\nexport const simularCredito=async function(datos){let isOnline=arguments.length>1&&arguments[1]!==undefined?arguments[1]:navigator.onLine;// Lógica de simulación offline por ahora\nconst{monto,plazo}=datos;// Lógica de simulación (igual a la del backend)\nconst tasaInteres=0.025;// 2.5% mensual\nconst seguroVida=monto*0.005;// 0.5% del monto\nconst valorCuota=monto*(tasaInteres*Math.pow(1+tasaInteres,plazo))/(Math.pow(1+tasaInteres,plazo)-1);const costoTotal=valorCuota*plazo;const intereses=costoTotal-monto;return{monto,plazo,valorCuota:Math.round(valorCuota),intereses:Math.round(intereses),seguroVida:Math.round(seguroVida),costoTotal:Math.round(costoTotal+seguroVida)};};// Validación de cliente (simula proceso con Metamap)\nexport const validarCliente=async function(datos){let isOnline=arguments.length>1&&arguments[1]!==undefined?arguments[1]:navigator.onLine;// Simular aprobación (80% de probabilidad)\nconst aprobado=Math.random()<0.8;if(aprobado){// Generar código de verificación\nconst codigoVerificacion=Math.floor(100000+Math.random()*900000).toString();return{aprobado:true,mensaje:'Cliente validado correctamente (Modo Offline)',codigoVerificacion};}else{return{aprobado:false,mensaje:'Cliente no ha pasado la validación de identidad (Modo Offline)'};}};// Crear crédito simulado\nexport const crearCredito=async function(datos){let isOnline=arguments.length>1&&arguments[1]!==undefined?arguments[1]:navigator.onLine;// Generar código de entrega\nconst codigoEntrega=Math.random().toString(36).substring(2,8).toUpperCase();// Datos de ejemplo para modo de desarrollo\nreturn{_id:localStorageService.generateTempId(),cliente:datos.clienteData,monto:datos.monto,plazo:datos.plazo,valorCuota:datos.valorCuota,codigoVerificacion:datos.codigoVerificacion,codigoEntrega,estado:'Aprobado',fechaAprobacion:new Date().toISOString(),_temp:true};};export default api;","map":{"version":3,"names":["axios","localStorageService","API_URL","api","create","baseURL","headers","interceptors","request","use","config","userInfo","getItemFromStorage","STORAGE_KEYS","USER_INFO","token","Authorization","error","Promise","reject","getDashboardData","isOnline","arguments","length","undefined","navigator","onLine","response","get","data","console","getDashboardDataOffline","creditos","getCreditosFromStorage","today","Date","setHours","creditosHoy","filter","c","fechaAprobacion","fechaCredito","estado","dineroDisponible","reduce","total","parseFloat","monto","montoHoy","clientesHoy","getActividad","params","getActividadOffline","fechaInicio","fechaFin","inicio","fin","fecha","sort","a","b","limit","parseInt","slice","simularCredito","datos","plazo","tasaInteres","seguroVida","valorCuota","Math","pow","costoTotal","intereses","round","validarCliente","aprobado","random","codigoVerificacion","floor","toString","mensaje","crearCredito","codigoEntrega","substring","toUpperCase","_id","generateTempId","cliente","clienteData","toISOString","_temp"],"sources":["C:/Users/OXKR/Documents/2025/API-VENTAS/API-VENTAS/pos-frontend/src/services/apiService.js"],"sourcesContent":["// src/services/apiService.js\r\nimport axios from 'axios';\r\nimport * as localStorageService from './localStorageService';\r\n\r\n// API base URL\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\n// Axios instance\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n// Interceptor para agregar token de autenticación\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const userInfo = localStorageService.getItemFromStorage(localStorageService.STORAGE_KEYS.USER_INFO);\r\n    if (userInfo && userInfo.token) {\r\n      config.headers.Authorization = `Bearer ${userInfo.token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// Dashboard\r\nexport const getDashboardData = async (isOnline = navigator.onLine) => {\r\n  if (isOnline) {\r\n    try {\r\n      const response = await api.get('/dashboard');\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error obteniendo datos del dashboard:', error);\r\n      // Si falla, intentar datos locales\r\n      return getDashboardDataOffline();\r\n    }\r\n  } else {\r\n    return getDashboardDataOffline();\r\n  }\r\n};\r\n\r\n// Función para obtener datos del dashboard offline\r\nconst getDashboardDataOffline = () => {\r\n  const creditos = localStorageService.getCreditosFromStorage();\r\n  const today = new Date();\r\n  today.setHours(0, 0, 0, 0);\r\n  \r\n  // Créditos de hoy\r\n  const creditosHoy = creditos.filter(c => {\r\n    if (!c.fechaAprobacion) return false;\r\n    const fechaCredito = new Date(c.fechaAprobacion);\r\n    return fechaCredito >= today && c.estado === 'Aprobado';\r\n  });\r\n  \r\n  // Calcular montos\r\n  const dineroDisponible = creditos.reduce((total, c) => {\r\n    if (c.estado === 'Aprobado') {\r\n      return total + parseFloat(c.monto || 0);\r\n    }\r\n    return total;\r\n  }, 0);\r\n  \r\n  const montoHoy = creditosHoy.reduce((total, c) => total + parseFloat(c.monto || 0), 0);\r\n  \r\n  return {\r\n    dineroDisponible,\r\n    clientesHoy: creditosHoy.length,\r\n    montoHoy\r\n  };\r\n};\r\n\r\n// Actividad\r\nexport const getActividad = async (params = {}, isOnline = navigator.onLine) => {\r\n  if (isOnline) {\r\n    try {\r\n      const response = await api.get('/dashboard/actividad', { params });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error obteniendo actividad:', error);\r\n      return getActividadOffline(params);\r\n    }\r\n  } else {\r\n    return getActividadOffline(params);\r\n  }\r\n};\r\n\r\n// Función para obtener actividad offline\r\nconst getActividadOffline = (params = {}) => {\r\n  let creditos = localStorageService.getCreditosFromStorage();\r\n  \r\n  // Filtrar por fecha si se proporciona\r\n  if (params.fechaInicio && params.fechaFin) {\r\n    const inicio = new Date(params.fechaInicio);\r\n    const fin = new Date(params.fechaFin);\r\n    \r\n    creditos = creditos.filter(c => {\r\n      if (!c.fechaAprobacion) return false;\r\n      const fecha = new Date(c.fechaAprobacion);\r\n      return fecha >= inicio && fecha <= fin;\r\n    });\r\n  }\r\n  \r\n  // Filtrar por estado\r\n  creditos = creditos.filter(c => c.estado === 'Aprobado');\r\n  \r\n  // Ordenar por fecha descendente\r\n  creditos.sort((a, b) => new Date(b.fechaAprobacion) - new Date(a.fechaAprobacion));\r\n  \r\n  // Limitar cantidad\r\n  const limit = parseInt(params.limit) || 10;\r\n  return creditos.slice(0, limit);\r\n};\r\n\r\n// Simulación de crédito\r\nexport const simularCredito = async (datos, isOnline = navigator.onLine) => {\r\n  // Lógica de simulación offline por ahora\r\n  const { monto, plazo } = datos;\r\n  \r\n  // Lógica de simulación (igual a la del backend)\r\n  const tasaInteres = 0.025; // 2.5% mensual\r\n  const seguroVida = monto * 0.005; // 0.5% del monto\r\n  \r\n  const valorCuota = (monto * (tasaInteres * Math.pow(1 + tasaInteres, plazo))) / (Math.pow(1 + tasaInteres, plazo) - 1);\r\n  const costoTotal = valorCuota * plazo;\r\n  const intereses = costoTotal - monto;\r\n  \r\n  return {\r\n    monto,\r\n    plazo,\r\n    valorCuota: Math.round(valorCuota),\r\n    intereses: Math.round(intereses),\r\n    seguroVida: Math.round(seguroVida),\r\n    costoTotal: Math.round(costoTotal + seguroVida)\r\n  };\r\n};\r\n\r\n// Validación de cliente (simula proceso con Metamap)\r\nexport const validarCliente = async (datos, isOnline = navigator.onLine) => {\r\n  // Simular aprobación (80% de probabilidad)\r\n  const aprobado = Math.random() < 0.8;\r\n  \r\n  if (aprobado) {\r\n    // Generar código de verificación\r\n    const codigoVerificacion = Math.floor(100000 + Math.random() * 900000).toString();\r\n    \r\n    return {\r\n      aprobado: true,\r\n      mensaje: 'Cliente validado correctamente (Modo Offline)',\r\n      codigoVerificacion\r\n    };\r\n  } else {\r\n    return {\r\n      aprobado: false,\r\n      mensaje: 'Cliente no ha pasado la validación de identidad (Modo Offline)'\r\n    };\r\n  }\r\n};\r\n\r\n// Crear crédito simulado\r\nexport const crearCredito = async (datos, isOnline = navigator.onLine) => {\r\n  // Generar código de entrega\r\n  const codigoEntrega = Math.random().toString(36).substring(2, 8).toUpperCase();\r\n  \r\n  // Datos de ejemplo para modo de desarrollo\r\n  return {\r\n    _id: localStorageService.generateTempId(),\r\n    cliente: datos.clienteData,\r\n    monto: datos.monto,\r\n    plazo: datos.plazo,\r\n    valorCuota: datos.valorCuota,\r\n    codigoVerificacion: datos.codigoVerificacion,\r\n    codigoEntrega,\r\n    estado: 'Aprobado',\r\n    fechaAprobacion: new Date().toISOString(),\r\n    _temp: true\r\n  };\r\n};\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}