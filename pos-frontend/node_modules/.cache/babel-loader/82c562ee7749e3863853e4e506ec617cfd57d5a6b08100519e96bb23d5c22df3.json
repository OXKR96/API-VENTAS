{"ast":null,"code":"// src/services/localStorage.js\n\n// Claves para almacenar diferentes tipos de datos\nconst STORAGE_KEYS = {\n  ALIADOS: 'creditos_aliados',\n  SUCURSALES: 'creditos_sucursales',\n  EMPLEADOS: 'creditos_empleados',\n  OPERACIONES: 'creditos_operaciones',\n  SIMULACIONES: 'creditos_simulaciones',\n  CUPOS: 'creditos_cupos',\n  LIQUIDACIONES: 'creditos_liquidaciones'\n};\n\n// Servicio para manejar la persistencia de datos en localStorage\nconst localStorageService = {\n  // Funciones genéricas para cualquier tipo de datos\n  saveData(key, data) {\n    try {\n      localStorage.setItem(key, JSON.stringify(data));\n      return true;\n    } catch (error) {\n      console.error(`Error al guardar datos en ${key}:`, error);\n      return false;\n    }\n  },\n  getData(key, defaultValue = []) {\n    try {\n      const data = localStorage.getItem(key);\n      return data ? JSON.parse(data) : defaultValue;\n    } catch (error) {\n      console.error(`Error al obtener datos de ${key}:`, error);\n      return defaultValue;\n    }\n  },\n  // Métodos específicos para cada tipo de entidad\n\n  // Aliados\n  getAliados() {\n    return this.getData(STORAGE_KEYS.ALIADOS, [{\n      _id: '1',\n      name: 'DIGITAL CENTER X',\n      contactName: 'Oscar David Madrigal',\n      document: '900123456-7',\n      email: 'contacto@digitalcenterx.com',\n      phone: '3001234567',\n      address: 'CL SANTANDER CON CR 52 A CENTRO',\n      commissionRate: 5,\n      creditLimit: 5000000,\n      isActive: true\n    }, {\n      _id: '2',\n      name: 'SAJI TIENDA',\n      contactName: 'María Alejandra Pineda',\n      document: '901234567-8',\n      email: 'contacto@sajitienda.com',\n      phone: '3109876543',\n      address: 'CL 48 N°51-97 CLL NUEVA',\n      commissionRate: 4.5,\n      creditLimit: 3000000,\n      isActive: true\n    }]);\n  },\n  saveAliados(aliados) {\n    return this.saveData(STORAGE_KEYS.ALIADOS, aliados);\n  },\n  addAliado(aliado) {\n    const aliados = this.getAliados();\n    aliado._id = aliado._id || Date.now().toString();\n    aliados.push(aliado);\n    return this.saveAliados(aliados);\n  },\n  updateAliado(aliadoId, aliadoData) {\n    const aliados = this.getAliados();\n    const index = aliados.findIndex(a => a._id === aliadoId);\n    if (index !== -1) {\n      aliados[index] = {\n        ...aliados[index],\n        ...aliadoData\n      };\n      return this.saveAliados(aliados);\n    }\n    return false;\n  },\n  deleteAliado(aliadoId) {\n    const aliados = this.getAliados();\n    const filteredAliados = aliados.filter(a => a._id !== aliadoId);\n    return this.saveAliados(filteredAliados);\n  },\n  // Sucursales\n  getSucursales() {\n    return this.getData(STORAGE_KEYS.SUCURSALES, [{\n      _id: '1',\n      commercialName: 'DIGITAL CENTER X',\n      responsible: {\n        _id: '101',\n        name: 'OSCAR DAVID MADRIGAL FONNEGRA'\n      },\n      address: 'CL SANTANDER CON CR 52 A CENTRO',\n      status: 'Activo'\n    }, {\n      _id: '2',\n      commercialName: 'SAJI TIENDA',\n      responsible: {\n        _id: '102',\n        name: 'MARIA ALEJANDRA PINEDA ESPINAL'\n      },\n      address: 'CL 48 N°51-97 CLL NUEVA',\n      status: 'Activo'\n    }]);\n  },\n  saveSucursales(sucursales) {\n    return this.saveData(STORAGE_KEYS.SUCURSALES, sucursales);\n  },\n  addSucursal(sucursal) {\n    const sucursales = this.getSucursales();\n    sucursal._id = sucursal._id || Date.now().toString();\n    sucursales.push(sucursal);\n    return this.saveSucursales(sucursales);\n  },\n  updateSucursal(sucursalId, sucursalData) {\n    const sucursales = this.getSucursales();\n    const index = sucursales.findIndex(s => s._id === sucursalId);\n    if (index !== -1) {\n      sucursales[index] = {\n        ...sucursales[index],\n        ...sucursalData\n      };\n      return this.saveSucursales(sucursales);\n    }\n    return false;\n  },\n  deleteSucursal(sucursalId) {\n    const sucursales = this.getSucursales();\n    const filteredSucursales = sucursales.filter(s => s._id !== sucursalId);\n    return this.saveSucursales(filteredSucursales);\n  },\n  // Empleados\n  getEmpleados() {\n    return this.getData(STORAGE_KEYS.EMPLEADOS, [{\n      _id: '101',\n      name: 'OSCAR DAVID MADRIGAL FONNEGRA',\n      document: '1032259508',\n      email: 'oscar.madrigal@ejemplo.com',\n      role: 'GERENTE GENERAL',\n      type: 'Super Usuario',\n      status: 'Activo'\n    }, {\n      _id: '102',\n      name: 'MARIA ALEJANDRA PINEDA ESPINAL',\n      document: '1032252344',\n      email: 'maria.pineda@ejemplo.com',\n      role: 'SOCIA',\n      type: 'Comercial',\n      status: 'Activo'\n    }]);\n  },\n  saveEmpleados(empleados) {\n    return this.saveData(STORAGE_KEYS.EMPLEADOS, empleados);\n  },\n  addEmpleado(empleado) {\n    const empleados = this.getEmpleados();\n    empleado._id = empleado._id || Date.now().toString();\n    empleados.push(empleado);\n    return this.saveEmpleados(empleados);\n  },\n  updateEmpleado(empleadoId, empleadoData) {\n    const empleados = this.getEmpleados();\n    const index = empleados.findIndex(e => e._id === empleadoId);\n    if (index !== -1) {\n      empleados[index] = {\n        ...empleados[index],\n        ...empleadoData\n      };\n      return this.saveEmpleados(empleados);\n    }\n    return false;\n  },\n  deleteEmpleado(empleadoId) {\n    const empleados = this.getEmpleados();\n    const filteredEmpleados = empleados.filter(e => e._id !== empleadoId);\n    return this.saveEmpleados(filteredEmpleados);\n  },\n  // Operaciones\n  getOperaciones() {\n    return this.getData(STORAGE_KEYS.OPERACIONES, [{\n      _id: '1',\n      cedula: '123456789',\n      cajero: 'María Alejandra Pineda',\n      fecha: '27/02/2025',\n      nombreCliente: 'Juan Pérez López',\n      montoAprobado: 1200000,\n      estado: 'Aprobada',\n      codigoEntrega: 'A-12345'\n    }, {\n      _id: '2',\n      cedula: '987654321',\n      cajero: 'Oscar David Madrigal',\n      fecha: '28/02/2025',\n      nombreCliente: 'Ana María Gómez',\n      montoAprobado: 850000,\n      estado: 'Negada',\n      codigoEntrega: 'A-54321'\n    }, {\n      _id: '3',\n      cedula: '456789123',\n      cajero: 'María Alejandra Pineda',\n      fecha: '01/03/2025',\n      nombreCliente: 'Carlos Rodríguez',\n      montoAprobado: 2000000,\n      estado: 'Aprobada',\n      codigoEntrega: 'A-67890'\n    }]);\n  },\n  saveOperaciones(operaciones) {\n    return this.saveData(STORAGE_KEYS.OPERACIONES, operaciones);\n  },\n  // Cupos\n  getCupos() {\n    return this.getData(STORAGE_KEYS.CUPOS, []);\n  },\n  saveCupos(cupos) {\n    return this.saveData(STORAGE_KEYS.CUPOS, cupos);\n  },\n  addCupo(cupo) {\n    const cupos = this.getCupos();\n    cupo._id = cupo._id || Date.now().toString();\n    cupos.push(cupo);\n    return this.saveCupos(cupos);\n  },\n  // Simulaciones\n  getSimulaciones() {\n    return this.getData(STORAGE_KEYS.SIMULACIONES, []);\n  },\n  saveSimulaciones(simulaciones) {\n    return this.saveData(STORAGE_KEYS.SIMULACIONES, simulaciones);\n  },\n  addSimulacion(simulacion) {\n    const simulaciones = this.getSimulaciones();\n    simulacion._id = simulacion._id || Date.now().toString();\n    simulaciones.push(simulacion);\n    return this.saveSimulaciones(simulaciones);\n  },\n  // Liquidaciones\n  getLiquidaciones() {\n    return this.getData(STORAGE_KEYS.LIQUIDACIONES, [{\n      _id: '1',\n      tipo: 'Venta',\n      fechaCierre: '01/03/2025',\n      comercial: 'María Alejandra Pineda',\n      documento: 'FAC-001',\n      cliente: 'Juan Pérez',\n      operaciones: 3,\n      disponible: 1500000,\n      comision: 75000,\n      comisionPorcentaje: 5,\n      iva: 14250,\n      aLiquidar: 1410750\n    }, {\n      _id: '2',\n      tipo: 'Venta',\n      fechaCierre: '02/03/2025',\n      comercial: 'Oscar David Madrigal',\n      documento: 'FAC-002',\n      cliente: 'Ana Gómez',\n      operaciones: 2,\n      disponible: 2000000,\n      comision: 100000,\n      comisionPorcentaje: 5,\n      iva: 19000,\n      aLiquidar: 1881000\n    }]);\n  },\n  saveLiquidaciones(liquidaciones) {\n    return this.saveData(STORAGE_KEYS.LIQUIDACIONES, liquidaciones);\n  }\n};\nexport default localStorageService;","map":{"version":3,"names":["STORAGE_KEYS","ALIADOS","SUCURSALES","EMPLEADOS","OPERACIONES","SIMULACIONES","CUPOS","LIQUIDACIONES","localStorageService","saveData","key","data","localStorage","setItem","JSON","stringify","error","console","getData","defaultValue","getItem","parse","getAliados","_id","name","contactName","document","email","phone","address","commissionRate","creditLimit","isActive","saveAliados","aliados","addAliado","aliado","Date","now","toString","push","updateAliado","aliadoId","aliadoData","index","findIndex","a","deleteAliado","filteredAliados","filter","getSucursales","commercialName","responsible","status","saveSucursales","sucursales","addSucursal","sucursal","updateSucursal","sucursalId","sucursalData","s","deleteSucursal","filteredSucursales","getEmpleados","role","type","saveEmpleados","empleados","addEmpleado","empleado","updateEmpleado","empleadoId","empleadoData","e","deleteEmpleado","filteredEmpleados","getOperaciones","cedula","cajero","fecha","nombreCliente","montoAprobado","estado","codigoEntrega","saveOperaciones","operaciones","getCupos","saveCupos","cupos","addCupo","cupo","getSimulaciones","saveSimulaciones","simulaciones","addSimulacion","simulacion","getLiquidaciones","tipo","fechaCierre","comercial","documento","cliente","disponible","comision","comisionPorcentaje","iva","aLiquidar","saveLiquidaciones","liquidaciones"],"sources":["C:/Users/OXKR/Documents/2025/API-VENTAS/pos-frontend/src/services/localStorage.js"],"sourcesContent":["// src/services/localStorage.js\r\n\r\n// Claves para almacenar diferentes tipos de datos\r\nconst STORAGE_KEYS = {\r\n    ALIADOS: 'creditos_aliados',\r\n    SUCURSALES: 'creditos_sucursales',\r\n    EMPLEADOS: 'creditos_empleados',\r\n    OPERACIONES: 'creditos_operaciones',\r\n    SIMULACIONES: 'creditos_simulaciones',\r\n    CUPOS: 'creditos_cupos',\r\n    LIQUIDACIONES: 'creditos_liquidaciones'\r\n  };\r\n  \r\n  // Servicio para manejar la persistencia de datos en localStorage\r\n  const localStorageService = {\r\n    // Funciones genéricas para cualquier tipo de datos\r\n    saveData(key, data) {\r\n      try {\r\n        localStorage.setItem(key, JSON.stringify(data));\r\n        return true;\r\n      } catch (error) {\r\n        console.error(`Error al guardar datos en ${key}:`, error);\r\n        return false;\r\n      }\r\n    },\r\n  \r\n    getData(key, defaultValue = []) {\r\n      try {\r\n        const data = localStorage.getItem(key);\r\n        return data ? JSON.parse(data) : defaultValue;\r\n      } catch (error) {\r\n        console.error(`Error al obtener datos de ${key}:`, error);\r\n        return defaultValue;\r\n      }\r\n    },\r\n  \r\n    // Métodos específicos para cada tipo de entidad\r\n    \r\n    // Aliados\r\n    getAliados() {\r\n      return this.getData(STORAGE_KEYS.ALIADOS, [\r\n        {\r\n          _id: '1',\r\n          name: 'DIGITAL CENTER X',\r\n          contactName: 'Oscar David Madrigal',\r\n          document: '900123456-7',\r\n          email: 'contacto@digitalcenterx.com',\r\n          phone: '3001234567',\r\n          address: 'CL SANTANDER CON CR 52 A CENTRO',\r\n          commissionRate: 5,\r\n          creditLimit: 5000000,\r\n          isActive: true\r\n        },\r\n        {\r\n          _id: '2',\r\n          name: 'SAJI TIENDA',\r\n          contactName: 'María Alejandra Pineda',\r\n          document: '901234567-8',\r\n          email: 'contacto@sajitienda.com',\r\n          phone: '3109876543',\r\n          address: 'CL 48 N°51-97 CLL NUEVA',\r\n          commissionRate: 4.5,\r\n          creditLimit: 3000000,\r\n          isActive: true\r\n        }\r\n      ]);\r\n    },\r\n  \r\n    saveAliados(aliados) {\r\n      return this.saveData(STORAGE_KEYS.ALIADOS, aliados);\r\n    },\r\n  \r\n    addAliado(aliado) {\r\n      const aliados = this.getAliados();\r\n      aliado._id = aliado._id || Date.now().toString();\r\n      aliados.push(aliado);\r\n      return this.saveAliados(aliados);\r\n    },\r\n  \r\n    updateAliado(aliadoId, aliadoData) {\r\n      const aliados = this.getAliados();\r\n      const index = aliados.findIndex(a => a._id === aliadoId);\r\n      if (index !== -1) {\r\n        aliados[index] = { ...aliados[index], ...aliadoData };\r\n        return this.saveAliados(aliados);\r\n      }\r\n      return false;\r\n    },\r\n  \r\n    deleteAliado(aliadoId) {\r\n      const aliados = this.getAliados();\r\n      const filteredAliados = aliados.filter(a => a._id !== aliadoId);\r\n      return this.saveAliados(filteredAliados);\r\n    },\r\n  \r\n    // Sucursales\r\n    getSucursales() {\r\n      return this.getData(STORAGE_KEYS.SUCURSALES, [\r\n        {\r\n          _id: '1',\r\n          commercialName: 'DIGITAL CENTER X',\r\n          responsible: {\r\n            _id: '101',\r\n            name: 'OSCAR DAVID MADRIGAL FONNEGRA'\r\n          },\r\n          address: 'CL SANTANDER CON CR 52 A CENTRO',\r\n          status: 'Activo'\r\n        },\r\n        {\r\n          _id: '2',\r\n          commercialName: 'SAJI TIENDA',\r\n          responsible: {\r\n            _id: '102',\r\n            name: 'MARIA ALEJANDRA PINEDA ESPINAL'\r\n          },\r\n          address: 'CL 48 N°51-97 CLL NUEVA',\r\n          status: 'Activo'\r\n        }\r\n      ]);\r\n    },\r\n  \r\n    saveSucursales(sucursales) {\r\n      return this.saveData(STORAGE_KEYS.SUCURSALES, sucursales);\r\n    },\r\n  \r\n    addSucursal(sucursal) {\r\n      const sucursales = this.getSucursales();\r\n      sucursal._id = sucursal._id || Date.now().toString();\r\n      sucursales.push(sucursal);\r\n      return this.saveSucursales(sucursales);\r\n    },\r\n  \r\n    updateSucursal(sucursalId, sucursalData) {\r\n      const sucursales = this.getSucursales();\r\n      const index = sucursales.findIndex(s => s._id === sucursalId);\r\n      if (index !== -1) {\r\n        sucursales[index] = { ...sucursales[index], ...sucursalData };\r\n        return this.saveSucursales(sucursales);\r\n      }\r\n      return false;\r\n    },\r\n  \r\n    deleteSucursal(sucursalId) {\r\n      const sucursales = this.getSucursales();\r\n      const filteredSucursales = sucursales.filter(s => s._id !== sucursalId);\r\n      return this.saveSucursales(filteredSucursales);\r\n    },\r\n  \r\n    // Empleados\r\n    getEmpleados() {\r\n      return this.getData(STORAGE_KEYS.EMPLEADOS, [\r\n        {\r\n          _id: '101',\r\n          name: 'OSCAR DAVID MADRIGAL FONNEGRA',\r\n          document: '1032259508',\r\n          email: 'oscar.madrigal@ejemplo.com',\r\n          role: 'GERENTE GENERAL',\r\n          type: 'Super Usuario',\r\n          status: 'Activo'\r\n        },\r\n        {\r\n          _id: '102',\r\n          name: 'MARIA ALEJANDRA PINEDA ESPINAL',\r\n          document: '1032252344',\r\n          email: 'maria.pineda@ejemplo.com',\r\n          role: 'SOCIA',\r\n          type: 'Comercial',\r\n          status: 'Activo'\r\n        }\r\n      ]);\r\n    },\r\n  \r\n    saveEmpleados(empleados) {\r\n      return this.saveData(STORAGE_KEYS.EMPLEADOS, empleados);\r\n    },\r\n  \r\n    addEmpleado(empleado) {\r\n      const empleados = this.getEmpleados();\r\n      empleado._id = empleado._id || Date.now().toString();\r\n      empleados.push(empleado);\r\n      return this.saveEmpleados(empleados);\r\n    },\r\n  \r\n    updateEmpleado(empleadoId, empleadoData) {\r\n      const empleados = this.getEmpleados();\r\n      const index = empleados.findIndex(e => e._id === empleadoId);\r\n      if (index !== -1) {\r\n        empleados[index] = { ...empleados[index], ...empleadoData };\r\n        return this.saveEmpleados(empleados);\r\n      }\r\n      return false;\r\n    },\r\n  \r\n    deleteEmpleado(empleadoId) {\r\n      const empleados = this.getEmpleados();\r\n      const filteredEmpleados = empleados.filter(e => e._id !== empleadoId);\r\n      return this.saveEmpleados(filteredEmpleados);\r\n    },\r\n  \r\n    // Operaciones\r\n    getOperaciones() {\r\n      return this.getData(STORAGE_KEYS.OPERACIONES, [\r\n        {\r\n          _id: '1',\r\n          cedula: '123456789',\r\n          cajero: 'María Alejandra Pineda',\r\n          fecha: '27/02/2025',\r\n          nombreCliente: 'Juan Pérez López',\r\n          montoAprobado: 1200000,\r\n          estado: 'Aprobada',\r\n          codigoEntrega: 'A-12345'\r\n        },\r\n        {\r\n          _id: '2',\r\n          cedula: '987654321',\r\n          cajero: 'Oscar David Madrigal',\r\n          fecha: '28/02/2025',\r\n          nombreCliente: 'Ana María Gómez',\r\n          montoAprobado: 850000,\r\n          estado: 'Negada',\r\n          codigoEntrega: 'A-54321'\r\n        },\r\n        {\r\n          _id: '3',\r\n          cedula: '456789123',\r\n          cajero: 'María Alejandra Pineda',\r\n          fecha: '01/03/2025',\r\n          nombreCliente: 'Carlos Rodríguez',\r\n          montoAprobado: 2000000,\r\n          estado: 'Aprobada',\r\n          codigoEntrega: 'A-67890'\r\n        }\r\n      ]);\r\n    },\r\n  \r\n    saveOperaciones(operaciones) {\r\n      return this.saveData(STORAGE_KEYS.OPERACIONES, operaciones);\r\n    },\r\n  \r\n    // Cupos\r\n    getCupos() {\r\n      return this.getData(STORAGE_KEYS.CUPOS, []);\r\n    },\r\n  \r\n    saveCupos(cupos) {\r\n      return this.saveData(STORAGE_KEYS.CUPOS, cupos);\r\n    },\r\n  \r\n    addCupo(cupo) {\r\n      const cupos = this.getCupos();\r\n      cupo._id = cupo._id || Date.now().toString();\r\n      cupos.push(cupo);\r\n      return this.saveCupos(cupos);\r\n    },\r\n  \r\n    // Simulaciones\r\n    getSimulaciones() {\r\n      return this.getData(STORAGE_KEYS.SIMULACIONES, []);\r\n    },\r\n  \r\n    saveSimulaciones(simulaciones) {\r\n      return this.saveData(STORAGE_KEYS.SIMULACIONES, simulaciones);\r\n    },\r\n  \r\n    addSimulacion(simulacion) {\r\n      const simulaciones = this.getSimulaciones();\r\n      simulacion._id = simulacion._id || Date.now().toString();\r\n      simulaciones.push(simulacion);\r\n      return this.saveSimulaciones(simulaciones);\r\n    },\r\n  \r\n    // Liquidaciones\r\n    getLiquidaciones() {\r\n      return this.getData(STORAGE_KEYS.LIQUIDACIONES, [\r\n        {\r\n          _id: '1',\r\n          tipo: 'Venta',\r\n          fechaCierre: '01/03/2025',\r\n          comercial: 'María Alejandra Pineda',\r\n          documento: 'FAC-001',\r\n          cliente: 'Juan Pérez',\r\n          operaciones: 3,\r\n          disponible: 1500000,\r\n          comision: 75000,\r\n          comisionPorcentaje: 5,\r\n          iva: 14250,\r\n          aLiquidar: 1410750\r\n        },\r\n        {\r\n          _id: '2',\r\n          tipo: 'Venta',\r\n          fechaCierre: '02/03/2025',\r\n          comercial: 'Oscar David Madrigal',\r\n          documento: 'FAC-002',\r\n          cliente: 'Ana Gómez',\r\n          operaciones: 2,\r\n          disponible: 2000000,\r\n          comision: 100000,\r\n          comisionPorcentaje: 5,\r\n          iva: 19000,\r\n          aLiquidar: 1881000\r\n        }\r\n      ]);\r\n    },\r\n  \r\n    saveLiquidaciones(liquidaciones) {\r\n      return this.saveData(STORAGE_KEYS.LIQUIDACIONES, liquidaciones);\r\n    }\r\n  };\r\n  \r\n  export default localStorageService;"],"mappings":"AAAA;;AAEA;AACA,MAAMA,YAAY,GAAG;EACjBC,OAAO,EAAE,kBAAkB;EAC3BC,UAAU,EAAE,qBAAqB;EACjCC,SAAS,EAAE,oBAAoB;EAC/BC,WAAW,EAAE,sBAAsB;EACnCC,YAAY,EAAE,uBAAuB;EACrCC,KAAK,EAAE,gBAAgB;EACvBC,aAAa,EAAE;AACjB,CAAC;;AAED;AACA,MAAMC,mBAAmB,GAAG;EAC1B;EACAC,QAAQA,CAACC,GAAG,EAAEC,IAAI,EAAE;IAClB,IAAI;MACFC,YAAY,CAACC,OAAO,CAACH,GAAG,EAAEI,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;MAC/C,OAAO,IAAI;IACb,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6BN,GAAG,GAAG,EAAEM,KAAK,CAAC;MACzD,OAAO,KAAK;IACd;EACF,CAAC;EAEDE,OAAOA,CAACR,GAAG,EAAES,YAAY,GAAG,EAAE,EAAE;IAC9B,IAAI;MACF,MAAMR,IAAI,GAAGC,YAAY,CAACQ,OAAO,CAACV,GAAG,CAAC;MACtC,OAAOC,IAAI,GAAGG,IAAI,CAACO,KAAK,CAACV,IAAI,CAAC,GAAGQ,YAAY;IAC/C,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6BN,GAAG,GAAG,EAAEM,KAAK,CAAC;MACzD,OAAOG,YAAY;IACrB;EACF,CAAC;EAED;;EAEA;EACAG,UAAUA,CAAA,EAAG;IACX,OAAO,IAAI,CAACJ,OAAO,CAAClB,YAAY,CAACC,OAAO,EAAE,CACxC;MACEsB,GAAG,EAAE,GAAG;MACRC,IAAI,EAAE,kBAAkB;MACxBC,WAAW,EAAE,sBAAsB;MACnCC,QAAQ,EAAE,aAAa;MACvBC,KAAK,EAAE,6BAA6B;MACpCC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE,iCAAiC;MAC1CC,cAAc,EAAE,CAAC;MACjBC,WAAW,EAAE,OAAO;MACpBC,QAAQ,EAAE;IACZ,CAAC,EACD;MACET,GAAG,EAAE,GAAG;MACRC,IAAI,EAAE,aAAa;MACnBC,WAAW,EAAE,wBAAwB;MACrCC,QAAQ,EAAE,aAAa;MACvBC,KAAK,EAAE,yBAAyB;MAChCC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE,yBAAyB;MAClCC,cAAc,EAAE,GAAG;MACnBC,WAAW,EAAE,OAAO;MACpBC,QAAQ,EAAE;IACZ,CAAC,CACF,CAAC;EACJ,CAAC;EAEDC,WAAWA,CAACC,OAAO,EAAE;IACnB,OAAO,IAAI,CAACzB,QAAQ,CAACT,YAAY,CAACC,OAAO,EAAEiC,OAAO,CAAC;EACrD,CAAC;EAEDC,SAASA,CAACC,MAAM,EAAE;IAChB,MAAMF,OAAO,GAAG,IAAI,CAACZ,UAAU,CAAC,CAAC;IACjCc,MAAM,CAACb,GAAG,GAAGa,MAAM,CAACb,GAAG,IAAIc,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;IAChDL,OAAO,CAACM,IAAI,CAACJ,MAAM,CAAC;IACpB,OAAO,IAAI,CAACH,WAAW,CAACC,OAAO,CAAC;EAClC,CAAC;EAEDO,YAAYA,CAACC,QAAQ,EAAEC,UAAU,EAAE;IACjC,MAAMT,OAAO,GAAG,IAAI,CAACZ,UAAU,CAAC,CAAC;IACjC,MAAMsB,KAAK,GAAGV,OAAO,CAACW,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACvB,GAAG,KAAKmB,QAAQ,CAAC;IACxD,IAAIE,KAAK,KAAK,CAAC,CAAC,EAAE;MAChBV,OAAO,CAACU,KAAK,CAAC,GAAG;QAAE,GAAGV,OAAO,CAACU,KAAK,CAAC;QAAE,GAAGD;MAAW,CAAC;MACrD,OAAO,IAAI,CAACV,WAAW,CAACC,OAAO,CAAC;IAClC;IACA,OAAO,KAAK;EACd,CAAC;EAEDa,YAAYA,CAACL,QAAQ,EAAE;IACrB,MAAMR,OAAO,GAAG,IAAI,CAACZ,UAAU,CAAC,CAAC;IACjC,MAAM0B,eAAe,GAAGd,OAAO,CAACe,MAAM,CAACH,CAAC,IAAIA,CAAC,CAACvB,GAAG,KAAKmB,QAAQ,CAAC;IAC/D,OAAO,IAAI,CAACT,WAAW,CAACe,eAAe,CAAC;EAC1C,CAAC;EAED;EACAE,aAAaA,CAAA,EAAG;IACd,OAAO,IAAI,CAAChC,OAAO,CAAClB,YAAY,CAACE,UAAU,EAAE,CAC3C;MACEqB,GAAG,EAAE,GAAG;MACR4B,cAAc,EAAE,kBAAkB;MAClCC,WAAW,EAAE;QACX7B,GAAG,EAAE,KAAK;QACVC,IAAI,EAAE;MACR,CAAC;MACDK,OAAO,EAAE,iCAAiC;MAC1CwB,MAAM,EAAE;IACV,CAAC,EACD;MACE9B,GAAG,EAAE,GAAG;MACR4B,cAAc,EAAE,aAAa;MAC7BC,WAAW,EAAE;QACX7B,GAAG,EAAE,KAAK;QACVC,IAAI,EAAE;MACR,CAAC;MACDK,OAAO,EAAE,yBAAyB;MAClCwB,MAAM,EAAE;IACV,CAAC,CACF,CAAC;EACJ,CAAC;EAEDC,cAAcA,CAACC,UAAU,EAAE;IACzB,OAAO,IAAI,CAAC9C,QAAQ,CAACT,YAAY,CAACE,UAAU,EAAEqD,UAAU,CAAC;EAC3D,CAAC;EAEDC,WAAWA,CAACC,QAAQ,EAAE;IACpB,MAAMF,UAAU,GAAG,IAAI,CAACL,aAAa,CAAC,CAAC;IACvCO,QAAQ,CAAClC,GAAG,GAAGkC,QAAQ,CAAClC,GAAG,IAAIc,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;IACpDgB,UAAU,CAACf,IAAI,CAACiB,QAAQ,CAAC;IACzB,OAAO,IAAI,CAACH,cAAc,CAACC,UAAU,CAAC;EACxC,CAAC;EAEDG,cAAcA,CAACC,UAAU,EAAEC,YAAY,EAAE;IACvC,MAAML,UAAU,GAAG,IAAI,CAACL,aAAa,CAAC,CAAC;IACvC,MAAMN,KAAK,GAAGW,UAAU,CAACV,SAAS,CAACgB,CAAC,IAAIA,CAAC,CAACtC,GAAG,KAAKoC,UAAU,CAAC;IAC7D,IAAIf,KAAK,KAAK,CAAC,CAAC,EAAE;MAChBW,UAAU,CAACX,KAAK,CAAC,GAAG;QAAE,GAAGW,UAAU,CAACX,KAAK,CAAC;QAAE,GAAGgB;MAAa,CAAC;MAC7D,OAAO,IAAI,CAACN,cAAc,CAACC,UAAU,CAAC;IACxC;IACA,OAAO,KAAK;EACd,CAAC;EAEDO,cAAcA,CAACH,UAAU,EAAE;IACzB,MAAMJ,UAAU,GAAG,IAAI,CAACL,aAAa,CAAC,CAAC;IACvC,MAAMa,kBAAkB,GAAGR,UAAU,CAACN,MAAM,CAACY,CAAC,IAAIA,CAAC,CAACtC,GAAG,KAAKoC,UAAU,CAAC;IACvE,OAAO,IAAI,CAACL,cAAc,CAACS,kBAAkB,CAAC;EAChD,CAAC;EAED;EACAC,YAAYA,CAAA,EAAG;IACb,OAAO,IAAI,CAAC9C,OAAO,CAAClB,YAAY,CAACG,SAAS,EAAE,CAC1C;MACEoB,GAAG,EAAE,KAAK;MACVC,IAAI,EAAE,+BAA+B;MACrCE,QAAQ,EAAE,YAAY;MACtBC,KAAK,EAAE,4BAA4B;MACnCsC,IAAI,EAAE,iBAAiB;MACvBC,IAAI,EAAE,eAAe;MACrBb,MAAM,EAAE;IACV,CAAC,EACD;MACE9B,GAAG,EAAE,KAAK;MACVC,IAAI,EAAE,gCAAgC;MACtCE,QAAQ,EAAE,YAAY;MACtBC,KAAK,EAAE,0BAA0B;MACjCsC,IAAI,EAAE,OAAO;MACbC,IAAI,EAAE,WAAW;MACjBb,MAAM,EAAE;IACV,CAAC,CACF,CAAC;EACJ,CAAC;EAEDc,aAAaA,CAACC,SAAS,EAAE;IACvB,OAAO,IAAI,CAAC3D,QAAQ,CAACT,YAAY,CAACG,SAAS,EAAEiE,SAAS,CAAC;EACzD,CAAC;EAEDC,WAAWA,CAACC,QAAQ,EAAE;IACpB,MAAMF,SAAS,GAAG,IAAI,CAACJ,YAAY,CAAC,CAAC;IACrCM,QAAQ,CAAC/C,GAAG,GAAG+C,QAAQ,CAAC/C,GAAG,IAAIc,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;IACpD6B,SAAS,CAAC5B,IAAI,CAAC8B,QAAQ,CAAC;IACxB,OAAO,IAAI,CAACH,aAAa,CAACC,SAAS,CAAC;EACtC,CAAC;EAEDG,cAAcA,CAACC,UAAU,EAAEC,YAAY,EAAE;IACvC,MAAML,SAAS,GAAG,IAAI,CAACJ,YAAY,CAAC,CAAC;IACrC,MAAMpB,KAAK,GAAGwB,SAAS,CAACvB,SAAS,CAAC6B,CAAC,IAAIA,CAAC,CAACnD,GAAG,KAAKiD,UAAU,CAAC;IAC5D,IAAI5B,KAAK,KAAK,CAAC,CAAC,EAAE;MAChBwB,SAAS,CAACxB,KAAK,CAAC,GAAG;QAAE,GAAGwB,SAAS,CAACxB,KAAK,CAAC;QAAE,GAAG6B;MAAa,CAAC;MAC3D,OAAO,IAAI,CAACN,aAAa,CAACC,SAAS,CAAC;IACtC;IACA,OAAO,KAAK;EACd,CAAC;EAEDO,cAAcA,CAACH,UAAU,EAAE;IACzB,MAAMJ,SAAS,GAAG,IAAI,CAACJ,YAAY,CAAC,CAAC;IACrC,MAAMY,iBAAiB,GAAGR,SAAS,CAACnB,MAAM,CAACyB,CAAC,IAAIA,CAAC,CAACnD,GAAG,KAAKiD,UAAU,CAAC;IACrE,OAAO,IAAI,CAACL,aAAa,CAACS,iBAAiB,CAAC;EAC9C,CAAC;EAED;EACAC,cAAcA,CAAA,EAAG;IACf,OAAO,IAAI,CAAC3D,OAAO,CAAClB,YAAY,CAACI,WAAW,EAAE,CAC5C;MACEmB,GAAG,EAAE,GAAG;MACRuD,MAAM,EAAE,WAAW;MACnBC,MAAM,EAAE,wBAAwB;MAChCC,KAAK,EAAE,YAAY;MACnBC,aAAa,EAAE,kBAAkB;MACjCC,aAAa,EAAE,OAAO;MACtBC,MAAM,EAAE,UAAU;MAClBC,aAAa,EAAE;IACjB,CAAC,EACD;MACE7D,GAAG,EAAE,GAAG;MACRuD,MAAM,EAAE,WAAW;MACnBC,MAAM,EAAE,sBAAsB;MAC9BC,KAAK,EAAE,YAAY;MACnBC,aAAa,EAAE,iBAAiB;MAChCC,aAAa,EAAE,MAAM;MACrBC,MAAM,EAAE,QAAQ;MAChBC,aAAa,EAAE;IACjB,CAAC,EACD;MACE7D,GAAG,EAAE,GAAG;MACRuD,MAAM,EAAE,WAAW;MACnBC,MAAM,EAAE,wBAAwB;MAChCC,KAAK,EAAE,YAAY;MACnBC,aAAa,EAAE,kBAAkB;MACjCC,aAAa,EAAE,OAAO;MACtBC,MAAM,EAAE,UAAU;MAClBC,aAAa,EAAE;IACjB,CAAC,CACF,CAAC;EACJ,CAAC;EAEDC,eAAeA,CAACC,WAAW,EAAE;IAC3B,OAAO,IAAI,CAAC7E,QAAQ,CAACT,YAAY,CAACI,WAAW,EAAEkF,WAAW,CAAC;EAC7D,CAAC;EAED;EACAC,QAAQA,CAAA,EAAG;IACT,OAAO,IAAI,CAACrE,OAAO,CAAClB,YAAY,CAACM,KAAK,EAAE,EAAE,CAAC;EAC7C,CAAC;EAEDkF,SAASA,CAACC,KAAK,EAAE;IACf,OAAO,IAAI,CAAChF,QAAQ,CAACT,YAAY,CAACM,KAAK,EAAEmF,KAAK,CAAC;EACjD,CAAC;EAEDC,OAAOA,CAACC,IAAI,EAAE;IACZ,MAAMF,KAAK,GAAG,IAAI,CAACF,QAAQ,CAAC,CAAC;IAC7BI,IAAI,CAACpE,GAAG,GAAGoE,IAAI,CAACpE,GAAG,IAAIc,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;IAC5CkD,KAAK,CAACjD,IAAI,CAACmD,IAAI,CAAC;IAChB,OAAO,IAAI,CAACH,SAAS,CAACC,KAAK,CAAC;EAC9B,CAAC;EAED;EACAG,eAAeA,CAAA,EAAG;IAChB,OAAO,IAAI,CAAC1E,OAAO,CAAClB,YAAY,CAACK,YAAY,EAAE,EAAE,CAAC;EACpD,CAAC;EAEDwF,gBAAgBA,CAACC,YAAY,EAAE;IAC7B,OAAO,IAAI,CAACrF,QAAQ,CAACT,YAAY,CAACK,YAAY,EAAEyF,YAAY,CAAC;EAC/D,CAAC;EAEDC,aAAaA,CAACC,UAAU,EAAE;IACxB,MAAMF,YAAY,GAAG,IAAI,CAACF,eAAe,CAAC,CAAC;IAC3CI,UAAU,CAACzE,GAAG,GAAGyE,UAAU,CAACzE,GAAG,IAAIc,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;IACxDuD,YAAY,CAACtD,IAAI,CAACwD,UAAU,CAAC;IAC7B,OAAO,IAAI,CAACH,gBAAgB,CAACC,YAAY,CAAC;EAC5C,CAAC;EAED;EACAG,gBAAgBA,CAAA,EAAG;IACjB,OAAO,IAAI,CAAC/E,OAAO,CAAClB,YAAY,CAACO,aAAa,EAAE,CAC9C;MACEgB,GAAG,EAAE,GAAG;MACR2E,IAAI,EAAE,OAAO;MACbC,WAAW,EAAE,YAAY;MACzBC,SAAS,EAAE,wBAAwB;MACnCC,SAAS,EAAE,SAAS;MACpBC,OAAO,EAAE,YAAY;MACrBhB,WAAW,EAAE,CAAC;MACdiB,UAAU,EAAE,OAAO;MACnBC,QAAQ,EAAE,KAAK;MACfC,kBAAkB,EAAE,CAAC;MACrBC,GAAG,EAAE,KAAK;MACVC,SAAS,EAAE;IACb,CAAC,EACD;MACEpF,GAAG,EAAE,GAAG;MACR2E,IAAI,EAAE,OAAO;MACbC,WAAW,EAAE,YAAY;MACzBC,SAAS,EAAE,sBAAsB;MACjCC,SAAS,EAAE,SAAS;MACpBC,OAAO,EAAE,WAAW;MACpBhB,WAAW,EAAE,CAAC;MACdiB,UAAU,EAAE,OAAO;MACnBC,QAAQ,EAAE,MAAM;MAChBC,kBAAkB,EAAE,CAAC;MACrBC,GAAG,EAAE,KAAK;MACVC,SAAS,EAAE;IACb,CAAC,CACF,CAAC;EACJ,CAAC;EAEDC,iBAAiBA,CAACC,aAAa,EAAE;IAC/B,OAAO,IAAI,CAACpG,QAAQ,CAACT,YAAY,CAACO,aAAa,EAAEsG,aAAa,CAAC;EACjE;AACF,CAAC;AAED,eAAerG,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}