{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OXKR\\\\Documents\\\\2025\\\\API-VENTAS\\\\pos-frontend\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\n// src/components/Login.js\nimport React, { useState } from 'react';\nimport api from '../services/api'; // Importa el servicio API configurado\nimport { useNavigate } from 'react-router-dom'; // Si estás usando React Router v6\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const navigate = useNavigate(); // Para redireccionar con React Router\n\n  const handleLogin = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    try {\n      // Usar el servicio API configurado\n      const response = await api.post('/auth/login', {\n        email,\n        password\n      });\n\n      // Verificar si la respuesta contiene un token\n      if (response.data.success && response.data.token) {\n        // Guardar el token JWT en localStorage\n        localStorage.setItem('token', response.data.token);\n\n        // Guardar la información del usuario\n        if (response.data.user) {\n          localStorage.setItem('user', JSON.stringify(response.data.user));\n        }\n\n        // Redireccionar al dashboard usando React Router\n        navigate('/dashboard');\n      } else {\n        setError('Respuesta del servidor inválida');\n      }\n    } catch (error) {\n      console.error('Error de login:', error);\n\n      // Manejar diferentes tipos de errores\n      if (error.response) {\n        // El servidor respondió con un código de estado fuera del rango 2xx\n        if (error.response.status === 401) {\n          setError('Credenciales inválidas');\n        } else if (error.response.data && error.response.data.message) {\n          setError(error.response.data.message);\n        } else {\n          setError(`Error del servidor: ${error.response.status}`);\n        }\n      } else if (error.request) {\n        // La solicitud se hizo pero no se recibió respuesta\n        setError('No se pudo conectar con el servidor. Verifica tu conexión a internet.');\n      } else {\n        // Algo ocurrió al configurar la solicitud\n        setError(`Error: ${error.message}`);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Iniciar Sesi\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Contrase\\xF1a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Cargando...' : 'Iniciar Sesión'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"oys+aRSDi2Lrf1KkdpCiCHhej3A=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","api","useNavigate","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","loading","setLoading","error","setError","navigate","handleLogin","e","preventDefault","response","post","data","success","token","localStorage","setItem","user","JSON","stringify","console","status","message","request","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","disabled","_c","$RefreshReg$"],"sources":["C:/Users/OXKR/Documents/2025/API-VENTAS/pos-frontend/src/components/Login.js"],"sourcesContent":["// src/components/Login.js\r\nimport React, { useState } from 'react';\r\nimport api from '../services/api'; // Importa el servicio API configurado\r\nimport { useNavigate } from 'react-router-dom'; // Si estás usando React Router v6\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate(); // Para redireccionar con React Router\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n    \r\n    try {\r\n      // Usar el servicio API configurado\r\n      const response = await api.post('/auth/login', { email, password });\r\n      \r\n      // Verificar si la respuesta contiene un token\r\n      if (response.data.success && response.data.token) {\r\n        // Guardar el token JWT en localStorage\r\n        localStorage.setItem('token', response.data.token);\r\n        \r\n        // Guardar la información del usuario\r\n        if (response.data.user) {\r\n          localStorage.setItem('user', JSON.stringify(response.data.user));\r\n        }\r\n        \r\n        // Redireccionar al dashboard usando React Router\r\n        navigate('/dashboard');\r\n      } else {\r\n        setError('Respuesta del servidor inválida');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error de login:', error);\r\n      \r\n      // Manejar diferentes tipos de errores\r\n      if (error.response) {\r\n        // El servidor respondió con un código de estado fuera del rango 2xx\r\n        if (error.response.status === 401) {\r\n          setError('Credenciales inválidas');\r\n        } else if (error.response.data && error.response.data.message) {\r\n          setError(error.response.data.message);\r\n        } else {\r\n          setError(`Error del servidor: ${error.response.status}`);\r\n        }\r\n      } else if (error.request) {\r\n        // La solicitud se hizo pero no se recibió respuesta\r\n        setError('No se pudo conectar con el servidor. Verifica tu conexión a internet.');\r\n      } else {\r\n        // Algo ocurrió al configurar la solicitud\r\n        setError(`Error: ${error.message}`);\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <form onSubmit={handleLogin}>\r\n        <h2>Iniciar Sesión</h2>\r\n        {error && <div className=\"error-message\">{error}</div>}\r\n        <div className=\"form-group\">\r\n          <label>Email</label>\r\n          <input \r\n            type=\"email\" \r\n            value={email} \r\n            onChange={(e) => setEmail(e.target.value)} \r\n            required \r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Contraseña</label>\r\n          <input \r\n            type=\"password\" \r\n            value={password} \r\n            onChange={(e) => setPassword(e.target.value)} \r\n            required \r\n          />\r\n        </div>\r\n        <button type=\"submit\" disabled={loading}>\r\n          {loading ? 'Cargando...' : 'Iniciar Sesión'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}