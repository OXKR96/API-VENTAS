{"ast":null,"code":"// src/services/localStorage.js\n\n// Claves para almacenar diferentes tipos de datos\nconst STORAGE_KEYS = {\n  ALIADOS: 'creditos_aliados',\n  SUCURSALES: 'creditos_sucursales',\n  EMPLEADOS: 'creditos_empleados',\n  OPERACIONES: 'creditos_operaciones',\n  SIMULACIONES: 'creditos_simulaciones',\n  CUPOS: 'creditos_cupos',\n  LIQUIDACIONES: 'creditos_liquidaciones'\n};\n\n// Servicio para manejar la persistencia de datos en localStorage\nconst localStorageService = {\n  // Funciones genéricas para cualquier tipo de datos\n  saveData(key, data) {\n    try {\n      localStorage.setItem(key, JSON.stringify(data));\n      return true;\n    } catch (error) {\n      console.error(`Error al guardar datos en ${key}:`, error);\n      return false;\n    }\n  },\n  getData(key, defaultValue = []) {\n    try {\n      const data = localStorage.getItem(key);\n      return data ? JSON.parse(data) : defaultValue;\n    } catch (error) {\n      console.error(`Error al obtener datos de ${key}:`, error);\n      return defaultValue;\n    }\n  },\n  // Métodos específicos para cada tipo de entidad\n\n  // Aliados\n  getAliados() {\n    return this.getData(STORAGE_KEYS.ALIADOS, []);\n  },\n  saveAliados(aliados) {\n    return this.saveData(STORAGE_KEYS.ALIADOS, aliados);\n  },\n  addAliado(aliado) {\n    const aliados = this.getAliados();\n    aliado._id = aliado._id || Date.now().toString();\n    aliados.push(aliado);\n    return this.saveAliados(aliados);\n  },\n  updateAliado(aliadoId, aliadoData) {\n    const aliados = this.getAliados();\n    const index = aliados.findIndex(a => a._id === aliadoId);\n    if (index !== -1) {\n      aliados[index] = {\n        ...aliados[index],\n        ...aliadoData\n      };\n      return this.saveAliados(aliados);\n    }\n    return false;\n  },\n  deleteAliado(aliadoId) {\n    const aliados = this.getAliados();\n    const filteredAliados = aliados.filter(a => a._id !== aliadoId);\n    return this.saveAliados(filteredAliados);\n  },\n  // Sucursales\n  getSucursales() {\n    return this.getData(STORAGE_KEYS.SUCURSALES, []);\n  },\n  saveSucursales(sucursales) {\n    return this.saveData(STORAGE_KEYS.SUCURSALES, sucursales);\n  },\n  addSucursal(sucursal) {\n    const sucursales = this.getSucursales();\n    sucursal._id = sucursal._id || Date.now().toString();\n    sucursales.push(sucursal);\n    return this.saveSucursales(sucursales);\n  },\n  updateSucursal(sucursalId, sucursalData) {\n    const sucursales = this.getSucursales();\n    const index = sucursales.findIndex(s => s._id === sucursalId);\n    if (index !== -1) {\n      sucursales[index] = {\n        ...sucursales[index],\n        ...sucursalData\n      };\n      return this.saveSucursales(sucursales);\n    }\n    return false;\n  },\n  deleteSucursal(sucursalId) {\n    const sucursales = this.getSucursales();\n    const filteredSucursales = sucursales.filter(s => s._id !== sucursalId);\n    return this.saveSucursales(filteredSucursales);\n  },\n  // Empleados\n  getEmpleados() {\n    return this.getData(STORAGE_KEYS.EMPLEADOS, []);\n  },\n  saveEmpleados(empleados) {\n    return this.saveData(STORAGE_KEYS.EMPLEADOS, empleados);\n  },\n  addEmpleado(empleado) {\n    const empleados = this.getEmpleados();\n    empleado._id = empleado._id || Date.now().toString();\n    empleados.push(empleado);\n    return this.saveEmpleados(empleados);\n  },\n  updateEmpleado(empleadoId, empleadoData) {\n    const empleados = this.getEmpleados();\n    const index = empleados.findIndex(e => e._id === empleadoId);\n    if (index !== -1) {\n      empleados[index] = {\n        ...empleados[index],\n        ...empleadoData\n      };\n      return this.saveEmpleados(empleados);\n    }\n    return false;\n  },\n  deleteEmpleado(empleadoId) {\n    const empleados = this.getEmpleados();\n    const filteredEmpleados = empleados.filter(e => e._id !== empleadoId);\n    return this.saveEmpleados(filteredEmpleados);\n  },\n  // Operaciones\n  getOperaciones() {\n    return this.getData(STORAGE_KEYS.OPERACIONES, []);\n  },\n  saveOperaciones(operaciones) {\n    return this.saveData(STORAGE_KEYS.OPERACIONES, operaciones);\n  },\n  addOperacion(operacion) {\n    const operaciones = this.getOperaciones();\n    operacion._id = operacion._id || Date.now().toString();\n    operaciones.push(operacion);\n    return this.saveOperaciones(operaciones);\n  },\n  updateOperacion(operacionId, operacionData) {\n    const operaciones = this.getOperaciones();\n    const index = operaciones.findIndex(o => o._id === operacionId);\n    if (index !== -1) {\n      operaciones[index] = {\n        ...operaciones[index],\n        ...operacionData\n      };\n      return this.saveOperaciones(operaciones);\n    }\n    return false;\n  },\n  deleteOperacion(operacionId) {\n    const operaciones = this.getOperaciones();\n    const filteredOperaciones = operaciones.filter(o => o._id !== operacionId);\n    return this.saveOperaciones(filteredOperaciones);\n  },\n  // Cupos\n  getCupos() {\n    return this.getData(STORAGE_KEYS.CUPOS, []);\n  },\n  saveCupos(cupos) {\n    return this.saveData(STORAGE_KEYS.CUPOS, cupos);\n  },\n  addCupo(cupo) {\n    const cupos = this.getCupos();\n    cupo._id = cupo._id || Date.now().toString();\n    cupos.push(cupo);\n    return this.saveCupos(cupos);\n  },\n  updateCupo(cupoId, cupoData) {\n    const cupos = this.getCupos();\n    const index = cupos.findIndex(c => c._id === cupoId);\n    if (index !== -1) {\n      cupos[index] = {\n        ...cupos[index],\n        ...cupoData\n      };\n      return this.saveCupos(cupos);\n    }\n    return false;\n  },\n  deleteCupo(cupoId) {\n    const cupos = this.getCupos();\n    const filteredCupos = cupos.filter(c => c._id !== cupoId);\n    return this.saveCupos(filteredCupos);\n  },\n  // Simulaciones\n  getSimulaciones() {\n    return this.getData(STORAGE_KEYS.SIMULACIONES, []);\n  },\n  saveSimulaciones(simulaciones) {\n    return this.saveData(STORAGE_KEYS.SIMULACIONES, simulaciones);\n  },\n  addSimulacion(simulacion) {\n    const simulaciones = this.getSimulaciones();\n    simulacion._id = simulacion._id || Date.now().toString();\n    simulaciones.push(simulacion);\n    return this.saveSimulaciones(simulaciones);\n  },\n  updateSimulacion(simulacionId, simulacionData) {\n    const simulaciones = this.getSimulaciones();\n    const index = simulaciones.findIndex(s => s._id === simulacionId);\n    if (index !== -1) {\n      simulaciones[index] = {\n        ...simulaciones[index],\n        ...simulacionData\n      };\n      return this.saveSimulaciones(simulaciones);\n    }\n    return false;\n  },\n  deleteSimulacion(simulacionId) {\n    const simulaciones = this.getSimulaciones();\n    const filteredSimulaciones = simulaciones.filter(s => s._id !== simulacionId);\n    return this.saveSimulaciones(filteredSimulaciones);\n  },\n  // Liquidaciones\n  getLiquidaciones() {\n    return this.getData(STORAGE_KEYS.LIQUIDACIONES, []);\n  },\n  saveLiquidaciones(liquidaciones) {\n    return this.saveData(STORAGE_KEYS.LIQUIDACIONES, liquidaciones);\n  },\n  addLiquidacion(liquidacion) {\n    const liquidaciones = this.getLiquidaciones();\n    liquidacion._id = liquidacion._id || Date.now().toString();\n    liquidaciones.push(liquidacion);\n    return this.saveLiquidaciones(liquidaciones);\n  },\n  updateLiquidacion(liquidacionId, liquidacionData) {\n    const liquidaciones = this.getLiquidaciones();\n    const index = liquidaciones.findIndex(l => l._id === liquidacionId);\n    if (index !== -1) {\n      liquidaciones[index] = {\n        ...liquidaciones[index],\n        ...liquidacionData\n      };\n      return this.saveLiquidaciones(liquidaciones);\n    }\n    return false;\n  },\n  deleteLiquidacion(liquidacionId) {\n    const liquidaciones = this.getLiquidaciones();\n    const filteredLiquidaciones = liquidaciones.filter(l => l._id !== liquidacionId);\n    return this.saveLiquidaciones(filteredLiquidaciones);\n  }\n};\nexport default localStorageService;","map":{"version":3,"names":["STORAGE_KEYS","ALIADOS","SUCURSALES","EMPLEADOS","OPERACIONES","SIMULACIONES","CUPOS","LIQUIDACIONES","localStorageService","saveData","key","data","localStorage","setItem","JSON","stringify","error","console","getData","defaultValue","getItem","parse","getAliados","saveAliados","aliados","addAliado","aliado","_id","Date","now","toString","push","updateAliado","aliadoId","aliadoData","index","findIndex","a","deleteAliado","filteredAliados","filter","getSucursales","saveSucursales","sucursales","addSucursal","sucursal","updateSucursal","sucursalId","sucursalData","s","deleteSucursal","filteredSucursales","getEmpleados","saveEmpleados","empleados","addEmpleado","empleado","updateEmpleado","empleadoId","empleadoData","e","deleteEmpleado","filteredEmpleados","getOperaciones","saveOperaciones","operaciones","addOperacion","operacion","updateOperacion","operacionId","operacionData","o","deleteOperacion","filteredOperaciones","getCupos","saveCupos","cupos","addCupo","cupo","updateCupo","cupoId","cupoData","c","deleteCupo","filteredCupos","getSimulaciones","saveSimulaciones","simulaciones","addSimulacion","simulacion","updateSimulacion","simulacionId","simulacionData","deleteSimulacion","filteredSimulaciones","getLiquidaciones","saveLiquidaciones","liquidaciones","addLiquidacion","liquidacion","updateLiquidacion","liquidacionId","liquidacionData","l","deleteLiquidacion","filteredLiquidaciones"],"sources":["C:/Users/OXKR/Documents/2025/API-VENTAS/pos-frontend/src/services/localStorage.js"],"sourcesContent":["// src/services/localStorage.js\r\n\r\n// Claves para almacenar diferentes tipos de datos\r\nconst STORAGE_KEYS = {\r\n    ALIADOS: 'creditos_aliados',\r\n    SUCURSALES: 'creditos_sucursales',\r\n    EMPLEADOS: 'creditos_empleados',\r\n    OPERACIONES: 'creditos_operaciones',\r\n    SIMULACIONES: 'creditos_simulaciones',\r\n    CUPOS: 'creditos_cupos',\r\n    LIQUIDACIONES: 'creditos_liquidaciones'\r\n  };\r\n  \r\n  // Servicio para manejar la persistencia de datos en localStorage\r\n  const localStorageService = {\r\n    // Funciones genéricas para cualquier tipo de datos\r\n    saveData(key, data) {\r\n      try {\r\n        localStorage.setItem(key, JSON.stringify(data));\r\n        return true;\r\n      } catch (error) {\r\n        console.error(`Error al guardar datos en ${key}:`, error);\r\n        return false;\r\n      }\r\n    },\r\n  \r\n    getData(key, defaultValue = []) {\r\n      try {\r\n        const data = localStorage.getItem(key);\r\n        return data ? JSON.parse(data) : defaultValue;\r\n      } catch (error) {\r\n        console.error(`Error al obtener datos de ${key}:`, error);\r\n        return defaultValue;\r\n      }\r\n    },\r\n  \r\n    // Métodos específicos para cada tipo de entidad\r\n    \r\n    // Aliados\r\n    getAliados() {\r\n      return this.getData(STORAGE_KEYS.ALIADOS, []);\r\n    },\r\n  \r\n    saveAliados(aliados) {\r\n      return this.saveData(STORAGE_KEYS.ALIADOS, aliados);\r\n    },\r\n  \r\n    addAliado(aliado) {\r\n      const aliados = this.getAliados();\r\n      aliado._id = aliado._id || Date.now().toString();\r\n      aliados.push(aliado);\r\n      return this.saveAliados(aliados);\r\n    },\r\n  \r\n    updateAliado(aliadoId, aliadoData) {\r\n      const aliados = this.getAliados();\r\n      const index = aliados.findIndex(a => a._id === aliadoId);\r\n      if (index !== -1) {\r\n        aliados[index] = { ...aliados[index], ...aliadoData };\r\n        return this.saveAliados(aliados);\r\n      }\r\n      return false;\r\n    },\r\n  \r\n    deleteAliado(aliadoId) {\r\n      const aliados = this.getAliados();\r\n      const filteredAliados = aliados.filter(a => a._id !== aliadoId);\r\n      return this.saveAliados(filteredAliados);\r\n    },\r\n  \r\n    // Sucursales\r\n    getSucursales() {\r\n      return this.getData(STORAGE_KEYS.SUCURSALES, []);\r\n    },\r\n  \r\n    saveSucursales(sucursales) {\r\n      return this.saveData(STORAGE_KEYS.SUCURSALES, sucursales);\r\n    },\r\n  \r\n    addSucursal(sucursal) {\r\n      const sucursales = this.getSucursales();\r\n      sucursal._id = sucursal._id || Date.now().toString();\r\n      sucursales.push(sucursal);\r\n      return this.saveSucursales(sucursales);\r\n    },\r\n  \r\n    updateSucursal(sucursalId, sucursalData) {\r\n      const sucursales = this.getSucursales();\r\n      const index = sucursales.findIndex(s => s._id === sucursalId);\r\n      if (index !== -1) {\r\n        sucursales[index] = { ...sucursales[index], ...sucursalData };\r\n        return this.saveSucursales(sucursales);\r\n      }\r\n      return false;\r\n    },\r\n  \r\n    deleteSucursal(sucursalId) {\r\n      const sucursales = this.getSucursales();\r\n      const filteredSucursales = sucursales.filter(s => s._id !== sucursalId);\r\n      return this.saveSucursales(filteredSucursales);\r\n    },\r\n  \r\n    // Empleados\r\n    getEmpleados() {\r\n      return this.getData(STORAGE_KEYS.EMPLEADOS, []);\r\n    },\r\n  \r\n    saveEmpleados(empleados) {\r\n      return this.saveData(STORAGE_KEYS.EMPLEADOS, empleados);\r\n    },\r\n  \r\n    addEmpleado(empleado) {\r\n      const empleados = this.getEmpleados();\r\n      empleado._id = empleado._id || Date.now().toString();\r\n      empleados.push(empleado);\r\n      return this.saveEmpleados(empleados);\r\n    },\r\n  \r\n    updateEmpleado(empleadoId, empleadoData) {\r\n      const empleados = this.getEmpleados();\r\n      const index = empleados.findIndex(e => e._id === empleadoId);\r\n      if (index !== -1) {\r\n        empleados[index] = { ...empleados[index], ...empleadoData };\r\n        return this.saveEmpleados(empleados);\r\n      }\r\n      return false;\r\n    },\r\n  \r\n    deleteEmpleado(empleadoId) {\r\n      const empleados = this.getEmpleados();\r\n      const filteredEmpleados = empleados.filter(e => e._id !== empleadoId);\r\n      return this.saveEmpleados(filteredEmpleados);\r\n    },\r\n  \r\n    // Operaciones\r\n    getOperaciones() {\r\n      return this.getData(STORAGE_KEYS.OPERACIONES, []);\r\n    },\r\n  \r\n    saveOperaciones(operaciones) {\r\n      return this.saveData(STORAGE_KEYS.OPERACIONES, operaciones);\r\n    },\r\n  \r\n    addOperacion(operacion) {\r\n      const operaciones = this.getOperaciones();\r\n      operacion._id = operacion._id || Date.now().toString();\r\n      operaciones.push(operacion);\r\n      return this.saveOperaciones(operaciones);\r\n    },\r\n  \r\n    updateOperacion(operacionId, operacionData) {\r\n      const operaciones = this.getOperaciones();\r\n      const index = operaciones.findIndex(o => o._id === operacionId);\r\n      if (index !== -1) {\r\n        operaciones[index] = { ...operaciones[index], ...operacionData };\r\n        return this.saveOperaciones(operaciones);\r\n      }\r\n      return false;\r\n    },\r\n  \r\n    deleteOperacion(operacionId) {\r\n      const operaciones = this.getOperaciones();\r\n      const filteredOperaciones = operaciones.filter(o => o._id !== operacionId);\r\n      return this.saveOperaciones(filteredOperaciones);\r\n    },\r\n  \r\n    // Cupos\r\n    getCupos() {\r\n      return this.getData(STORAGE_KEYS.CUPOS, []);\r\n    },\r\n  \r\n    saveCupos(cupos) {\r\n      return this.saveData(STORAGE_KEYS.CUPOS, cupos);\r\n    },\r\n  \r\n    addCupo(cupo) {\r\n      const cupos = this.getCupos();\r\n      cupo._id = cupo._id || Date.now().toString();\r\n      cupos.push(cupo);\r\n      return this.saveCupos(cupos);\r\n    },\r\n  \r\n    updateCupo(cupoId, cupoData) {\r\n      const cupos = this.getCupos();\r\n      const index = cupos.findIndex(c => c._id === cupoId);\r\n      if (index !== -1) {\r\n        cupos[index] = { ...cupos[index], ...cupoData };\r\n        return this.saveCupos(cupos);\r\n      }\r\n      return false;\r\n    },\r\n  \r\n    deleteCupo(cupoId) {\r\n      const cupos = this.getCupos();\r\n      const filteredCupos = cupos.filter(c => c._id !== cupoId);\r\n      return this.saveCupos(filteredCupos);\r\n    },\r\n  \r\n    // Simulaciones\r\n    getSimulaciones() {\r\n      return this.getData(STORAGE_KEYS.SIMULACIONES, []);\r\n    },\r\n  \r\n    saveSimulaciones(simulaciones) {\r\n      return this.saveData(STORAGE_KEYS.SIMULACIONES, simulaciones);\r\n    },\r\n  \r\n    addSimulacion(simulacion) {\r\n      const simulaciones = this.getSimulaciones();\r\n      simulacion._id = simulacion._id || Date.now().toString();\r\n      simulaciones.push(simulacion);\r\n      return this.saveSimulaciones(simulaciones);\r\n    },\r\n  \r\n    updateSimulacion(simulacionId, simulacionData) {\r\n      const simulaciones = this.getSimulaciones();\r\n      const index = simulaciones.findIndex(s => s._id === simulacionId);\r\n      if (index !== -1) {\r\n        simulaciones[index] = { ...simulaciones[index], ...simulacionData };\r\n        return this.saveSimulaciones(simulaciones);\r\n      }\r\n      return false;\r\n    },\r\n  \r\n    deleteSimulacion(simulacionId) {\r\n      const simulaciones = this.getSimulaciones();\r\n      const filteredSimulaciones = simulaciones.filter(s => s._id !== simulacionId);\r\n      return this.saveSimulaciones(filteredSimulaciones);\r\n    },\r\n  \r\n    // Liquidaciones\r\n    getLiquidaciones() {\r\n      return this.getData(STORAGE_KEYS.LIQUIDACIONES, []);\r\n    },\r\n  \r\n    saveLiquidaciones(liquidaciones) {\r\n      return this.saveData(STORAGE_KEYS.LIQUIDACIONES, liquidaciones);\r\n    },\r\n  \r\n    addLiquidacion(liquidacion) {\r\n      const liquidaciones = this.getLiquidaciones();\r\n      liquidacion._id = liquidacion._id || Date.now().toString();\r\n      liquidaciones.push(liquidacion);\r\n      return this.saveLiquidaciones(liquidaciones);\r\n    },\r\n  \r\n    updateLiquidacion(liquidacionId, liquidacionData) {\r\n      const liquidaciones = this.getLiquidaciones();\r\n      const index = liquidaciones.findIndex(l => l._id === liquidacionId);\r\n      if (index !== -1) {\r\n        liquidaciones[index] = { ...liquidaciones[index], ...liquidacionData };\r\n        return this.saveLiquidaciones(liquidaciones);\r\n      }\r\n      return false;\r\n    },\r\n  \r\n    deleteLiquidacion(liquidacionId) {\r\n      const liquidaciones = this.getLiquidaciones();\r\n      const filteredLiquidaciones = liquidaciones.filter(l => l._id !== liquidacionId);\r\n      return this.saveLiquidaciones(filteredLiquidaciones);\r\n    }\r\n  };\r\n  \r\n  export default localStorageService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}