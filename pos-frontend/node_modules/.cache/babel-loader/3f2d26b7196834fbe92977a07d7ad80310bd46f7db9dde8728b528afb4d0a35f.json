{"ast":null,"code":"import api from './api';\nconst authService = {\n  // Función para iniciar sesión\n  async login(email, password) {\n    try {\n      const response = await api.post('/api/v1/auth/login', {\n        email,\n        password\n      });\n      if (response.data.success && response.data.token) {\n        // Guardar token y datos del usuario en localStorage\n        localStorage.setItem('token', response.data.token);\n        localStorage.setItem('user', JSON.stringify(response.data.user));\n        return {\n          success: true,\n          user: response.data.user\n        };\n      }\n      return {\n        success: false,\n        message: 'Credenciales inválidas'\n      };\n    } catch (error) {\n      console.error('Error en login:', error);\n      let errorMessage = 'Error al iniciar sesión';\n      if (error.response) {\n        errorMessage = error.response.data.error || 'Error del servidor';\n      }\n      return {\n        success: false,\n        message: errorMessage\n      };\n    }\n  },\n  // Función para cerrar sesión\n  logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  },\n  // Función para verificar si el usuario está autenticado\n  isAuthenticated() {\n    return localStorage.getItem('token') !== null;\n  },\n  // Función para obtener el usuario actual\n  getCurrentUser() {\n    const user = localStorage.getItem('user');\n    return user ? JSON.parse(user) : null;\n  },\n  // Función para obtener el token\n  getToken() {\n    return localStorage.getItem('token');\n  }\n};\nexport default authService;","map":{"version":3,"names":["api","authService","login","email","password","response","post","data","success","token","localStorage","setItem","JSON","stringify","user","message","error","console","errorMessage","logout","removeItem","window","location","href","isAuthenticated","getItem","getCurrentUser","parse","getToken"],"sources":["C:/Users/OXKR/Documents/2025/API-VENTAS/pos-frontend/src/services/auth.js"],"sourcesContent":["import api from './api';\r\n\r\nconst authService = {\r\n  // Función para iniciar sesión\r\n  async login(email, password) {\r\n    try {\r\n      const response = await api.post('/api/v1/auth/login', { email, password });\r\n      \r\n      if (response.data.success && response.data.token) {\r\n        // Guardar token y datos del usuario en localStorage\r\n        localStorage.setItem('token', response.data.token);\r\n        localStorage.setItem('user', JSON.stringify(response.data.user));\r\n        \r\n        return {\r\n          success: true,\r\n          user: response.data.user\r\n        };\r\n      }\r\n      \r\n      return {\r\n        success: false,\r\n        message: 'Credenciales inválidas'\r\n      };\r\n    } catch (error) {\r\n      console.error('Error en login:', error);\r\n      \r\n      let errorMessage = 'Error al iniciar sesión';\r\n      if (error.response) {\r\n        errorMessage = error.response.data.error || 'Error del servidor';\r\n      }\r\n      \r\n      return {\r\n        success: false,\r\n        message: errorMessage\r\n      };\r\n    }\r\n  },\r\n  \r\n  // Función para cerrar sesión\r\n  logout() {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    window.location.href = '/login';\r\n  },\r\n  \r\n  // Función para verificar si el usuario está autenticado\r\n  isAuthenticated() {\r\n    return localStorage.getItem('token') !== null;\r\n  },\r\n  \r\n  // Función para obtener el usuario actual\r\n  getCurrentUser() {\r\n    const user = localStorage.getItem('user');\r\n    return user ? JSON.parse(user) : null;\r\n  },\r\n  \r\n  // Función para obtener el token\r\n  getToken() {\r\n    return localStorage.getItem('token');\r\n  }\r\n};\r\n\r\nexport default authService; "],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,MAAMC,WAAW,GAAG;EAClB;EACA,MAAMC,KAAKA,CAACC,KAAK,EAAEC,QAAQ,EAAE;IAC3B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,oBAAoB,EAAE;QAAEH,KAAK;QAAEC;MAAS,CAAC,CAAC;MAE1E,IAAIC,QAAQ,CAACE,IAAI,CAACC,OAAO,IAAIH,QAAQ,CAACE,IAAI,CAACE,KAAK,EAAE;QAChD;QACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEN,QAAQ,CAACE,IAAI,CAACE,KAAK,CAAC;QAClDC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACR,QAAQ,CAACE,IAAI,CAACO,IAAI,CAAC,CAAC;QAEhE,OAAO;UACLN,OAAO,EAAE,IAAI;UACbM,IAAI,EAAET,QAAQ,CAACE,IAAI,CAACO;QACtB,CAAC;MACH;MAEA,OAAO;QACLN,OAAO,EAAE,KAAK;QACdO,OAAO,EAAE;MACX,CAAC;IACH,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;MAEvC,IAAIE,YAAY,GAAG,yBAAyB;MAC5C,IAAIF,KAAK,CAACX,QAAQ,EAAE;QAClBa,YAAY,GAAGF,KAAK,CAACX,QAAQ,CAACE,IAAI,CAACS,KAAK,IAAI,oBAAoB;MAClE;MAEA,OAAO;QACLR,OAAO,EAAE,KAAK;QACdO,OAAO,EAAEG;MACX,CAAC;IACH;EACF,CAAC;EAED;EACAC,MAAMA,CAAA,EAAG;IACPT,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;IAChCV,YAAY,CAACU,UAAU,CAAC,MAAM,CAAC;IAC/BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC,CAAC;EAED;EACAC,eAAeA,CAAA,EAAG;IAChB,OAAOd,YAAY,CAACe,OAAO,CAAC,OAAO,CAAC,KAAK,IAAI;EAC/C,CAAC;EAED;EACAC,cAAcA,CAAA,EAAG;IACf,MAAMZ,IAAI,GAAGJ,YAAY,CAACe,OAAO,CAAC,MAAM,CAAC;IACzC,OAAOX,IAAI,GAAGF,IAAI,CAACe,KAAK,CAACb,IAAI,CAAC,GAAG,IAAI;EACvC,CAAC;EAED;EACAc,QAAQA,CAAA,EAAG;IACT,OAAOlB,YAAY,CAACe,OAAO,CAAC,OAAO,CAAC;EACtC;AACF,CAAC;AAED,eAAexB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}