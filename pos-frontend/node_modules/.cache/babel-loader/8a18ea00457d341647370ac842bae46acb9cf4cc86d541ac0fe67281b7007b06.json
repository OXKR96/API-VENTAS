{"ast":null,"code":"import React,{createContext,useState,useEffect}from'react';import axios from'axios';import{jwtDecode}from'jwt-decode';// Correcto con desestructuraciónstalar esta dependencia\nimport{jsx as _jsx}from\"react/jsx-runtime\";export const AuthContext=/*#__PURE__*/createContext();const AuthProvider=_ref=>{let{children}=_ref;const[userInfo,setUserInfo]=useState(null);const[isLoading,setIsLoading]=useState(true);const[isAuthenticated,setIsAuthenticated]=useState(false);const[error,setError]=useState(null);useEffect(()=>{// Verificar si hay un usuario en localStorage\nconst checkLoggedIn=async()=>{const storedUser=localStorage.getItem('userInfo');if(storedUser){try{const userData=JSON.parse(storedUser);// Verificar si el token ha expirado\nif(userData.token){const isValidToken=checkTokenValidity(userData.token);if(!isValidToken){// Token expirado\nconsole.log('Sesión expirada. Por favor inicie sesión nuevamente.');logout();setIsLoading(false);return;}// Configurar axios con el token\naxios.defaults.headers.common['Authorization']=`Bearer ${userData.token}`;}setUserInfo(userData);setIsAuthenticated(true);}catch(error){console.error('Error al recuperar sesión:',error);logout();}}setIsLoading(false);};checkLoggedIn();// Configurar interceptor para manejar errores de autenticación\nconst interceptor=axios.interceptors.response.use(response=>response,error=>{if(error.response&&error.response.status===401){// Token inválido o expirado\nlogout();}return Promise.reject(error);});// Limpiar interceptor cuando el componente se desmonte\nreturn()=>{axios.interceptors.response.eject(interceptor);};},[]);// Verificar validez del token\nconst checkTokenValidity=token=>{try{const decoded=jwtDecode(token);const currentTime=Date.now()/1000;// Verificar si el token ha expirado\nif(decoded.exp<currentTime){return false;}return true;}catch(error){console.error('Error al decodificar token:',error);return false;}};// Renovar token\nconst refreshToken=async()=>{try{const response=await axios.post('/api/auth/refresh-token',{refreshToken:userInfo.refreshToken// Si tienes un refresh token\n});const{token}=response.data;// Actualizar token en userInfo\nconst updatedUserInfo={...userInfo,token};// Guardar en localStorage\nlocalStorage.setItem('userInfo',JSON.stringify(updatedUserInfo));// Actualizar axios headers\naxios.defaults.headers.common['Authorization']=`Bearer ${token}`;setUserInfo(updatedUserInfo);return true;}catch(error){console.error('Error al renovar token:',error);logout();return false;}};// Verificar y renovar token si es necesario\nconst checkAndRefreshToken=async()=>{if(!userInfo||!userInfo.token)return false;try{const decoded=jwtDecode(userInfo.token);const currentTime=Date.now()/1000;// Si el token expira en menos de 5 minutos, renovarlo\nif(decoded.exp-currentTime<300){return await refreshToken();}return true;}catch(error){console.error('Error al verificar token:',error);return false;}};// Función para iniciar sesión\nconst login=async(email,password)=>{try{setIsLoading(true);setError(null);const response=await axios.post('/api/auth/login',{email,password});const userData=response.data;// Guardar en localStorage\nlocalStorage.setItem('userInfo',JSON.stringify(userData));// Configurar axios con el token\naxios.defaults.headers.common['Authorization']=`Bearer ${userData.token}`;setUserInfo(userData);setIsAuthenticated(true);return{success:true};}catch(error){const message=error.response&&error.response.data.message?error.response.data.message:'Error al iniciar sesión';setError(message);return{success:false,message};}finally{setIsLoading(false);}};// Función para cerrar sesión\nconst logout=()=>{localStorage.removeItem('userInfo');delete axios.defaults.headers.common['Authorization'];setUserInfo(null);setIsAuthenticated(false);};// Actualizar información del usuario\nconst updateUserInfo=newUserData=>{const updatedUserInfo={...userInfo,...newUserData};localStorage.setItem('userInfo',JSON.stringify(updatedUserInfo));setUserInfo(updatedUserInfo);};// Verificar si el usuario es administrador o super usuario\nconst isAdmin=()=>{return userInfo&&(userInfo.tipo==='Administrativo'||userInfo.tipo==='Super Usuario');};// Verificar permisos específicos\nconst hasPermission=function(){let requiredRoles=arguments.length>0&&arguments[0]!==undefined?arguments[0]:['Comercial','Administrativo','Super Usuario'];return userInfo&&requiredRoles.includes(userInfo.tipo);};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{userInfo,isLoading,isAuthenticated,error,login,logout,updateUserInfo,isAdmin,hasPermission,refreshToken,checkAndRefreshToken},children:children});};export default AuthProvider;","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jwtDecode","jsx","_jsx","AuthContext","AuthProvider","_ref","children","userInfo","setUserInfo","isLoading","setIsLoading","isAuthenticated","setIsAuthenticated","error","setError","checkLoggedIn","storedUser","localStorage","getItem","userData","JSON","parse","token","isValidToken","checkTokenValidity","console","log","logout","defaults","headers","common","interceptor","interceptors","response","use","status","Promise","reject","eject","decoded","currentTime","Date","now","exp","refreshToken","post","data","updatedUserInfo","setItem","stringify","checkAndRefreshToken","login","email","password","success","message","removeItem","updateUserInfo","newUserData","isAdmin","tipo","hasPermission","requiredRoles","arguments","length","undefined","includes","Provider","value"],"sources":["C:/Users/OXKR/Documents/2025/API-VENTAS/API-VENTAS/pos-frontend/src/context/AuthContext.js"],"sourcesContent":["\r\nimport React, { createContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { jwtDecode } from 'jwt-decode'; // Correcto con desestructuraciónstalar esta dependencia\r\n\r\nexport const AuthContext = createContext();\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Verificar si hay un usuario en localStorage\r\n    const checkLoggedIn = async () => {\r\n      const storedUser = localStorage.getItem('userInfo');\r\n      \r\n      if (storedUser) {\r\n        try {\r\n          const userData = JSON.parse(storedUser);\r\n          \r\n          // Verificar si el token ha expirado\r\n          if (userData.token) {\r\n            const isValidToken = checkTokenValidity(userData.token);\r\n            \r\n            if (!isValidToken) {\r\n              // Token expirado\r\n              console.log('Sesión expirada. Por favor inicie sesión nuevamente.');\r\n              logout();\r\n              setIsLoading(false);\r\n              return;\r\n            }\r\n            \r\n            // Configurar axios con el token\r\n            axios.defaults.headers.common['Authorization'] = `Bearer ${userData.token}`;\r\n          }\r\n          \r\n          setUserInfo(userData);\r\n          setIsAuthenticated(true);\r\n        } catch (error) {\r\n          console.error('Error al recuperar sesión:', error);\r\n          logout();\r\n        }\r\n      }\r\n      \r\n      setIsLoading(false);\r\n    };\r\n\r\n    checkLoggedIn();\r\n    \r\n    // Configurar interceptor para manejar errores de autenticación\r\n    const interceptor = axios.interceptors.response.use(\r\n      (response) => response,\r\n      (error) => {\r\n        if (error.response && error.response.status === 401) {\r\n          // Token inválido o expirado\r\n          logout();\r\n        }\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n    \r\n    // Limpiar interceptor cuando el componente se desmonte\r\n    return () => {\r\n      axios.interceptors.response.eject(interceptor);\r\n    };\r\n  }, []);\r\n\r\n  // Verificar validez del token\r\n  const checkTokenValidity = (token) => {\r\n    try {\r\n      const decoded = jwtDecode(token);\r\n      const currentTime = Date.now() / 1000;\r\n      \r\n      // Verificar si el token ha expirado\r\n      if (decoded.exp < currentTime) {\r\n        return false;\r\n      }\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      console.error('Error al decodificar token:', error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Renovar token\r\n  const refreshToken = async () => {\r\n    try {\r\n      const response = await axios.post('/api/auth/refresh-token', {\r\n        refreshToken: userInfo.refreshToken // Si tienes un refresh token\r\n      });\r\n      \r\n      const { token } = response.data;\r\n      \r\n      // Actualizar token en userInfo\r\n      const updatedUserInfo = {\r\n        ...userInfo,\r\n        token\r\n      };\r\n      \r\n      // Guardar en localStorage\r\n      localStorage.setItem('userInfo', JSON.stringify(updatedUserInfo));\r\n      \r\n      // Actualizar axios headers\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      \r\n      setUserInfo(updatedUserInfo);\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      console.error('Error al renovar token:', error);\r\n      logout();\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Verificar y renovar token si es necesario\r\n  const checkAndRefreshToken = async () => {\r\n    if (!userInfo || !userInfo.token) return false;\r\n    \r\n    try {\r\n      const decoded = jwtDecode(userInfo.token);\r\n      const currentTime = Date.now() / 1000;\r\n      \r\n      // Si el token expira en menos de 5 minutos, renovarlo\r\n      if (decoded.exp - currentTime < 300) {\r\n        return await refreshToken();\r\n      }\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      console.error('Error al verificar token:', error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Función para iniciar sesión\r\n  const login = async (email, password) => {\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await axios.post('/api/auth/login', { email, password });\r\n      const userData = response.data;\r\n      \r\n      // Guardar en localStorage\r\n      localStorage.setItem('userInfo', JSON.stringify(userData));\r\n      \r\n      // Configurar axios con el token\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${userData.token}`;\r\n      \r\n      setUserInfo(userData);\r\n      setIsAuthenticated(true);\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = \r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : 'Error al iniciar sesión';\r\n      \r\n      setError(message);\r\n      return { success: false, message };\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Función para cerrar sesión\r\n  const logout = () => {\r\n    localStorage.removeItem('userInfo');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n    setUserInfo(null);\r\n    setIsAuthenticated(false);\r\n  };\r\n\r\n  // Actualizar información del usuario\r\n  const updateUserInfo = (newUserData) => {\r\n    const updatedUserInfo = { ...userInfo, ...newUserData };\r\n    localStorage.setItem('userInfo', JSON.stringify(updatedUserInfo));\r\n    setUserInfo(updatedUserInfo);\r\n  };\r\n\r\n  // Verificar si el usuario es administrador o super usuario\r\n  const isAdmin = () => {\r\n    return userInfo && (userInfo.tipo === 'Administrativo' || userInfo.tipo === 'Super Usuario');\r\n  };\r\n\r\n  // Verificar permisos específicos\r\n  const hasPermission = (requiredRoles = ['Comercial', 'Administrativo', 'Super Usuario']) => {\r\n    return userInfo && requiredRoles.includes(userInfo.tipo);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        userInfo,\r\n        isLoading,\r\n        isAuthenticated,\r\n        error,\r\n        login,\r\n        logout,\r\n        updateUserInfo,\r\n        isAdmin,\r\n        hasPermission,\r\n        refreshToken,\r\n        checkAndRefreshToken\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthProvider;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}