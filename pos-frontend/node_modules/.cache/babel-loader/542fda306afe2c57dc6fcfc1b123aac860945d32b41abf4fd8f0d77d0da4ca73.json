{"ast":null,"code":"// src/context/OfflineContext.js\nimport React,{createContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";export const OfflineContext=/*#__PURE__*/createContext();const OfflineProvider=_ref=>{let{children}=_ref;const[isOnline,setIsOnline]=useState(navigator.onLine);const[pendingOperations,setPendingOperations]=useState([]);const[lastSync,setLastSync]=useState(localStorage.getItem('lastSync')||null);// Monitorear estado de conexión\nuseEffect(()=>{const handleOnline=()=>setIsOnline(true);const handleOffline=()=>setIsOnline(false);window.addEventListener('online',handleOnline);window.addEventListener('offline',handleOffline);// Cargar operaciones pendientes\nconst stored=localStorage.getItem('pendingOperations');if(stored){setPendingOperations(JSON.parse(stored));}return()=>{window.removeEventListener('online',handleOnline);window.removeEventListener('offline',handleOffline);};},[]);// Guardar cambios en operaciones pendientes\nuseEffect(()=>{localStorage.setItem('pendingOperations',JSON.stringify(pendingOperations));},[pendingOperations]);// Función para agregar operación pendiente\nconst addPendingOperation=operation=>{setPendingOperations([...pendingOperations,{...operation,id:Date.now()}]);};// Función para sincronizar operaciones pendientes\nconst syncPendingOperations=async()=>{if(!isOnline||pendingOperations.length===0)return;// Procesar operaciones pendientes (implementar lógica según tus necesidades)\nconst newPendingOperations=[...pendingOperations];let syncSuccess=true;for(let i=0;i<newPendingOperations.length;i++){const op=newPendingOperations[i];try{// Implementar lógica según el tipo de operación\nswitch(op.type){case'CREDITO':// Lógica para sincronizar crédito\nbreak;case'ABONO':// Lógica para sincronizar abono \nbreak;default:break;}// Quitar de la lista si se sincroniza correctamente\nnewPendingOperations.splice(i,1);i--;// Ajustar índice\n}catch(error){console.error('Error sincronizando operación:',error);syncSuccess=false;}}// Actualizar lista de operaciones pendientes\nsetPendingOperations(newPendingOperations);// Actualizar fecha de última sincronización\nif(syncSuccess){const now=new Date().toISOString();localStorage.setItem('lastSync',now);setLastSync(now);}};return/*#__PURE__*/_jsx(OfflineContext.Provider,{value:{isOnline,pendingOperations,lastSync,addPendingOperation,syncPendingOperations},children:children});};export default OfflineProvider;","map":{"version":3,"names":["React","createContext","useState","useEffect","jsx","_jsx","OfflineContext","OfflineProvider","_ref","children","isOnline","setIsOnline","navigator","onLine","pendingOperations","setPendingOperations","lastSync","setLastSync","localStorage","getItem","handleOnline","handleOffline","window","addEventListener","stored","JSON","parse","removeEventListener","setItem","stringify","addPendingOperation","operation","id","Date","now","syncPendingOperations","length","newPendingOperations","syncSuccess","i","op","type","splice","error","console","toISOString","Provider","value"],"sources":["C:/Users/OXKR/Documents/2025/API-VENTAS/API-VENTAS/pos-frontend/src/context/OfflineContext.js"],"sourcesContent":["// src/context/OfflineContext.js\r\nimport React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const OfflineContext = createContext();\r\n\r\nconst OfflineProvider = ({ children }) => {\r\n  const [isOnline, setIsOnline] = useState(navigator.onLine);\r\n  const [pendingOperations, setPendingOperations] = useState([]);\r\n  const [lastSync, setLastSync] = useState(localStorage.getItem('lastSync') || null);\r\n\r\n  // Monitorear estado de conexión\r\n  useEffect(() => {\r\n    const handleOnline = () => setIsOnline(true);\r\n    const handleOffline = () => setIsOnline(false);\r\n\r\n    window.addEventListener('online', handleOnline);\r\n    window.addEventListener('offline', handleOffline);\r\n\r\n    // Cargar operaciones pendientes\r\n    const stored = localStorage.getItem('pendingOperations');\r\n    if (stored) {\r\n      setPendingOperations(JSON.parse(stored));\r\n    }\r\n\r\n    return () => {\r\n      window.removeEventListener('online', handleOnline);\r\n      window.removeEventListener('offline', handleOffline);\r\n    };\r\n  }, []);\r\n\r\n  // Guardar cambios en operaciones pendientes\r\n  useEffect(() => {\r\n    localStorage.setItem('pendingOperations', JSON.stringify(pendingOperations));\r\n  }, [pendingOperations]);\r\n\r\n  // Función para agregar operación pendiente\r\n  const addPendingOperation = (operation) => {\r\n    setPendingOperations([...pendingOperations, { ...operation, id: Date.now() }]);\r\n  };\r\n\r\n  // Función para sincronizar operaciones pendientes\r\n  const syncPendingOperations = async () => {\r\n    if (!isOnline || pendingOperations.length === 0) return;\r\n\r\n    // Procesar operaciones pendientes (implementar lógica según tus necesidades)\r\n    const newPendingOperations = [...pendingOperations];\r\n    let syncSuccess = true;\r\n\r\n    for (let i = 0; i < newPendingOperations.length; i++) {\r\n      const op = newPendingOperations[i];\r\n      \r\n      try {\r\n        // Implementar lógica según el tipo de operación\r\n        switch (op.type) {\r\n          case 'CREDITO':\r\n            // Lógica para sincronizar crédito\r\n            break;\r\n          case 'ABONO':\r\n            // Lógica para sincronizar abono \r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        \r\n        // Quitar de la lista si se sincroniza correctamente\r\n        newPendingOperations.splice(i, 1);\r\n        i--; // Ajustar índice\r\n      } catch (error) {\r\n        console.error('Error sincronizando operación:', error);\r\n        syncSuccess = false;\r\n      }\r\n    }\r\n\r\n    // Actualizar lista de operaciones pendientes\r\n    setPendingOperations(newPendingOperations);\r\n    \r\n    // Actualizar fecha de última sincronización\r\n    if (syncSuccess) {\r\n      const now = new Date().toISOString();\r\n      localStorage.setItem('lastSync', now);\r\n      setLastSync(now);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <OfflineContext.Provider\r\n      value={{\r\n        isOnline,\r\n        pendingOperations,\r\n        lastSync,\r\n        addPendingOperation,\r\n        syncPendingOperations\r\n      }}\r\n    >\r\n      {children}\r\n    </OfflineContext.Provider>\r\n  );\r\n};\r\n\r\nexport default OfflineProvider;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}