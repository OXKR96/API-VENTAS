{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OXKR\\\\Documents\\\\2025\\\\API-VENTAS\\\\API-VENTAS\\\\pos-frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\n// src/context/AuthContext.js\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Verificar si hay un usuario en localStorage (token JWT)\n    const checkAuth = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (token) {\n          // En producción: validar token con backend\n          // const response = await fetch('/api/auth/verify', {\n          //   headers: { Authorization: `Bearer ${token}` }\n          // });\n          // const data = await response.json();\n\n          // Simulación de usuario autenticado\n          const userData = JSON.parse(localStorage.getItem('user')) || {\n            _id: '1',\n            documento: '123456789',\n            nombre: 'Usuario',\n            apellido: 'Prueba',\n            tipo: 'Super Usuario',\n            email: 'usuario@creditos.com'\n          };\n          setUser(userData);\n        }\n      } catch (error) {\n        console.error('Error al verificar autenticación:', error);\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkAuth();\n  }, []);\n\n  // Función para iniciar sesión\n  const login = async (email, password) => {\n    setLoading(true);\n    try {\n      // En producción: hacer petición al backend\n      // const response = await fetch('/api/auth/login', {\n      //   method: 'POST',\n      //   headers: { 'Content-Type': 'application/json' },\n      //   body: JSON.stringify({ email, password })\n      // });\n      // const data = await response.json();\n\n      // Simulación de login exitoso\n      const token = 'sample-jwt-token';\n      const userData = {\n        _id: '1',\n        documento: '123456789',\n        nombre: 'Usuario',\n        apellido: 'Prueba',\n        tipo: 'Super Usuario',\n        email: email\n      };\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      setUser(userData);\n      return {\n        success: true\n      };\n    } catch (error) {\n      console.error('Error al iniciar sesión:', error);\n      return {\n        success: false,\n        message: 'Credenciales inválidas'\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Función para cerrar sesión\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","checkAuth","token","localStorage","getItem","userData","JSON","parse","_id","documento","nombre","apellido","tipo","email","error","console","removeItem","login","password","setItem","stringify","success","message","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/OXKR/Documents/2025/API-VENTAS/API-VENTAS/pos-frontend/src/context/AuthContext.js"],"sourcesContent":["// src/context/AuthContext.js\r\nimport React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Verificar si hay un usuario en localStorage (token JWT)\r\n    const checkAuth = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        \r\n        if (token) {\r\n          // En producción: validar token con backend\r\n          // const response = await fetch('/api/auth/verify', {\r\n          //   headers: { Authorization: `Bearer ${token}` }\r\n          // });\r\n          // const data = await response.json();\r\n          \r\n          // Simulación de usuario autenticado\r\n          const userData = JSON.parse(localStorage.getItem('user')) || {\r\n            _id: '1',\r\n            documento: '123456789',\r\n            nombre: 'Usuario',\r\n            apellido: 'Prueba',\r\n            tipo: 'Super Usuario',\r\n            email: 'usuario@creditos.com'\r\n          };\r\n          \r\n          setUser(userData);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al verificar autenticación:', error);\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  // Función para iniciar sesión\r\n  const login = async (email, password) => {\r\n    setLoading(true);\r\n    try {\r\n      // En producción: hacer petición al backend\r\n      // const response = await fetch('/api/auth/login', {\r\n      //   method: 'POST',\r\n      //   headers: { 'Content-Type': 'application/json' },\r\n      //   body: JSON.stringify({ email, password })\r\n      // });\r\n      // const data = await response.json();\r\n      \r\n      // Simulación de login exitoso\r\n      const token = 'sample-jwt-token';\r\n      const userData = {\r\n        _id: '1',\r\n        documento: '123456789',\r\n        nombre: 'Usuario',\r\n        apellido: 'Prueba',\r\n        tipo: 'Super Usuario',\r\n        email: email\r\n      };\r\n      \r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      \r\n      setUser(userData);\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Error al iniciar sesión:', error);\r\n      return { success: false, message: 'Credenciales inválidas' };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Función para cerrar sesión\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, loading, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}