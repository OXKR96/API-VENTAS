{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OXKR\\\\Documents\\\\2025\\\\API-VENTAS\\\\API-VENTAS\\\\pos-frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode'; // Asegúrate de instalar esta dependencia\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [userInfo, setUserInfo] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Verificar si hay un usuario en localStorage\n    const checkLoggedIn = async () => {\n      const storedUser = localStorage.getItem('userInfo');\n      if (storedUser) {\n        try {\n          const userData = JSON.parse(storedUser);\n\n          // Verificar si el token ha expirado\n          if (userData.token) {\n            const isValidToken = checkTokenValidity(userData.token);\n            if (!isValidToken) {\n              // Token expirado\n              console.log('Sesión expirada. Por favor inicie sesión nuevamente.');\n              logout();\n              setIsLoading(false);\n              return;\n            }\n\n            // Configurar axios con el token\n            axios.defaults.headers.common['Authorization'] = `Bearer ${userData.token}`;\n          }\n          setUserInfo(userData);\n          setIsAuthenticated(true);\n        } catch (error) {\n          console.error('Error al recuperar sesión:', error);\n          logout();\n        }\n      }\n      setIsLoading(false);\n    };\n    checkLoggedIn();\n\n    // Configurar interceptor para manejar errores de autenticación\n    const interceptor = axios.interceptors.response.use(response => response, error => {\n      if (error.response && error.response.status === 401) {\n        // Token inválido o expirado\n        logout();\n      }\n      return Promise.reject(error);\n    });\n\n    // Limpiar interceptor cuando el componente se desmonte\n    return () => {\n      axios.interceptors.response.eject(interceptor);\n    };\n  }, []);\n\n  // Verificar validez del token\n  const checkTokenValidity = token => {\n    try {\n      const decoded = jwtDecode(token);\n      const currentTime = Date.now() / 1000;\n\n      // Verificar si el token ha expirado\n      if (decoded.exp < currentTime) {\n        return false;\n      }\n      return true;\n    } catch (error) {\n      console.error('Error al decodificar token:', error);\n      return false;\n    }\n  };\n\n  // Renovar token\n  const refreshToken = async () => {\n    try {\n      const response = await axios.post('/api/auth/refresh-token', {\n        refreshToken: userInfo.refreshToken // Si tienes un refresh token\n      });\n      const {\n        token\n      } = response.data;\n\n      // Actualizar token en userInfo\n      const updatedUserInfo = {\n        ...userInfo,\n        token\n      };\n\n      // Guardar en localStorage\n      localStorage.setItem('userInfo', JSON.stringify(updatedUserInfo));\n\n      // Actualizar axios headers\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setUserInfo(updatedUserInfo);\n      return true;\n    } catch (error) {\n      console.error('Error al renovar token:', error);\n      logout();\n      return false;\n    }\n  };\n\n  // Verificar y renovar token si es necesario\n  const checkAndRefreshToken = async () => {\n    if (!userInfo || !userInfo.token) return false;\n    try {\n      const decoded = jwtDecode(userInfo.token);\n      const currentTime = Date.now() / 1000;\n\n      // Si el token expira en menos de 5 minutos, renovarlo\n      if (decoded.exp - currentTime < 300) {\n        return await refreshToken();\n      }\n      return true;\n    } catch (error) {\n      console.error('Error al verificar token:', error);\n      return false;\n    }\n  };\n\n  // Función para iniciar sesión\n  const login = async (email, password) => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      const response = await axios.post('/api/auth/login', {\n        email,\n        password\n      });\n      const userData = response.data;\n\n      // Guardar en localStorage\n      localStorage.setItem('userInfo', JSON.stringify(userData));\n\n      // Configurar axios con el token\n      axios.defaults.headers.common['Authorization'] = `Bearer ${userData.token}`;\n      setUserInfo(userData);\n      setIsAuthenticated(true);\n      return {\n        success: true\n      };\n    } catch (error) {\n      const message = error.response && error.response.data.message ? error.response.data.message : 'Error al iniciar sesión';\n      setError(message);\n      return {\n        success: false,\n        message\n      };\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Función para cerrar sesión\n  const logout = () => {\n    localStorage.removeItem('userInfo');\n    delete axios.defaults.headers.common['Authorization'];\n    setUserInfo(null);\n    setIsAuthenticated(false);\n  };\n\n  // Actualizar información del usuario\n  const updateUserInfo = newUserData => {\n    const updatedUserInfo = {\n      ...userInfo,\n      ...newUserData\n    };\n    localStorage.setItem('userInfo', JSON.stringify(updatedUserInfo));\n    setUserInfo(updatedUserInfo);\n  };\n\n  // Verificar si el usuario es administrador o super usuario\n  const isAdmin = () => {\n    return userInfo && (userInfo.tipo === 'Administrativo' || userInfo.tipo === 'Super Usuario');\n  };\n\n  // Verificar permisos específicos\n  const hasPermission = (requiredRoles = ['Comercial', 'Administrativo', 'Super Usuario']) => {\n    return userInfo && requiredRoles.includes(userInfo.tipo);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      userInfo,\n      isLoading,\n      isAuthenticated,\n      error,\n      login,\n      logout,\n      updateUserInfo,\n      isAdmin,\n      hasPermission,\n      refreshToken,\n      checkAndRefreshToken\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"T2lcgHapgjw4P5Asnigx3yWBa5w=\");\n_c = AuthProvider;\nexport default AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jwtDecode","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","userInfo","setUserInfo","isLoading","setIsLoading","isAuthenticated","setIsAuthenticated","error","setError","checkLoggedIn","storedUser","localStorage","getItem","userData","JSON","parse","token","isValidToken","checkTokenValidity","console","log","logout","defaults","headers","common","interceptor","interceptors","response","use","status","Promise","reject","eject","decoded","currentTime","Date","now","exp","refreshToken","post","data","updatedUserInfo","setItem","stringify","checkAndRefreshToken","login","email","password","success","message","removeItem","updateUserInfo","newUserData","isAdmin","tipo","hasPermission","requiredRoles","includes","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/OXKR/Documents/2025/API-VENTAS/API-VENTAS/pos-frontend/src/context/AuthContext.js"],"sourcesContent":["\r\nimport React, { createContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport jwtDecode from 'jwt-decode'; // Asegúrate de instalar esta dependencia\r\n\r\nexport const AuthContext = createContext();\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Verificar si hay un usuario en localStorage\r\n    const checkLoggedIn = async () => {\r\n      const storedUser = localStorage.getItem('userInfo');\r\n      \r\n      if (storedUser) {\r\n        try {\r\n          const userData = JSON.parse(storedUser);\r\n          \r\n          // Verificar si el token ha expirado\r\n          if (userData.token) {\r\n            const isValidToken = checkTokenValidity(userData.token);\r\n            \r\n            if (!isValidToken) {\r\n              // Token expirado\r\n              console.log('Sesión expirada. Por favor inicie sesión nuevamente.');\r\n              logout();\r\n              setIsLoading(false);\r\n              return;\r\n            }\r\n            \r\n            // Configurar axios con el token\r\n            axios.defaults.headers.common['Authorization'] = `Bearer ${userData.token}`;\r\n          }\r\n          \r\n          setUserInfo(userData);\r\n          setIsAuthenticated(true);\r\n        } catch (error) {\r\n          console.error('Error al recuperar sesión:', error);\r\n          logout();\r\n        }\r\n      }\r\n      \r\n      setIsLoading(false);\r\n    };\r\n\r\n    checkLoggedIn();\r\n    \r\n    // Configurar interceptor para manejar errores de autenticación\r\n    const interceptor = axios.interceptors.response.use(\r\n      (response) => response,\r\n      (error) => {\r\n        if (error.response && error.response.status === 401) {\r\n          // Token inválido o expirado\r\n          logout();\r\n        }\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n    \r\n    // Limpiar interceptor cuando el componente se desmonte\r\n    return () => {\r\n      axios.interceptors.response.eject(interceptor);\r\n    };\r\n  }, []);\r\n\r\n  // Verificar validez del token\r\n  const checkTokenValidity = (token) => {\r\n    try {\r\n      const decoded = jwtDecode(token);\r\n      const currentTime = Date.now() / 1000;\r\n      \r\n      // Verificar si el token ha expirado\r\n      if (decoded.exp < currentTime) {\r\n        return false;\r\n      }\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      console.error('Error al decodificar token:', error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Renovar token\r\n  const refreshToken = async () => {\r\n    try {\r\n      const response = await axios.post('/api/auth/refresh-token', {\r\n        refreshToken: userInfo.refreshToken // Si tienes un refresh token\r\n      });\r\n      \r\n      const { token } = response.data;\r\n      \r\n      // Actualizar token en userInfo\r\n      const updatedUserInfo = {\r\n        ...userInfo,\r\n        token\r\n      };\r\n      \r\n      // Guardar en localStorage\r\n      localStorage.setItem('userInfo', JSON.stringify(updatedUserInfo));\r\n      \r\n      // Actualizar axios headers\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      \r\n      setUserInfo(updatedUserInfo);\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      console.error('Error al renovar token:', error);\r\n      logout();\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Verificar y renovar token si es necesario\r\n  const checkAndRefreshToken = async () => {\r\n    if (!userInfo || !userInfo.token) return false;\r\n    \r\n    try {\r\n      const decoded = jwtDecode(userInfo.token);\r\n      const currentTime = Date.now() / 1000;\r\n      \r\n      // Si el token expira en menos de 5 minutos, renovarlo\r\n      if (decoded.exp - currentTime < 300) {\r\n        return await refreshToken();\r\n      }\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      console.error('Error al verificar token:', error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Función para iniciar sesión\r\n  const login = async (email, password) => {\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await axios.post('/api/auth/login', { email, password });\r\n      const userData = response.data;\r\n      \r\n      // Guardar en localStorage\r\n      localStorage.setItem('userInfo', JSON.stringify(userData));\r\n      \r\n      // Configurar axios con el token\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${userData.token}`;\r\n      \r\n      setUserInfo(userData);\r\n      setIsAuthenticated(true);\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = \r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : 'Error al iniciar sesión';\r\n      \r\n      setError(message);\r\n      return { success: false, message };\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Función para cerrar sesión\r\n  const logout = () => {\r\n    localStorage.removeItem('userInfo');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n    setUserInfo(null);\r\n    setIsAuthenticated(false);\r\n  };\r\n\r\n  // Actualizar información del usuario\r\n  const updateUserInfo = (newUserData) => {\r\n    const updatedUserInfo = { ...userInfo, ...newUserData };\r\n    localStorage.setItem('userInfo', JSON.stringify(updatedUserInfo));\r\n    setUserInfo(updatedUserInfo);\r\n  };\r\n\r\n  // Verificar si el usuario es administrador o super usuario\r\n  const isAdmin = () => {\r\n    return userInfo && (userInfo.tipo === 'Administrativo' || userInfo.tipo === 'Super Usuario');\r\n  };\r\n\r\n  // Verificar permisos específicos\r\n  const hasPermission = (requiredRoles = ['Comercial', 'Administrativo', 'Super Usuario']) => {\r\n    return userInfo && requiredRoles.includes(userInfo.tipo);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        userInfo,\r\n        isLoading,\r\n        isAuthenticated,\r\n        error,\r\n        login,\r\n        logout,\r\n        updateUserInfo,\r\n        isAdmin,\r\n        hasPermission,\r\n        refreshToken,\r\n        checkAndRefreshToken\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthProvider;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}