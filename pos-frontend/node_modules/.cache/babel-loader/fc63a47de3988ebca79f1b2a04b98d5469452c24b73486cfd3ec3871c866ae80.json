{"ast":null,"code":"// src/services/api.js\nimport axios from 'axios';\nimport { API_URL } from '../config';\n\n// Crear una instancia de axios con la URL base\nconst api = axios.create({\n  baseURL: API_URL,\n  timeout: 10000 // Timeout de 10 segundos\n});\n\n// Interceptor para agregar el token a todas las solicitudes\napi.interceptors.request.use(config => {\n  console.log('Enviando solicitud a:', config.url);\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  console.error('Error en la solicitud:', error);\n  return Promise.reject(error);\n});\n\n// Interceptor para manejar errores de respuesta\napi.interceptors.response.use(response => {\n  console.log('Respuesta recibida de:', response.config.url);\n  return response;\n}, error => {\n  console.error('Error en la respuesta:', error);\n  if (error.response) {\n    console.error('Detalles del error:', {\n      status: error.response.status,\n      data: error.response.data,\n      url: error.config.url\n    });\n  }\n\n  // Si recibimos un 401 (No autorizado), podría ser que el token expiró\n  if (error.response && error.response.status === 401) {\n    // Limpiar el almacenamiento local y redirigir al login\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Servicios para Aliados\nconst aliadoService = {\n  getAll: async (filters = {}) => {\n    try {\n      const response = await api.get('/aliados', {\n        params: filters\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error al obtener aliados:', error);\n      throw error;\n    }\n  },\n  getById: async id => {\n    try {\n      const response = await api.get(`/aliados/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error al obtener aliado ${id}:`, error);\n      throw error;\n    }\n  },\n  create: async data => {\n    try {\n      const response = await api.post('/aliados', data);\n      return response.data;\n    } catch (error) {\n      console.error('Error al crear aliado:', error);\n      throw error;\n    }\n  },\n  update: async (id, data) => {\n    try {\n      const response = await api.put(`/aliados/${id}`, data);\n      return response.data;\n    } catch (error) {\n      console.error(`Error al actualizar aliado ${id}:`, error);\n      throw error;\n    }\n  },\n  delete: async id => {\n    try {\n      const response = await api.delete(`/aliados/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error al eliminar aliado ${id}:`, error);\n      throw error;\n    }\n  },\n  updateEstado: async (id, estado) => {\n    try {\n      const response = await api.patch(`/aliados/${id}/estado`, {\n        estado\n      });\n      return response.data;\n    } catch (error) {\n      console.error(`Error al actualizar estado de aliado ${id}:`, error);\n      throw error;\n    }\n  }\n};\n\n// Servicios para Sucursales\nconst sucursalService = {\n  getAll: async (filters = {}) => {\n    try {\n      const response = await api.get('/sucursales', {\n        params: filters\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error al obtener sucursales:', error);\n      throw error;\n    }\n  },\n  getById: async id => {\n    try {\n      const response = await api.get(`/sucursales/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error al obtener sucursal ${id}:`, error);\n      throw error;\n    }\n  },\n  create: async data => {\n    try {\n      const response = await api.post('/sucursales', data);\n      return response.data;\n    } catch (error) {\n      console.error('Error al crear sucursal:', error);\n      throw error;\n    }\n  },\n  update: async (id, data) => {\n    try {\n      const response = await api.put(`/sucursales/${id}`, data);\n      return response.data;\n    } catch (error) {\n      console.error(`Error al actualizar sucursal ${id}:`, error);\n      throw error;\n    }\n  },\n  delete: async id => {\n    try {\n      const response = await api.delete(`/sucursales/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error al eliminar sucursal ${id}:`, error);\n      throw error;\n    }\n  },\n  updateEstado: async (id, estado) => {\n    try {\n      const response = await api.patch(`/sucursales/${id}/estado`, {\n        estado\n      });\n      return response.data;\n    } catch (error) {\n      console.error(`Error al actualizar estado de sucursal ${id}:`, error);\n      throw error;\n    }\n  },\n  getByAliado: async aliadoId => {\n    try {\n      const response = await api.get(`/aliados/${aliadoId}/sucursales`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error al obtener sucursales del aliado ${aliadoId}:`, error);\n      throw error;\n    }\n  }\n};\n\n// Servicios para Liquidaciones\nconst liquidacionService = {\n  getAll: async (filters = {}) => {\n    try {\n      const response = await api.get('/liquidaciones', {\n        params: filters\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error al obtener liquidaciones:', error);\n      throw error;\n    }\n  },\n  getById: async id => {\n    try {\n      const response = await api.get(`/liquidaciones/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error al obtener liquidación ${id}:`, error);\n      throw error;\n    }\n  },\n  create: async data => {\n    try {\n      const response = await api.post('/liquidaciones', data);\n      return response.data;\n    } catch (error) {\n      console.error('Error al crear liquidación:', error);\n      throw error;\n    }\n  },\n  updateEstado: async (id, estado, numeroReferencia = null) => {\n    try {\n      const data = {\n        estado\n      };\n      if (numeroReferencia) {\n        data.numeroReferencia = numeroReferencia;\n      }\n      const response = await api.patch(`/liquidaciones/${id}/estado`, data);\n      return response.data;\n    } catch (error) {\n      console.error(`Error al actualizar estado de liquidación ${id}:`, error);\n      throw error;\n    }\n  },\n  getOperacionesParaLiquidar: async aliadoId => {\n    try {\n      const response = await api.get(`/aliados/${aliadoId}/operaciones-para-liquidar`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error al obtener operaciones para liquidar del aliado ${aliadoId}:`, error);\n      throw error;\n    }\n  }\n};\n\n// Servicios para Usuarios (Empleados)\nconst userService = {\n  getAll: async () => {\n    try {\n      const response = await api.get('/users');\n      return response.data;\n    } catch (error) {\n      console.error('Error al obtener usuarios:', error);\n      throw error;\n    }\n  },\n  getById: async id => {\n    try {\n      const response = await api.get(`/users/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error al obtener usuario ${id}:`, error);\n      throw error;\n    }\n  },\n  create: async data => {\n    try {\n      const response = await api.post('/users', data);\n      return response.data;\n    } catch (error) {\n      console.error('Error al crear usuario:', error);\n      throw error;\n    }\n  },\n  update: async (id, data) => {\n    try {\n      const response = await api.put(`/users/${id}`, data);\n      return response.data;\n    } catch (error) {\n      console.error(`Error al actualizar usuario ${id}:`, error);\n      throw error;\n    }\n  },\n  delete: async id => {\n    try {\n      const response = await api.delete(`/users/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error al eliminar usuario ${id}:`, error);\n      throw error;\n    }\n  },\n  updateStatus: async (id, status) => {\n    try {\n      const response = await api.patch(`/users/${id}/status`, {\n        status\n      });\n      return response.data;\n    } catch (error) {\n      console.error(`Error al actualizar estado de usuario ${id}:`, error);\n      throw error;\n    }\n  }\n};\n\n// Servicios para Operaciones\nconst operacionService = {\n  getAll: async (filters = {}) => {\n    try {\n      const response = await api.get('/operaciones', {\n        params: filters\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error al obtener operaciones:', error);\n      throw error;\n    }\n  },\n  getById: async id => {\n    try {\n      const response = await api.get(`/operaciones/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error al obtener operación ${id}:`, error);\n      throw error;\n    }\n  },\n  create: async data => {\n    try {\n      const response = await api.post('/operaciones', data);\n      return response.data;\n    } catch (error) {\n      console.error('Error al crear operación:', error);\n      throw error;\n    }\n  },\n  update: async (id, data) => {\n    try {\n      const response = await api.put(`/operaciones/${id}`, data);\n      return response.data;\n    } catch (error) {\n      console.error(`Error al actualizar operación ${id}:`, error);\n      throw error;\n    }\n  },\n  updateEstado: async (id, estado) => {\n    try {\n      const response = await api.patch(`/operaciones/${id}/estado`, {\n        estado\n      });\n      return response.data;\n    } catch (error) {\n      console.error(`Error al actualizar estado de operación ${id}:`, error);\n      throw error;\n    }\n  }\n};\n\n// Servicios para Cupos\nconst cupoService = {\n  getAll: async (filters = {}) => {\n    try {\n      const response = await api.get('/cupos', {\n        params: filters\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error al obtener cupos:', error);\n      throw error;\n    }\n  },\n  getById: async id => {\n    try {\n      const response = await api.get(`/cupos/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error al obtener cupo ${id}:`, error);\n      throw error;\n    }\n  },\n  create: async data => {\n    try {\n      const response = await api.post('/cupos', data);\n      return response.data;\n    } catch (error) {\n      console.error('Error al crear cupo:', error);\n      throw error;\n    }\n  },\n  update: async (id, data) => {\n    try {\n      const response = await api.put(`/cupos/${id}`, data);\n      return response.data;\n    } catch (error) {\n      console.error(`Error al actualizar cupo ${id}:`, error);\n      throw error;\n    }\n  },\n  updateEstado: async (id, estado) => {\n    try {\n      const response = await api.patch(`/cupos/${id}/estado`, {\n        estado\n      });\n      return response.data;\n    } catch (error) {\n      console.error(`Error al actualizar estado de cupo ${id}:`, error);\n      throw error;\n    }\n  }\n};\n\n// Servicios para Simulaciones\nconst simulacionService = {\n  getAll: async (filters = {}) => {\n    try {\n      const response = await api.get('/simulaciones', {\n        params: filters\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error al obtener simulaciones:', error);\n      throw error;\n    }\n  },\n  create: async data => {\n    try {\n      const response = await api.post('/simulaciones', data);\n      return response.data;\n    } catch (error) {\n      console.error('Error al crear simulación:', error);\n      throw error;\n    }\n  }\n};\n\n// Exportar servicios\nexport { aliadoService, sucursalService, liquidacionService, userService, operacionService, cupoService, simulacionService };\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","timeout","interceptors","request","use","config","console","log","url","token","localStorage","getItem","headers","Authorization","error","Promise","reject","response","status","data","removeItem","window","location","href","aliadoService","getAll","filters","get","params","getById","id","post","update","put","delete","updateEstado","estado","patch","sucursalService","getByAliado","aliadoId","liquidacionService","numeroReferencia","getOperacionesParaLiquidar","userService","updateStatus","operacionService","cupoService","simulacionService"],"sources":["C:/Users/OXKR/Documents/2025/API-VENTAS/pos-frontend/src/services/api.js"],"sourcesContent":["// src/services/api.js\r\nimport axios from 'axios';\r\nimport { API_URL } from '../config';\r\n\r\n// Crear una instancia de axios con la URL base\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  timeout: 10000, // Timeout de 10 segundos\r\n});\r\n\r\n// Interceptor para agregar el token a todas las solicitudes\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    console.log('Enviando solicitud a:', config.url);\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('Error en la solicitud:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Interceptor para manejar errores de respuesta\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    console.log('Respuesta recibida de:', response.config.url);\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error('Error en la respuesta:', error);\r\n    if (error.response) {\r\n      console.error('Detalles del error:', {\r\n        status: error.response.status,\r\n        data: error.response.data,\r\n        url: error.config.url\r\n      });\r\n    }\r\n    \r\n    // Si recibimos un 401 (No autorizado), podría ser que el token expiró\r\n    if (error.response && error.response.status === 401) {\r\n      // Limpiar el almacenamiento local y redirigir al login\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Servicios para Aliados\r\nconst aliadoService = {\r\n  getAll: async (filters = {}) => {\r\n    try {\r\n      const response = await api.get('/aliados', { params: filters });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al obtener aliados:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getById: async (id) => {\r\n    try {\r\n      const response = await api.get(`/aliados/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error al obtener aliado ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  create: async (data) => {\r\n    try {\r\n      const response = await api.post('/aliados', data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al crear aliado:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  update: async (id, data) => {\r\n    try {\r\n      const response = await api.put(`/aliados/${id}`, data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error al actualizar aliado ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  delete: async (id) => {\r\n    try {\r\n      const response = await api.delete(`/aliados/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error al eliminar aliado ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  updateEstado: async (id, estado) => {\r\n    try {\r\n      const response = await api.patch(`/aliados/${id}/estado`, { estado });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error al actualizar estado de aliado ${id}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\n// Servicios para Sucursales\r\nconst sucursalService = {\r\n  getAll: async (filters = {}) => {\r\n    try {\r\n      const response = await api.get('/sucursales', { params: filters });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al obtener sucursales:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getById: async (id) => {\r\n    try {\r\n      const response = await api.get(`/sucursales/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error al obtener sucursal ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  create: async (data) => {\r\n    try {\r\n      const response = await api.post('/sucursales', data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al crear sucursal:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  update: async (id, data) => {\r\n    try {\r\n      const response = await api.put(`/sucursales/${id}`, data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error al actualizar sucursal ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  delete: async (id) => {\r\n    try {\r\n      const response = await api.delete(`/sucursales/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error al eliminar sucursal ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  updateEstado: async (id, estado) => {\r\n    try {\r\n      const response = await api.patch(`/sucursales/${id}/estado`, { estado });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error al actualizar estado de sucursal ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getByAliado: async (aliadoId) => {\r\n    try {\r\n      const response = await api.get(`/aliados/${aliadoId}/sucursales`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error al obtener sucursales del aliado ${aliadoId}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\n// Servicios para Liquidaciones\r\nconst liquidacionService = {\r\n  getAll: async (filters = {}) => {\r\n    try {\r\n      const response = await api.get('/liquidaciones', { params: filters });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al obtener liquidaciones:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getById: async (id) => {\r\n    try {\r\n      const response = await api.get(`/liquidaciones/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error al obtener liquidación ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  create: async (data) => {\r\n    try {\r\n      const response = await api.post('/liquidaciones', data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al crear liquidación:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  updateEstado: async (id, estado, numeroReferencia = null) => {\r\n    try {\r\n      const data = { estado };\r\n      if (numeroReferencia) {\r\n        data.numeroReferencia = numeroReferencia;\r\n      }\r\n      const response = await api.patch(`/liquidaciones/${id}/estado`, data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error al actualizar estado de liquidación ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getOperacionesParaLiquidar: async (aliadoId) => {\r\n    try {\r\n      const response = await api.get(`/aliados/${aliadoId}/operaciones-para-liquidar`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error al obtener operaciones para liquidar del aliado ${aliadoId}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\n// Servicios para Usuarios (Empleados)\r\nconst userService = {\r\n  getAll: async () => {\r\n    try {\r\n      const response = await api.get('/users');\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al obtener usuarios:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getById: async (id) => {\r\n    try {\r\n      const response = await api.get(`/users/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error al obtener usuario ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  create: async (data) => {\r\n    try {\r\n      const response = await api.post('/users', data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al crear usuario:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  update: async (id, data) => {\r\n    try {\r\n      const response = await api.put(`/users/${id}`, data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error al actualizar usuario ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  delete: async (id) => {\r\n    try {\r\n      const response = await api.delete(`/users/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error al eliminar usuario ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  updateStatus: async (id, status) => {\r\n    try {\r\n      const response = await api.patch(`/users/${id}/status`, { status });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error al actualizar estado de usuario ${id}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\n// Servicios para Operaciones\r\nconst operacionService = {\r\n  getAll: async (filters = {}) => {\r\n    try {\r\n      const response = await api.get('/operaciones', { params: filters });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al obtener operaciones:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getById: async (id) => {\r\n    try {\r\n      const response = await api.get(`/operaciones/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error al obtener operación ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  create: async (data) => {\r\n    try {\r\n      const response = await api.post('/operaciones', data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al crear operación:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  update: async (id, data) => {\r\n    try {\r\n      const response = await api.put(`/operaciones/${id}`, data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error al actualizar operación ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  updateEstado: async (id, estado) => {\r\n    try {\r\n      const response = await api.patch(`/operaciones/${id}/estado`, { estado });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error al actualizar estado de operación ${id}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\n// Servicios para Cupos\r\nconst cupoService = {\r\n  getAll: async (filters = {}) => {\r\n    try {\r\n      const response = await api.get('/cupos', { params: filters });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al obtener cupos:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getById: async (id) => {\r\n    try {\r\n      const response = await api.get(`/cupos/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error al obtener cupo ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  create: async (data) => {\r\n    try {\r\n      const response = await api.post('/cupos', data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al crear cupo:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  update: async (id, data) => {\r\n    try {\r\n      const response = await api.put(`/cupos/${id}`, data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error al actualizar cupo ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  updateEstado: async (id, estado) => {\r\n    try {\r\n      const response = await api.patch(`/cupos/${id}/estado`, { estado });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error al actualizar estado de cupo ${id}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\n// Servicios para Simulaciones\r\nconst simulacionService = {\r\n  getAll: async (filters = {}) => {\r\n    try {\r\n      const response = await api.get('/simulaciones', { params: filters });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al obtener simulaciones:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  create: async (data) => {\r\n    try {\r\n      const response = await api.post('/simulaciones', data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al crear simulación:', error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\n// Exportar servicios\r\nexport { \r\n  aliadoService, \r\n  sucursalService, \r\n  liquidacionService, \r\n  userService, \r\n  operacionService, \r\n  cupoService, \r\n  simulacionService \r\n};\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}